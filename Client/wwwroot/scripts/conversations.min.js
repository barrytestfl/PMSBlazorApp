var s = {
    4294: function() {
        function n(e) {
            f = $(e).parents("tr").find("td").first().text()
        }
        function o() {
            var e = $(this)
              , o = (h = e.attr("data-guestref"),
            e.attr("data-guestculture"))
              , s = (y = e.attr("data-sourcecode"),
            e.attr("data-externalshortname"));
            n(e),
            m = e.closest(u.flyoutStack),
            r(!0),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "create-conversation",
                url: eviivoSuiteApp + "/api/conversations/create",
                data: {
                    PropertyShortname: d.propertyShortName,
                    OrderReference: d.orderReference,
                    BookingReference: d.bookingReference,
                    ChannelReference: d.channelReference,
                    OrderSourceCode: d.orderSourceCode,
                    DistributorShortname: d.distributorShortName,
                    GuestReference: h,
                    GuestCultureCode: o,
                    BusinessId: d.businessId,
                    SourceCode: y,
                    ExternalShortname: s
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    r(!1),
                    eviivo.webcore.parsers.stringToBool(e) ? (eviivo.webcore.ajaxHelper.executeAjax({
                        actionId: "new-conversation-creating",
                        url: "".concat(eviivoSuiteApp, "/conversations/new-conversation-creating"),
                        method: eviivo.webcore.ajaxHelper.methods.GET,
                        contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_HTML_UTF8,
                        dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                        callback: i,
                        failCallback: function() {
                            eviivo.pms.conversations.failCallback(p.resources.errorCreateConversation)
                        }
                    }),
                    l(d)) : eviivo.pms.conversations.failCallback(p.resources.errorCreateConversation)
                },
                failCallback: function() {
                    r(!1),
                    eviivo.pms.conversations.failCallback(p.resources.errorCreateConversation)
                }
            })
        }
        function i(e) {
            0 == $(u.flyoutConversationCreating).length && ((0 < m.length ? m : $("body")).append(e),
            eviivo.component.flyout.showFlyout(u.flyoutConversationCreating))
        }
        function s(e) {
            return y == eviivo.pms.conversations.constants.getConversationSource().eviivoSystem ? e / 3 : e
        }
        function t(o) {
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "booking-conversation-exists",
                url: eviivoSuiteApp + "/api/conversations/exists",
                data: {
                    BookingReference: d.bookingReference,
                    OrderReference: d.orderReference,
                    GuestReference: h,
                    SourceCode: y
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    null != e ? (e = e,
                    a(),
                    l(d),
                    c(e)) : g >= o.retryAmount ? ((e = $(".s-conversation-creation")).find(".s-spinner").addClass("hide"),
                    e.find(".s-error").removeClass("hide")) : (g++,
                    setTimeout(t, s(o.refreshTime), o))
                }
            })
        }
        function a() {
            0 < $(u.flyoutConversationCreating).length && $(u.flyoutConversationCreating).remove()
        }
        function r(e) {
            0 != (w = null == w ? $(u.newBtn).find(u.genericSpinnerClass) : w).length && (e ? w.removeClass("hide") : w.addClass("hide"))
        }
        function v() {
            var e = $(this);
            n(e),
            c(e.attr("data-conversation"))
        }
        function c(e) {
            $(".comms-item-content").tip(),
            eviivo.pms.conversations.conversation.openedFromBooking.set = !0,
            eviivo.pms.conversations.messages.flyout.id.set = e,
            eviivo.component.flyout.updateTitle(u.flyout.replace("#", ""), ".s-heading-title", f),
            eviivo.pms.conversations.messages.flyout.show()
        }
        function l(e) {
            d = e;
            var e = eviivo.pms.conversations.constants.getConversationSource().direct
              , t = (d.isOta && p.otaSourceDistributorsList.includes(d.distributorShortName.toLowerCase()) && (e = eviivo.pms.conversations.constants.getConversationSource().ota),
            d.conversationSource = e,
            [])
              , e = eviivo.eagle.viewBookingPopup.getBookingViewModel().Guest
              , o = (null != e && s(e.FullNameWithoutTitle, e.Email, e.Id, "billing", e.DefaultCultureCode),
            eviivo.eagle.viewBookingPopup.getBookingViewModel().Order.LeadGuest);
            function s(e, o, s, n, i) {
                "" != i && null != i || (i = eviivo.pms.businessSettingsAndDefaultMessages.getValue(d.businessId).DefaultCultureCode),
                t.push({
                    DisplayName: e,
                    Email: o,
                    Id: s,
                    Type: n,
                    CultureCode: i
                })
            }
            null == o || null != e && e.Id == o.Id || s(o.FullNameWithoutTitle, o.Email, o.Id, "lead", o.DefaultCultureCode),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "booking-conversation-details-".concat(d.bookingId),
                url: eviivoSuiteApp + "/conversations/booking",
                data: {
                    BusinessId: d.businessId,
                    BookingReference: d.bookingReference,
                    OrderReference: d.orderReference,
                    DistributorShortName: d.distributorShortName,
                    Guests: t
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                callback: function(e) {
                    null != e && $(u.messagesContainer).html(e)
                }
            })
        }
        var u, p, d, m, g, f, w, h, y;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.commsTab = window.eviivo.pms.conversations.commsTab || {},
        window.eviivo.pms.conversations.commsTab = (u = eviivo.pms.conversations.selectors,
        p = {},
        d = {},
        g = 0,
        y = h = w = f = m = null,
        {
            load: l,
            init: function(e) {
                null != e && ((p = e).otaSourceDistributorsList = p.otaSourceDistributors.split(","),
                eviivo.pms.conversations.initFromFlyout({
                    isStaff: e.isStaff,
                    resources: e.resources
                })),
                $(u.messagesContainer).on("click", u.newBtn, o),
                $(u.messagesContainer).on("click", u.viewBtn, v),
                0 == $("".concat(u.flyoutStack, " ").concat(u.flyout)).length && $(u.flyoutStack).append($(u.flyout))
            },
            getBookingDetails: function() {
                return d
            },
            newConversationFlyoutOnClose: a,
            startCreationRefresh: function(e) {
                var o = e.errorTime / e.refreshTime;
                e.retryAmount = o,
                setTimeout(t, s(e.refreshTime), e)
            }
        })
    },
    5494: function() {
        var e, o, s, n, i, t, a, r, v, c;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.constants = window.eviivo.pms.conversations.constants || {},
        window.eviivo.pms.conversations.constants = (e = {
            messages: "GTMSG",
            reviews: "GTREV",
            owners: "OWMSG",
            teams: "teams",
            cleaners: "SUMSG",
            concierge: "EVCW"
        },
        o = {
            Locked: "LOCK",
            Draft: "DRAFT",
            Sent: "SENT",
            Delivered: "DLD",
            ReadReceipt: "RDREC",
            Failed: "FTD",
            Obfuscated: "OBF"
        },
        s = {
            eviivoUser: "EVUSR",
            eviivoGuest: "EVGST",
            partnerGuest: "PRGST",
            eviivoConciergeBot: "EVCWB",
            eviivoConciergeGuest: "EVCWG"
        },
        n = {
            Unread: "UREAD",
            Read: "READ",
            Closed: "CLS",
            Hidden: "DEL",
            Archived: "HDD"
        },
        i = {
            Unreplied: "UNREPLIED",
            Replied: "REPLIED",
            NotApplicable: "NotApplicable"
        },
        t = {
            notRecommended: "NOREC",
            notSpecified: "NOSPC",
            recommended: "REC"
        },
        a = {
            direct: "DRECT",
            eviivoSystem: "EVSYS",
            isv: "ISV",
            ota: "OTA"
        },
        r = {
            email: "EML",
            conversation: "CNV",
            message: "MSG",
            review: "REV"
        },
        v = {
            left: "left",
            right: "right",
            middle: "middle"
        },
        c = {
            image: "IMAGE",
            file: "FILE"
        },
        {
            getConversationTypes: function() {
                return e
            },
            getDeliveryStatusCodes: function() {
                return o
            },
            getParticipantTypeCode: function() {
                return s
            },
            getMessageStatusCode: function() {
                return n
            },
            getItemRepliedStatus: function() {
                return i
            },
            getReviewWouldRecommend: function() {
                return t
            },
            getConversationSource: function() {
                return a
            },
            getLinkedEntityType: function() {
                return r
            },
            getMessageAlignment: function() {
                return v
            },
            getAttachmentTypeCode: function() {
                return c
            }
        })
    },
    9017: function() {
        function i(e) {
            return eviivo.component.listing.getATablesRowData(n.conversationsList, e)
        }
        function o() {
            var o = eviivo.pms.conversations.conversation.id.get
              , s = i(o)
              , n = !s.Pinned;
            s.Pinned = n,
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "pin-".concat(o),
                url: eviivoSuiteApp + "/api/conversations/pin",
                data: {
                    ConversationId: o,
                    Value: n
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    eviivo.webcore.parsers.stringToBool(e) ? eviivo.pms.conversations.updateRowData(o, s) : eviivo.pms.conversations.failCallback(t.resources.errorPinning),
                    eviivo.pms.conversations.messages.updatePinStateInMessageHeader(n)
                },
                failCallback: function() {
                    eviivo.pms.conversations.failCallback(t.resources.errorPinning)
                }
            })
        }
        function s() {
            var e;
            return eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.review.flyout.propertyShortname() : S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().propertyShortName : (eviivo.pms.conversations.messages.flyout.isActive(),
            eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.messages.info.flyout.propertyShortname() : "" != (e = eviivo.pms.conversations.info.getPropertyShortname()) ? e : eviivo.pms.conversations.conversation.propertyShortname.get)
        }
        var t, n, a, r, v, c, l, u, p, d, m, g, f, w, h, e, y, b, C, T, S, I;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.conversation = window.eviivo.pms.conversations.conversation || {},
        window.eviivo.pms.conversations.conversation = (t = {},
        n = {},
        y = {
            value: 0,
            getCoreIdFromMainList: function() {
                return this.value
            },
            get get() {
                var e = eviivo.pms.conversations.review.flyout.id.get;
                return 0 != e && eviivo.pms.conversations.review.flyout.isActive() || 0 != (e = eviivo.pms.conversations.messages.flyout.id.get) && eviivo.pms.conversations.messages.flyout.isActive() || 0 != (e = eviivo.pms.conversations.messages.info.flyout.id.get) && eviivo.pms.conversations.messages.info.flyout.isActive() ? e : this.value
            },
            set set(e) {
                var o;
                f.set = this.value,
                0 == e || S.get || I.get || (o = i(e),
                a.set = o.PropertyId,
                r.set = o.PropertyShortName,
                u.set = o.Source,
                l.set = o.SourceShortName,
                w.set = o.Archived,
                h.set = o.Pinned,
                c.set = o.RoomId,
                v.set = o.RoomTypeId,
                p.set = o.BookingEnquiryReference,
                m.set = o.OrderReference,
                d.set = o.BookingReference,
                g.set = o.ExternalReferenceId),
                this.value = e
            }
        },
        a = {
            value: 0,
            get get() {
                return eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.info.flyout.getPropertyId() : this.value
            },
            set set(e) {
                this.value = e
            }
        },
        r = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        v = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        c = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        l = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        u = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        p = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        d = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        m = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        g = {
            value: "",
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        h = {
            value: !(w = {
                value: !(f = {
                    value: 0,
                    get get() {
                        return this.value
                    },
                    set set(e) {
                        this.value = e
                    }
                }),
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            }),
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        {
            init: function(e) {
                t = eviivo.util.extend(t, e),
                n = eviivo.pms.conversations.selectors,
                eviivo.pms.conversations.conversation.type.set = t.conversationType,
                $(n.messageHeaderContainer).off("click", n.pin).on("click", n.pin, o)
            },
            id: y,
            previousId: f,
            allowNewMessages: {
                value: !(e = {
                    value: null,
                    get get() {
                        return eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.constants.getConversationTypes().reviews : S.get ? eviivo.pms.conversations.constants.getConversationTypes().messages : this.value
                    },
                    set set(e) {
                        this.value = e
                    }
                }),
                get get() {
                    return !!eviivo.pms.conversations.isMessage(e.get) || this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            isPinned: function() {
                return h.get
            },
            isArchived: function() {
                return w.get
            },
            type: e,
            source: u,
            propertyShortname: r,
            propertyId: a,
            openedFromBooking: S = {
                value: !(T = {
                    value: !(C = {
                        value: !(b = {
                            value: !(y = {
                                value: !1,
                                get get() {
                                    return !eviivo.pms.conversations.isReview(e.get) && this.value
                                },
                                set set(e) {
                                    this.value = e
                                }
                            }),
                            get get() {
                                return !eviivo.pms.conversations.isReview(e.get) && this.value
                            },
                            set set(e) {
                                this.value = e
                            }
                        }),
                        get get() {
                            return !eviivo.pms.conversations.isReview(e.get) && this.value
                        },
                        set set(e) {
                            this.value = e
                        }
                    }),
                    get get() {
                        return !eviivo.pms.conversations.isReview(e.get) && this.value
                    },
                    set set(e) {
                        (this.value = e) ? eviivo.pms.conversations.message.translation.showToggle(!0) : eviivo.pms.conversations.message.translation.showToggle(!1)
                    }
                }),
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            openedFromFlyout: I = {
                value: !1,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            markAsReplied: function() {
                S.get || eviivo.pms.conversations.messages.flyout.isActive() || eviivo.pms.conversations.replied()
            },
            recpientName: {
                value: null,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            getPropertyShortname: s,
            getSource: function() {
                return eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.review.flyout.conversationSource() : S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().conversationSource : eviivo.pms.conversations.messages.flyout.isActive() ? eviivo.pms.conversations.messages.flyout.conversationSource() : eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.messages.info.flyout.conversationSource() : eviivo.pms.conversations.conversation.source.get
            },
            getBookingReference: function() {
                var e;
                return eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.review.flyout.bookingReference() : S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().bookingReference : (eviivo.pms.conversations.messages.flyout.isActive(),
                eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.messages.info.flyout.bookingReference() : null != (e = eviivo.pms.conversations.info.getBookingReference()) && "" != e ? e : d.get)
            },
            getOrderReference: function() {
                var e;
                return eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.review.flyout.orderReference() : S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().orderReference : eviivo.pms.conversations.messages.flyout.isActive() ? eviivo.pms.conversations.messages.flyout.orderReference() : eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.messages.info.flyout.orderReference() : null != (e = eviivo.pms.conversations.info.getOrderReference()) && "" != e ? e : m.get
            },
            sync: function() {
                var e = eviivo.pms.conversations.conversation.id.get;
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "conversation-sync-".concat(e),
                    url: "".concat(eviivoSuiteApp, "/api/conversations/conversation-sync?conversationId=").concat(e, "&propertyShortname=").concat(s()),
                    method: eviivo.webcore.ajaxHelper.methods.GET,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {},
                    failCallback: function() {}
                })
            },
            allowImageAttachments: y,
            allowFileAttachments: b,
            getSourceShortName: function() {
                if (S.get) {
                    var e = eviivo.pms.conversations.messages.getData();
                    if (null != e[0].ExternalShortName)
                        return e[0].ExternalShortName
                }
                return l.get
            },
            getRoomTypeId: function() {
                return S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().roomTypeId : v.get
            },
            getRoomId: function() {
                return S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().roomId : c.get
            },
            allowAttachmentsSentWithoutMessage: C,
            enquiryReference: p,
            allowViewTranslations: T,
            getExternalReferenceId: function() {
                return S.get ? eviivo.pms.conversations.commsTab.getBookingDetails().externalReferenceId : eviivo.pms.conversations.messages.flyout.isActive() ? eviivo.pms.conversations.messages.flyout.externalReferenceId() : eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.messages.info.flyout.externalReferenceId() : g.get
            }
        })
    },
    2028: function() {
        function m(e, o) {
            return '<span class="'.concat(e, '">').concat(o, "</span>")
        }
        var g;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.conversationCustomRender = window.eviivo.pms.conversations.conversationCustomRender || {},
        window.eviivo.pms.conversations.conversationCustomRender = (g = {},
        {
            init: function(e) {
                g = eviivo.util.extend(g, e)
            },
            build: function(e, o, s) {
                var n = (r = eviivo.webcore.parsers.stringToBool(s.Pinned)) ? "pinned" : ""
                  , i = s.Selected ? "selected" : ""
                  , t = s.Archived ? "archived" : ""
                  , a = eviivo.webcore.parsers.stringToBool(s.NewMsg) ? "unread" : ""
                  , r = (s.Checkedin,
                "".concat(s.ItemRepliedStatus != eviivo.pms.conversations.constants.getItemRepliedStatus().Replied ? "" : m("status status_replied", ""), " ").concat(r ? m("status status_pinned", "") : "", " ").concat(s.Archived ? m("status status_archived", "") : "", " ").concat(s.ItemDeliveryStatus != eviivo.pms.conversations.constants.getDeliveryStatusCodes().Failed ? "" : m("status status_error", "")))
                  , v = "".concat((v = s,
                !eviivo.pms.conversations.isMessage() || null == v.CheckInDate || v.IsCancelled ? "" : m("check-in", eviivo.webcore.datetime.parse.parseDate(v.CheckInDate).evDisplayMediumDate(eviivo.eagle.basePageModelState.userCultureCode))), " ").concat(function(e) {
                    if (eviivo.pms.conversations.isReview())
                        return m("rating rating-".concat(e.RatingValue), "");
                    return ""
                }(s), " ").concat(function(e) {
                    if (e)
                        return m("enquiry", g.resources.enquiry);
                    return ""
                }(s.IsEnquiry), " ").concat(function(e) {
                    if (e)
                        return m("booking-cancelled", g.resources.cancelled);
                    return ""
                }(s.IsCancelled))
                  , c = (eviivo.pms.conversations.isMessage() && (c = r,
                r = v,
                v = c),
                null != s.Property && (r = s.Property,
                eviivo.webcore.parsers.stringToBool(g.isMultiProperty) || eviivo.pms.conversations.isStaff()) ? m("row-3-l", r) : "")
                  , r = i
                  , i = a
                  , a = n
                  , n = t
                  , t = s.Id
                  , l = s.Icon
                  , u = s.DistributorDisplayIcon
                  , p = s.Name
                  , d = s.LastMsgDate
                  , s = s.Subject;
                return p && 0 !== p.trim().length || (p = g.resources.anonymousParticipant),
                '<a href="javascript:;" class="comms-list_item s-conversation '.concat(r, " ").concat(i, " ").concat(a, " ").concat(n, '" data-conversationid="').concat(t, '">\n            <span class="comms-list_icon ').concat(l, '">\n                <span class="d-icon ').concat(u, '"></span>\n            </span>\n            <span class="comms-list_content">\n                <span class="row-1">\n                    <span class="row-1-l">').concat(p, '</span>\n                    <span class="row-1-r">').concat(d, '</span>\n                </span>\n                <span class="row-2">\n                    <span class="row-2-l">').concat(null != s ? eviivo.webcore.html.decode(s) : "", '</span>\n                    <span class="row-2-r">\n                        ').concat(v, '\n                    </span>\n                </span>\n                <span class="row-3">\n                    ').concat(c, "\n                </span>\n            </span>\n        </a>")
            }
        })
    },
    3937: function() {
        function n(e) {
            return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        function o(e, o, s) {
            return (o = function(e) {
                e = function(e, o) {
                    if ("object" !== n(e) || null === e)
                        return e;
                    var s = e[Symbol.toPrimitive];
                    if (void 0 === s)
                        return ("string" === o ? String : Number)(e);
                    s = s.call(e, o || "default");
                    if ("object" !== n(s))
                        return s;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(e, "string");
                return "symbol" === n(e) ? e : String(e)
            }(o))in e ? Object.defineProperty(e, o, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[o] = s,
            e
        }
        function s() {
            $("".concat(k.filterList, " a")).on("click", function() {
                S($(k.filterRating), !1),
                $.each(R.ratings, function(e, o) {
                    S($("#filter_r".concat(o)), !0)
                }),
                S($(k.filterPin), R.pinned),
                S($(k.filterUnread), R.unread),
                S($(k.filterNotReplied), R.notReplied),
                S($(k.filterReplied), R.replied),
                S($(k.filterArchived), R.archived),
                S($(k.filterSource), !1),
                $.each(R.sources, function(e, o) {
                    null == o.ExternalShortName ? S($("#filter_".concat(o.ConversationSource, "-")), !0) : S($("#filter_".concat(o.ConversationSource, "-").concat(o.ExternalShortName)), !0)
                })
            })
        }
        function e() {
            return {
                text: "",
                startDate: "",
                endDate: "",
                published: "",
                unpublished: "",
                pinned: "",
                unread: "",
                notReplied: "",
                replied: "",
                archived: "",
                ratings: [],
                sources: [],
                propertiesRoomTypes: [],
                order: ""
            }
        }
        function i() {
            return x
        }
        function t() {
            var e = $(this).closest(k.filterList);
            $(k.filters).is(":checked") ? (x = !0,
            eviivo.pms.conversations.refreshIntervals.stopConversationAndMessage(),
            eviivo.pms.conversations.refreshIntervals.startNewMsgConversation()) : T() || (eviivo.pms.conversations.refreshIntervals.startConversation(),
            eviivo.pms.conversations.refreshIntervals.stopNewMsgConversation()),
            e.find(k.filters).is(":checked")
        }
        function a(e) {
            e = e.closest(k.filterList);
            e.find(k.filters).is(":checked") ? e.addClass("contains-selection") : e.removeClass("contains-selection")
        }
        function r() {
            var e = $(k.filterRating).is(":checked");
            R.ratings = [],
            e && $("".concat(k.filterRating, ":checked")).each(function() {
                var e = $(this)[0].id.replace("filter_r", "");
                R.ratings.push(e)
            })
        }
        function v() {
            var e = $(k.filterSource).is(":checked");
            R.sources = [],
            e && $("".concat(k.filterSource, ":checked")).each(function() {
                var e = $(this)[0].id.replace("filter_", "").split("-")
                  , e = {
                    ConversationSource: e[0],
                    ExternalShortName: "" == e[1] ? null : e[1]
                };
                R.sources.push(e)
            })
        }
        function c() {
            R.published = $(k.filterPublished).is(":checked"),
            R.unpublished = $(k.filterUnpublished).is(":checked"),
            R.pinned = $(k.filterPin).is(":checked"),
            R.unread = $(k.filterUnread).is(":checked"),
            R.notReplied = $(k.filterNotReplied).is(":checked"),
            R.replied = $(k.filterReplied).is(":checked"),
            R.archived = $(k.filterArchived).is(":checked")
        }
        function l() {
            $.datepicker._clearDate($(k.filterDateSearchFrom)),
            $.datepicker._clearDate($(k.filterDateSearchTo)),
            R.startDate = "",
            R.endDate = "",
            $(k.datePickersClearButton).remove(),
            b()
        }
        function u() {
            var e = !0
              , o = $(k.filterDateSearchFrom)
              , s = ("" == o.val() && (o.addClass("error"),
            e = !1),
            $(k.filterDateSearchTo));
            "" == s.val() && (s.addClass("error"),
            e = !1),
            e && (x = !0,
            o.removeClass("error"),
            s.removeClass("error"),
            $(k.datePickersClearButton).length <= 0 && ($('<a href="javascript:;" class="s-date-clear clear-date-filter"><svg class="icon-bg icon-bg-close"><use xlink:href="#icon-bg-close"></use></svg></a>').insertBefore($(k.filterDateSearchGo)),
            $(k.datePickersClearButton).on("click", l)),
            R.startDate = eviivo.webcore.datetime.evStandardIso8601DateExtended(o.datepicker("getDate")),
            R.endDate = eviivo.webcore.datetime.evStandardIso8601DateExtended(s.datepicker("getDate")),
            b())
        }
        function p() {
            var e = $(this).val();
            0 == e.length ? (eviivo.util.debounceClearEventQueue("search-input"),
            w()) : (d(!0),
            eviivo.pms.conversations.loading(!0),
            eviivo.pms.conversations.defaultState(!1),
            x = !0,
            eviivo.pms.conversations.refreshIntervals.stopConversationAndMessage(),
            eviivo.util.debounce({
                func: m,
                params: e,
                unique: "search-input",
                wait: 500
            }))
        }
        function d(e) {
            $(k.filterSearchInput).toggleClass("cp-input-spinner_active", e)
        }
        function m(e) {
            R.text = e,
            b()
        }
        function g() {
            a($(this)),
            $(k.filterList).removeClass("active"),
            v(),
            r(),
            c(),
            b()
        }
        function f() {
            var e = $(this)
              , o = e.closest(k.filterList);
            o.find(k.filters).prop("checked", !1),
            a(e),
            v(),
            r(),
            c(),
            b()
        }
        function w() {
            R.text = "",
            eviivo.pms.conversations.refreshIntervals.startConversation(),
            b(),
            T()
        }
        function h() {
            "" != R.text && setTimeout(y, 500)
        }
        function y() {
            0 == $(k.filterSearchInput).val().length && w()
        }
        function b() {
            C(),
            eviivo.pms.conversations.onBeforeDataLoadCallback(),
            eviivo.pms.conversations.conversation.id.set = 0,
            eviivo.pms.conversations.load()
        }
        function C() {
            eviivo.pms.conversations.scroll.reset(),
            eviivo.pms.conversations.messages.defaultState(),
            eviivo.pms.conversations.info.defaultState(),
            eviivo.pms.conversations.defaultState(!1)
        }
        function T() {
            return x = "" != R.text || "" != R.startDate || "" != R.endDate || "" != R.published || "" != R.unpublished || "" != R.pinned || "" != R.unread || "" != R.notReplied || "" != R.replied || "" != R.archived || 0 != R.ratings.length || 0 != R.sources.length || 0 != R.propertiesRoomTypes.length || "" != R.order
        }
        function S(e, o) {
            e.prop("checked", o)
        }
        var I, k, M, x, R;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.filters = window.eviivo.pms.conversations.filters || {},
        window.eviivo.pms.conversations.filters = (I = {
            buildFiltersOnToolBar: !0
        },
        k = {
            conversationsList: "#eviivo-list-conversations",
            conversatoinListContainer: ".s-conversation-list-container",
            tableFilter: "#eviivo-list-conversations_filter",
            filterPin: "#filter_pin",
            filterPublished: "#filter_published",
            filterUnpublished: "#filter_unpublished",
            filterUnread: "#filter_unread",
            filterNotReplied: "#filter_not_replied",
            filterReplied: "#filter_replied",
            filterArchived: "#filter_archived",
            filterDateSearchFrom: "#from-date-search",
            filterDateSearchTo: "#to-date-search",
            filters: ".s-filter",
            filterList: ".s-comms-filters",
            filterOrder: ".s-newest-filter",
            filterDateSearchGo: "#date-search-go",
            filterRating: ".s-filter-rating",
            filterSource: ".s-source-filter",
            filterStatus: ".s-status-filter",
            apply: ".s-filter-apply",
            clear: ".s-filter-clear",
            filterSearchInput: "#txt-search-conversation",
            selectRoomTypesContainer: "#selectRoomTypesContainer",
            saveMultiProperty: ".save-multiProperty",
            toolbar: ".mod-toolbar",
            datePickers: ".bulk-date-picker",
            datePickersButtonPane: ".ui-datepicker-buttonpane",
            datePickersClearButton: ".s-date-clear",
            customArea: ".s-custom-filters"
        },
        x = !(M = 90),
        R = e(),
        {
            init: function(e) {
                I = eviivo.util.extend(I, e),
                $(k.tableFilter).on("click", k.filterList, function() {
                    $(this).toggleClass("active")
                }),
                $(k.conversatoinListContainer).on("click", k.filterOrder, function() {
                    var e;
                    eviivo.pms.conversations.isLoadingStateVisible() || ($(this).toggleClass("active"),
                    e = $(k.filterOrder),
                    R.order = e.hasClass("active") ? "asc" : "desc",
                    b())
                }),
                $(k.conversatoinListContainer).on("keyup", k.filterSearchInput, p),
                $(k.conversatoinListContainer).on("click", k.filterSearchInput, h),
                $(k.filterDateSearchGo).on("click", u),
                (I.buildFiltersOnToolBar ? ($(k.toolbar).on("change", k.filters, t),
                $(k.toolbar).on("click", k.apply, g),
                $(k.toolbar)) : ($(k.conversatoinListContainer).on("change", k.filters, t),
                $(k.conversatoinListContainer).on("click", k.apply, g),
                $(k.conversatoinListContainer))).on("click", k.clear, f),
                eviivo.eagle.multiProperty.applyButtonCallBackFunction({
                    callBackFunction: eviivo.pms.conversations.filters.filterRoomTypes
                }),
                eviivo.pms.accessGroup.headerSearch.extendOptions({
                    callBackFunction: eviivo.pms.conversations.filters.filterRoomTypes
                }),
                $.fn.dataTable.ext.search.push(function(e, o, s, n, i) {
                    return "eviivo-list-conversations" === e.nTable.id && x && e.nTable.id,
                    !0
                })
            },
            setup: function() {
                eviivo.pms.conversations.filtersCustomRender.init(I, k),
                eviivo.pms.conversations.filtersCustomRender.build();
                var e = new Date
                  , e = new Date(e.getFullYear(),e.getMonth(),e.getDate());
                eviivo.webcore.calendar.init(eviivo.webcore.calendar.CALENDAR_TYPE.initFromToDateSelector, o({
                    maxSelectionDays: M,
                    maxForwardBooking: e,
                    defaultCultureCode: I.cultureCode,
                    fromCalendarId: $(k.filterDateSearchFrom),
                    toCalendarId: $(k.filterDateSearchTo),
                    dateFormat: eviivo.eagle.dateFormat.getDateFormat("MEDIUM_DATE_FORMAT"),
                    yearRange: "-10:+0",
                    changeMonth: !0,
                    changeYear: !0,
                    showButtonPanel: !1,
                    callback: "eviivo.pms.conversations.filters.dateSelectionCallback",
                    dateRanges: !0
                }, "dateRanges", {
                    resources: {
                        datePickerPastMonth: I.resources.datePickerPastMonth,
                        datePickerPast3Month: I.resources.datePickerPast3Month,
                        datePickerPast6Month: I.resources.datePickerPast6Month,
                        datePickerPastYear: I.resources.datePickerPastYear
                    },
                    callback: u
                })),
                $(k.filterDateSearchFrom).datepicker("option", "maxDate", 0),
                $(k.filterDateSearchTo).datepicker("option", "maxDate", 0),
                $(k.filterDateSearchFrom).val(""),
                $(k.filterDateSearchTo).val(""),
                s()
            },
            isSearching: i,
            filterRoomTypes: function() {
                x = !0;
                var n = []
                  , e = eviivo.eagle.multiProperty.getSelectedRoomTypes();
                $.each(e.SelectedBusinesses, function(e, o) {
                    var s;
                    o.IsChecked && ((s = {}).businessId = o.BusinessId,
                    s.roomTypeIds = [],
                    $.each(o.RoomTypes, function(e, o) {
                        !o.IsChecked || s.roomTypeIds.includes(o.RoomTypeId) || s.roomTypeIds.push(o.RoomTypeId)
                    }),
                    0 < s.roomTypeIds.length) && n.push(s)
                }),
                R.propertiesRoomTypes = n,
                b()
            },
            searchValues: function() {
                return R
            },
            dateSelectionCallback: function() {
                $(k.filterDateSearchTo).datepicker("option", "maxDate", 0)
            },
            clearAllFilters: function() {
                R = e(),
                b()
            },
            showSpinnerInTextSearch: d,
            removeDatatableSearchFromDom: function() {
                $("#eviivo-list-conversations_filter").removeClass("hide"),
                $("#eviivo-list-conversations_wrapper").find("#eviivo-list-conversations_filter").remove()
            }
        })
    },
    2222: function() {
        function t(e, o, s, n) {
            return s = s ? "checked" : "",
            '<div class="cp-custom-input">\n                    <input type="checkbox" id="'.concat(e, '" class="s-filter ').concat(n, '" ').concat(s, '>\n                    <label for="').concat(e, '">\n                        <span class="checkbox-input"></span>\n                        <span class="label">').concat(o, "</span>\n                    </label>\n                </div>")
        }
        function a(e, o) {
            return r.buildFiltersOnToolBar ? (n = o,
            '\n        <div class="mod-toolbar_section">\n\t\t        <div class="md-dd s-comms-filters '.concat(s = e, ' toolbar-filters">\n\t\t\t        <a href="javascript:;" class="md-dd-icon btn-base-hover s-md-dd-tgl s-drag-false">\n\t                    ').concat(s, '\n                        <svg class="icon-bg icon-ic-arrow-dropdown-solid"><use xlink:href="#icon-ic-arrow-dropdown-solid"></use></svg>\n\t\t\t        </a>\n\t\t\t        <div class="md-dd-c md-dd-c-s-a s-ignore mod-form">\n\t\t\t\t        ').concat(n, '\t\t\n                        <div class="footer-actions">\n                            <button type="button" class="btn btn-secondary s-filter-clear mr24" >').concat(r.resources.filterClear, '</button>\n                            <button type="button" class="btn btn-primary btn-right s-filter-apply ml16" >').concat(r.resources.filterApply, "</button>\n                        </div>\n\t\t\t        </div>\n\t\t        </div>\n        </div>")) : '<div class="section">\n\t\t\t\t        <div class="h4">'.concat(e, "</div>\n                        ").concat(o, "\n                    </div>");
            var s, n
        }
        var r, v;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.filtersCustomRender = window.eviivo.pms.conversations.filtersCustomRender || {},
        window.eviivo.pms.conversations.filtersCustomRender = (r = {},
        v = {},
        {
            init: function(e, o) {
                r = eviivo.util.extend(r, e),
                v = eviivo.util.extend(v, o)
            },
            build: function() {
                $(v.tableFilter).addClass("comms-filters");
                var i, e = "", o = 0 < r.sources.length ? a(r.resources.filterSource, (i = "",
                r.sources.forEach(function(e, o, s) {
                    var n = null == e.Value ? "direct" : e.Value;
                    i = i.concat(t("filter_".concat(n), e.Text, !1, "s-source-filter"))
                }),
                i)) : "", s = a(r.resources.filterStatus, "".concat(t("filter_unread", r.resources.filterUnread, !1, "s-status-filter"), "\n                ").concat(t("filter_replied", r.resources.filterReplied, !1, "s-status-filter"), "\n                ").concat(t("filter_not_replied", r.resources.filterNotReplied, !1, "s-status-filter"), "\n                ").concat(t("filter_pin", r.resources.filterPinned, !1, "s-status-filter"), "\n                ").concat(eviivo.pms.conversations.isReview() ? t("filter_published", r.resources.filterPublished, !1, "s-status-filter") : "", "\n                ").concat(eviivo.pms.conversations.isReview() ? t("filter_unpublished", r.resources.filterUnpublished, !1, "s-status-filter") : "", "\n                ").concat(t("filter_archived", r.resources.filterArchived, !1, "s-status-filter"))), n = a(r.resources.filterRating, "".concat(t("filter_r5", '<span class="rating-text">' + r.resources.filterRating5 + '</span><span class="icon-phosphor-font icon-rating icon-font-amazing"></span>', !1, "s-filter-rating"), "\n                ").concat(t("filter_r4", '<span class="rating-text">' + r.resources.filterRating4 + '</span><span class="icon-phosphor-font icon-rating icon-font-great"></span>', !1, "s-filter-rating"), "\n                ").concat(t("filter_r3", '<span class="rating-text">' + r.resources.filterRating3 + '</span><span class="icon-phosphor-font icon-rating icon-font-average"></span>', !1, "s-filter-rating"), "\n                ").concat(t("filter_r2", '<span class="rating-text">' + r.resources.filterRating2 + '</span><span class="icon-phosphor-font icon-rating icon-font-poor"></span>', !1, "s-filter-rating"), "\n                ").concat(t("filter_r1", '<span class="rating-text">' + r.resources.filterRating1 + '</span><span class="icon-phosphor-font icon-rating icon-font-bad"></span>', !1, "s-filter-rating")));
                (eviivo.pms.conversations.isMessage() || eviivo.pms.conversations.isReview() || eviivo.pms.conversations.isConcierge()) && (e += s),
                eviivo.pms.conversations.isMessage(),
                (eviivo.pms.conversations.isMessage() || eviivo.pms.conversations.isReview()) && (e += o),
                eviivo.pms.conversations.isReview() && (e += n),
                r.buildFiltersOnToolBar && (s = e,
                $(v.customArea).append(s))
            }
        })
    },
    7555: function() {
        function i(e, o) {
            var s, n, i, t, a = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (a)
                return n = !(s = !0),
                {
                    s: function() {
                        a = a.call(e)
                    },
                    n: function() {
                        var e = a.next();
                        return s = e.done,
                        e
                    },
                    e: function(e) {
                        n = !0,
                        i = e
                    },
                    f: function() {
                        try {
                            s || null == a.return || a.return()
                        } finally {
                            if (n)
                                throw i
                        }
                    }
                };
            if (Array.isArray(e) || (a = function(e, o) {
                var s;
                if (e)
                    return "string" == typeof e ? r(e, o) : "Map" === (s = "Object" === (s = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : s) || "Set" === s ? Array.from(e) : "Arguments" === s || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s) ? r(e, o) : void 0
            }(e)) || o && e && "number" == typeof e.length)
                return a && (e = a),
                t = 0,
                {
                    s: o = function() {}
                    ,
                    n: function() {
                        return t >= e.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: e[t++]
                        }
                    },
                    e: function(e) {
                        throw e
                    },
                    f: o
                };
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        function r(e, o) {
            (null == o || o > e.length) && (o = e.length);
            for (var s = 0, n = new Array(o); s < o; s++)
                n[s] = e[s];
            return n
        }
        function o(e, o, s) {
            var n = 3 < arguments.length && void 0 !== arguments[3] && arguments[3];
            t(),
            n || (a(),
            v(!0),
            c(!0)),
            m = "GetInfo-".concat(o, "-").concat(e),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: m,
                url: "/suite/conversations/info?conversationId=".concat(e, "&conversationType=").concat(o, "&propertyShortname=").concat(s),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.HTML,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                callback: function(e) {
                    if (m = null,
                    eviivo.pms.conversations.messages.info.flyout.isActive() && (null != e ? d.infoContainer.html(e) : l(!0),
                    c(!1),
                    0 < w.length)) {
                        var o, s = i(w);
                        try {
                            for (s.s(); !(o = s.n()).done; ) {
                                var n = o.value;
                                $("".concat(p.bookingDetails, "[data-bookingid='").concat(n, "']")).find(".booking-notes").addClass("active")
                            }
                        } catch (e) {
                            s.e(e)
                        } finally {
                            s.f()
                        }
                    }
                },
                failCallback: function() {
                    m = null,
                    c(!1),
                    l(!0)
                }
            })
        }
        function t() {
            null != m && eviivo.webcore.ajaxHelper.abortAjax(m)
        }
        function a() {
            v(!1),
            c(!1),
            l(!1),
            s(),
            g = [],
            f = n()
        }
        function s() {
            $(p.body).html("")
        }
        function v(e) {
            eviivo.pms.conversations.displayElement(d.infoContainer, e)
        }
        function c(e) {
            eviivo.pms.conversations.displaySpinner($(p.spinner), e)
        }
        function l(e) {
            e && s(),
            eviivo.pms.conversations.displayErrorMsg($(p.errorReload).parent(), e)
        }
        function e(e, o) {
            if (null != e)
                return e;
            var s = $("".concat(p.bookingDetails, ":not(").concat(p.isCancelled, ",").concat(p.isEnquiry, ")"))
              , n = s.length;
            if (0 == n)
                return "";
            if (1 == n && (f.bookingReference = s.attr(h.bookingRef),
            f.orderReference = s.attr(h.orderRef),
            f.propertyShortname = s.attr(h.propertyShortname),
            f.propertyId = s.attr(h.propertyId),
            "" != (e = s.attr(o))))
                return e;
            return 1 < n ? (0 == g.length && ($.each(s, function() {
                var e, o = $(this), s = o.attr("data-checkin");
                "" != s && (e = new Date,
                s = new Date(s).getTime() - e.getTime(),
                g.push({
                    data: o,
                    days: s / 864e5
                }))
            }),
            g.sort(function(e, o) {
                return parseFloat(e.days) - parseFloat(o.days)
            })),
            f.bookingReference = g[0].data.attr(h.bookingRef),
            f.orderReference = g[0].data.attr(h.orderRef),
            f.propertyShortname = g[0].data.attr(h.propertyShortname),
            f.propertyId = g[0].data.attr(h.propertyId),
            g[0].data.attr(o)) : ""
        }
        function n() {
            return {
                propertyShortname: null,
                orderReference: null,
                bookingReference: null,
                propertyId: null
            }
        }
        var u, p, d, m, g, f, w, h;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.info = window.eviivo.pms.conversations.info || {},
        window.eviivo.pms.conversations.info.flyout = window.eviivo.pms.conversations.info.flyout || {},
        window.eviivo.pms.conversations.info.flyout = (u = {
            allowRightClick: !1
        },
        p = {
            infoContainer: ".s-flyout-info-outer-contrainer",
            viewBookingLink: "a.s-view-booking",
            bookingDetails: ".s-flyout-info-outer-contrainer .s-info-booking-details",
            spinner: ".s-flyout-info-outer-contrainer .s-info-spinner",
            body: ".s-flyout-info-outer-contrainer .s-info-body",
            errorReload: ".s-error-reload-info",
            viewContactLink: ".s-view-contact",
            showNotesLink: ".s-notes-toggle",
            isCancelled: ".s-cancelled",
            isEnquiry: ".s-enquiry"
        },
        d = {
            infoContainer: null
        },
        m = null,
        g = [],
        f = n(),
        w = [],
        h = {
            bookingRef: "data-bookingreference",
            orderRef: "data-orderreference",
            propertyShortname: "data-propertyshortname",
            propertyId: "data-businessid"
        },
        {
            init: function(e) {
                u = eviivo.util.extend(u, e),
                d.infoContainer = $(p.infoContainer),
                d.infoContainer.on("click", p.viewBookingLink, eviivo.pms.conversations.info.viewBooking),
                d.infoContainer.on("click", p.errorReload, o),
                d.infoContainer.on("click", p.viewContactLink, eviivo.pms.conversations.info.viewGuest),
                d.infoContainer.on("click", p.showNotesLink, eviivo.pms.conversations.info.showBookingNotes),
                d.infoContainer.on("contextmenu", function() {
                    return u.allowRightClick
                })
            },
            load: o,
            defaultState: a,
            getPropertyShortname: function() {
                return e(f.propertyShortname, h.propertyShortname)
            },
            getPropertyId: function() {
                return e(f.propertyId, h.propertyId)
            },
            getOrderReference: function() {
                return e(f.orderReference, h.orderRef)
            },
            getBookingReference: function() {
                return e(f.bookingReference, h.bookingRef)
            },
            cancelDataAjaxCall: t
        })
    },
    357: function() {
        function t(e, o) {
            var s, n, i, t, a = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (a)
                return n = !(s = !0),
                {
                    s: function() {
                        a = a.call(e)
                    },
                    n: function() {
                        var e = a.next();
                        return s = e.done,
                        e
                    },
                    e: function(e) {
                        n = !0,
                        i = e
                    },
                    f: function() {
                        try {
                            s || null == a.return || a.return()
                        } finally {
                            if (n)
                                throw i
                        }
                    }
                };
            if (Array.isArray(e) || (a = function(e, o) {
                var s;
                if (e)
                    return "string" == typeof e ? r(e, o) : "Map" === (s = "Object" === (s = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : s) || "Set" === s ? Array.from(e) : "Arguments" === s || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s) ? r(e, o) : void 0
            }(e)) || o && e && "number" == typeof e.length)
                return a && (e = a),
                t = 0,
                {
                    s: o = function() {}
                    ,
                    n: function() {
                        return t >= e.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: e[t++]
                        }
                    },
                    e: function(e) {
                        throw e
                    },
                    f: o
                };
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        function r(e, o) {
            (null == o || o > e.length) && (o = e.length);
            for (var s = 0, n = new Array(o); s < o; s++)
                n[s] = e[s];
            return n
        }
        function o() {
            eviivo.util.debounce({
                func: f,
                params: "",
                unique: "hideInfoPanelId",
                wait: 200
            })
        }
        function s() {
            var e = 0 < arguments.length && void 0 !== arguments[0] && arguments[0]
              , i = (n(),
            e || (v(),
            l(!0),
            u(!0)),
            eviivo.pms.conversations.conversation.id.get)
              , e = eviivo.pms.conversations.getConversationType();
            b = "GetInfo-".concat(e, "-").concat(i),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: b,
                url: "/suite/conversations/info?conversationId=".concat(i, "&conversationType=").concat(e, "&propertyShortname=").concat(eviivo.pms.conversations.conversation.getPropertyShortname()),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.HTML,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                callback: function(e) {
                    if (b = null,
                    i == eviivo.pms.conversations.conversation.id.get && (null != e ? y.infoContainer.html(e) : p(!0),
                    u(!1),
                    0 < S.length)) {
                        var o, s = t(S);
                        try {
                            for (s.s(); !(o = s.n()).done; ) {
                                var n = o.value;
                                $("".concat(h.bookingDetails, "[data-bookingid='").concat(n, "']")).find(".booking-notes").addClass("active")
                            }
                        } catch (e) {
                            s.e(e)
                        } finally {
                            s.f()
                        }
                    }
                },
                failCallback: function() {
                    b = null,
                    u(!1),
                    p(!0)
                }
            })
        }
        function n() {
            null != b && eviivo.webcore.ajaxHelper.abortAjax(b)
        }
        function i(e) {
            var o = $(this).attr("data-id");
            null != o && 0 != o && (eviivo.eagle.guest.contact.listing.openPopupWithContact(e, {
                Id: o,
                BusinessId: eviivo.pms.conversations.conversation.propertyId.get,
                FormId: "guestFormIdFromInfo",
                Container: "#popup-holder-window"
            }),
            eviivo.eagle.guest.contact.listing.initAllEventsForConversationView())
        }
        function a() {
            var e, o, s = $(this).closest(h.bookingDetails), n = s.attr("data-bookingid"), s = s.attr("data-businessid");
            null != (s = null != s && "" != s ? s : eviivo.pms.conversations.conversation.propertyId.get) && "" != s && null != n && "" != n && (e = n,
            o = s,
            eviivo.pms.businessSettingsAndDefaultMessages.lazyLoadCheckDataValid({
                businessId: o,
                callBack: function() {
                    eviivo.eagle.viewBookingPopup.showViewBookingPopupByBusinessId(e, "Summary", o)
                }
            })) && eviivo.eagle.viewBookingPopup.showViewBookingPopupByBusinessId(e, "Summary", o)
        }
        function v() {
            l(!1),
            u(!1),
            p(!1),
            c(),
            C = [],
            T = m(),
            S = []
        }
        function c() {
            $(h.body).html("")
        }
        function l(e) {
            eviivo.pms.conversations.displayElement(y.infoContainer, e)
        }
        function u(e) {
            eviivo.pms.conversations.displaySpinner($(h.spinner), e)
        }
        function p(e) {
            e && c(),
            eviivo.pms.conversations.displayErrorMsg($(h.errorReload).parent(), e)
        }
        function d() {
            var e = $(this)
              , o = e.parent().parent();
            o.toggleClass("active");
            var s = e.closest(h.bookingDetails).attr("data-bookingid");
            o.hasClass("active") ? S.push(s) : S = S.filter(function(e) {
                return e !== s
            })
        }
        function e(e, o) {
            if (null != e)
                return e;
            var s = $("".concat(h.bookingDetails, ":not(").concat(h.isCancelled, ",").concat(h.isEnquiry, ")"))
              , n = s.length;
            if (0 == n)
                return "";
            if (1 == n && (T.bookingReference = s.attr(I.bookingRef),
            T.orderReference = s.attr(I.orderRef),
            T.propertyShortname = s.attr(I.propertyShortname),
            "" != (e = s.attr(o))))
                return e;
            return 1 < n ? (0 == C.length && ($.each(s, function() {
                var e, o = $(this), s = o.attr("data-checkin");
                "" != s && (e = new Date,
                s = new Date(s).getTime() - e.getTime(),
                C.push({
                    data: o,
                    days: s / 864e5
                }))
            }),
            C.sort(function(e, o) {
                return parseFloat(e.days) - parseFloat(o.days)
            })),
            T.bookingReference = C[0].data.attr(I.bookingRef),
            T.orderReference = C[0].data.attr(I.orderRef),
            T.propertyShortname = C[0].data.attr(I.propertyShortname),
            C[0].data.attr(o)) : ""
        }
        function m() {
            return {
                propertyShortname: null,
                orderReference: null,
                bookingReference: null
            }
        }
        function g() {
            y.infoContainer.addClass("show-info-panel")
        }
        function f() {
            y.infoContainer.removeClass("show-info-panel")
        }
        var w, h, y, b, C, T, S, I;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.info = window.eviivo.pms.conversations.info || {},
        window.eviivo.pms.conversations.info = (w = {
            allowRightClick: !1
        },
        h = {
            infoContainer: ".s-info-outer-contrainer",
            viewBookingLink: "a.s-view-booking",
            bookingDetails: ".s-info-booking-details",
            spinner: ".s-info-spinner",
            body: ".s-info-body",
            errorReload: ".s-error-reload-info",
            viewContactLink: ".s-view-contact",
            showNotesLink: ".s-notes-toggle",
            showInfoPanelButton: ".s-show-info-panel",
            hideInfoPanelButton: ".s-hide-info-panel",
            isCancelled: ".s-cancelled",
            isEnquiry: ".s-enquiry"
        },
        y = {
            infoContainer: null,
            showInfoPanelButton: null,
            hideInfoPanelButton: null
        },
        b = null,
        C = [],
        T = m(),
        S = [],
        I = {
            bookingRef: "data-bookingreference",
            orderRef: "data-orderreference",
            propertyShortname: "data-propertyshortname"
        },
        {
            init: function(e) {
                w = eviivo.util.extend(w, e),
                y.infoContainer = $(h.infoContainer),
                y.showInfoPanelButton = $(h.showInfoPanelButton),
                y.hideInfoPanelButton = $(h.hideInfoPanelButton),
                y.infoContainer.on("click", h.viewBookingLink, a),
                y.infoContainer.on("click", h.errorReload, s),
                y.infoContainer.on("click", h.viewContactLink, i),
                y.infoContainer.on("click", h.showNotesLink, d),
                y.infoContainer.on("contextmenu", function() {
                    return w.allowRightClick
                }),
                y.infoContainer.on("click", h.showInfoPanelButton, g),
                y.infoContainer.on("click", h.hideInfoPanelButton, f),
                $(window).resize(o),
                $(document).keyup(function(e) {
                    27 == e.keyCode && f()
                })
            },
            load: s,
            defaultState: v,
            getPropertyShortname: function() {
                return e(T.propertyShortname, I.propertyShortname)
            },
            getOrderReference: function() {
                return e(T.orderReference, I.orderRef)
            },
            getBookingReference: function() {
                return e(T.bookingReference, I.bookingRef)
            },
            cancelDataAjaxCall: n,
            viewBooking: a,
            viewGuest: i,
            showBookingNotes: d
        })
    },
    3290: function() {
        function o() {
            var e = .01 * window.innerHeight;
            M.commsContainer[0].style.setProperty("--container-height", "".concat(e, "px"))
        }
        function N() {
            eviivo.pms.conversations.filters.clearAllFilters(),
            U(),
            s(!1),
            eviivo.pms.conversations.refreshIntervals.stopNewMsgConversation(),
            eviivo.pms.conversations.refreshIntervals.startConversation(!1)
        }
        function s(e) {
            e ? (C(M.newMsgAlertUpdate, !eviivo.pms.conversations.filters.isSearching()),
            C(M.newMsgAlertUpdateAndClear, eviivo.pms.conversations.filters.isSearching())) : (C(M.newMsgAlertUpdate, !0),
            C(M.newMsgAlertUpdateAndClear, !1)),
            C(M.newMsgAlert, e)
        }
        function O(e) {
            var o = $(e.target);
            if (!o.is("input")) {
                e.preventDefault(),
                eviivo.pms.conversations.refreshIntervals.stopConversationAndMessage();
                var s = 0 != L ? L : eviivo.pms.conversations.conversation.id.get;
                if (0 != s)
                    if (e.shiftKey)
                        switch (a() ? s = c() : v(s),
                        e.which) {
                        case P.up:
                            l(W(s));
                            break;
                        case P.down:
                            l(q(s))
                        }
                    else
                        switch (e.which) {
                        case P.left:
                            break;
                        case P.up:
                            z(W(s));
                            break;
                        case P.right:
                            break;
                        case P.down:
                            z(q(s));
                            break;
                        case F.del:
                        case F.d:
                        case F.backspace:
                            a() && S(M.conversationsList.find("tr[data-id='".concat(c(), "']")), I.resources.deleteConversationConfirmation, eviivo.webcore.notifier.positions.topLeft);
                            break;
                        case ie:
                            a() && ($.each(D, function(e, o) {
                                J(o)
                            }),
                            r())
                        }
            }
        }
        function H(e) {
            var o = $(this)
              , s = o.attr("data-conversationid");
            e.ctrlKey ? l(o.parents("tr"), !1) : eviivo.util.debounce({
                func: n,
                params: s,
                unique: "conversation",
                wait: 700
            })
        }
        function n(e) {
            eviivo.pms.conversations.messages.scroll.off(),
            e != eviivo.pms.conversations.conversation.id.get && (eviivo.pms.conversations.refreshIntervals.stopConversationAndMessage(),
            eviivo.pms.conversations.refreshIntervals.stopNewMsgConversation(),
            eviivo.pms.conversations.refreshIntervals.stopNewMsgMessage(),
            eviivo.pms.conversations.conversation.id.set = e,
            i(eviivo.pms.conversations.conversation.id.get, !0),
            i(eviivo.pms.conversations.conversation.previousId.get, !1),
            e = eviivo.pms.conversations.conversation.previousId.get,
            eviivo.pms.conversations.isStaff() || _(e, !1),
            $("".concat(k.conversationsList, " tr[data-id=").concat(eviivo.pms.conversations.conversation.id.get, "]")).find(k.conversationsListRow).focus(),
            d(),
            eviivo.pms.conversations.filters.isSearching() ? eviivo.pms.conversations.refreshIntervals.startMessage(!1) : eviivo.pms.conversations.refreshIntervals.startConversationAndMessage(!1),
            r())
        }
        function i(e, o) {
            var s = T(e);
            null != s && (s.Selected = o,
            p(e, s),
            o) && t(s.Name)
        }
        function t(e) {
            null == e && (e = eviivo.pms.conversations.conversation.recpientName.get),
            eviivo.pms.conversations.messageFooter.updateNewMsgPlaceholder(e),
            eviivo.pms.conversations.conversation.recpientName.set = e
        }
        function a() {
            return 0 < D.length
        }
        function r() {
            M.conversationsList.find("tr.highlight").removeClass("highlight"),
            D = []
        }
        function v(e) {
            D.push(e),
            M.conversationsList.find("tr[data-id='".concat(e, "']")).addClass("highlight")
        }
        function E(e) {
            D.splice($.inArray(D, e), 1),
            M.conversationsList.find("tr[data-id='".concat(e, "']")).removeClass("highlight")
        }
        function c() {
            return D.at(-1)
        }
        function l(e, o) {
            var s, n = !(1 < arguments.length && void 0 !== o) || o;
            0 < e.length && (s = e.attr("data-id"),
            -1 === $.inArray(s, D) ? v(s) : E(n ? c() : s))
        }
        function u() {
            a() && ($.each(D, function(e, o) {
                X(o)
            }),
            r())
        }
        function _(e, o) {
            var s = T(e);
            null != s && (s.NewMsg = o,
            p(e, s))
        }
        function p(e, o) {
            eviivo.component.listing.updateRowData(k.conversationsList, e, o)
        }
        function e(e) {
            C($("".concat(k.conversationsList, " tbody")), e)
        }
        function d() {
            eviivo.pms.conversations.message.load(),
            eviivo.pms.conversations.info.load()
        }
        function U() {
            j.set = !0,
            m()
        }
        function m() {
            eviivo.pms.conversations.scroll.displayReachedEndMsg(!1),
            eviivo.component.listing.postInitRefreshDataTableSpecific(k.conversationsList)
        }
        function V() {
            J(eviivo.pms.conversations.conversation.id.get)
        }
        function J(o) {
            var e = T(o)
              , s = !e.Archived;
            e.Archived = s,
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "archive-".concat(o),
                url: eviivoSuiteApp + "/api/conversations/archive",
                data: {
                    ConversationId: o,
                    Value: s
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    eviivo.webcore.parsers.stringToBool(e) ? eviivo.pms.conversations.review.flyout.isActive() ? eviivo.component.flyout.hideFlyout(k.flyoutReview) : (Q(),
                    G(o)) : f(I.resources.errorArchiving)
                },
                failCallback: function() {
                    eviivo.pms.conversations.refreshIntervals.startConversationAndMessage(),
                    f(I.resources.errorArchiving)
                }
            })
        }
        function G(e) {
            M.conversationsList.find("tr[data-id='".concat(e, "']")).remove()
        }
        function q(e) {
            return M.conversationsList.find("tr[data-id='".concat(e, "']")).next("tr")
        }
        function W(e) {
            return M.conversationsList.find("tr[data-id='".concat(e, "']")).prev("tr")
        }
        function Q() {
            eviivo.pms.conversations.conversation.id.set = 0,
            eviivo.pms.conversations.messages.defaultState(),
            eviivo.pms.conversations.info.defaultState()
        }
        function z(e) {
            return 0 < e.length && (i(e = e.attr("data-id"), !0),
            i(L, !1),
            L = e,
            eviivo.component.listing.getNamedDataTableInstance(k.conversationsList.replace("#", "")).dataTable.settings()[0].jqXHR.abort(),
            eviivo.pms.conversations.info.cancelDataAjaxCall(),
            eviivo.util.debounce({
                func: n,
                params: e,
                unique: "conversation",
                wait: 2e3
            }),
            !0)
        }
        function Y() {
            S(jQ(this), I.resources.deleteConversationConfirmation)
        }
        function K() {
            a() ? u() : X(eviivo.pms.conversations.conversation.id.get)
        }
        function X(o) {
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "delete-".concat(o),
                url: eviivoSuiteApp + "/api/conversations/delete",
                data: {
                    ConversationId: o,
                    Value: !0
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    eviivo.webcore.parsers.stringToBool(e) ? eviivo.pms.conversations.review.flyout.isActive() ? eviivo.component.flyout.hideFlyout(k.flyoutReview) : (Q(),
                    G(o)) : f(I.resources.errorDeletingConversation)
                },
                failCallback: function() {
                    f(I.resources.errorDeletingConversation)
                }
            })
        }
        function g(e, o) {
            null != o && "" !== o && eviivo.webcore.notifier.show({
                type: e,
                message: o
            })
        }
        function f(e) {
            g("error", e = null == e ? eviivo.eagle.translations.resources.notify.genericErrorMessage : e)
        }
        function w() {
            return I.conversationType
        }
        function h(e) {
            R = e,
            y(!1),
            se(!1),
            oe(!1),
            Z(M.spinner, e)
        }
        function y(e) {
            ee($(k.errorReload).parent(), e)
        }
        function Z(e, o) {
            var s, n, i = e.attr("id");
            o ? null != (n = b(i)) && n.display || (s = setTimeout(function(e, o) {
                e = b(e);
                null != e && e.display ? C(e.spinner, !0) : C(o, !1)
            }, I.spinnerDelay, i, e),
            B.push({
                id: i,
                spinner: e,
                display: o,
                timeout: s
            })) : (C(e, o),
            null != (n = b(i)) && (clearTimeout(n.timeout),
            B = B.filter(function(e) {
                return e !== n
            })))
        }
        function b(s) {
            var n = null;
            return $.each(B, function(e, o) {
                s == o.id && (n = o)
            }),
            n
        }
        function ee(e, o) {
            C(e, o)
        }
        function oe(e) {
            C(M.emptyMessage, e)
        }
        function se(e) {
            C(M.emptySearchMessage, e)
        }
        function C(e, o) {
            null != e && 0 != e.length && (o ? e.removeClass("hide") : e.addClass("hide"))
        }
        function T(e) {
            return eviivo.component.listing.getATablesRowData(k.conversationsList, e)
        }
        function S(e, o) {
            var s, n, i, t = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
            null == t && (s = window.innerHeight,
            n = e.offset().top,
            i = e.parents(".s-message-content").outerWidth(!0),
            i = e.parents("tr").outerWidth(!0) / 2 < i,
            t = s / 2 < n && i ? eviivo.webcore.notifier.positions.topRight : s / 2 < n && !i ? eviivo.webcore.notifier.positions.topLeft : i ? eviivo.webcore.notifier.positions.bottomRight : eviivo.webcore.notifier.positions.bottomLeft),
            eviivo.webcore.notifier.show({
                type: eviivo.webcore.notifier.types.info,
                style: eviivo.webcore.notifier.styles.withTwoActions,
                message: o,
                autoHide: eviivo.webcore.notifier.delays.long,
                buttonTwo: I.resources.deleteConfirmationYes,
                buttonOne: I.resources.deleteConfirmationNo,
                selector: e,
                position: t
            }),
            $(k.confirmationNotifierBtnOne).addClass("btn btn-secondary"),
            $(k.confirmationNotifierBtnTwo).addClass("btn btn-right s-delete-conversation")
        }
        function ne() {
            var e = eviivo.webcore.queryStringHelper.getAllKeys(window.location.href).conversation;
            null != e && "" !== e && (te.set = !0,
            eviivo.pms.conversations.messages.info.flyout.open(e),
            history) && (e = window.location.href.split("?")[0],
            history.replaceState({}, window.title, e))
        }
        var I, k, M, x, R, A, L, ie, F, P, D, B, j, te;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations = (I = {
            spinnerDelay: 10
        },
        k = {},
        M = {
            messageHeaderContainer: null,
            conversationsList: null,
            newMsgAlertUpdate: null,
            newMsgAlertUpdateAndClear: null,
            newMsgAlert: null,
            spinner: null,
            emptyMessage: null,
            emptySearchMessage: null,
            conversatoinListContainer: null
        },
        R = !(x = !0),
        L = A = 0,
        ie = 65,
        F = {
            del: 46,
            backspace: 8,
            d: 68
        },
        P = {
            left: 37,
            up: 38,
            right: 39,
            down: 40
        },
        D = [],
        {
            init: function(e) {
                I = eviivo.util.extend(I, e),
                k = eviivo.pms.conversations.selectors,
                M.messageHeaderContainer = $(k.messageHeaderContainer),
                M.conversationsList = $(k.conversationsList),
                M.newMsgAlertUpdate = $(k.newMsgAlertUpdate),
                M.newMsgAlertUpdateAndClear = $(k.newMsgAlertUpdateAndClear),
                M.newMsgAlert = $(k.newMsgAlert),
                M.spinner = $(k.spinner),
                M.emptyMessage = $(k.emptyMessage),
                M.emptySearchMessage = $(k.emptySearchMessage),
                M.conversatoinListContainer = $(k.conversatoinListContainer),
                M.commsContainer = $(".s-comms-container"),
                eviivo.pms.conversations.menu.init(),
                eviivo.pms.conversations.conversation.init(I),
                eviivo.pms.conversations.scroll.init(I),
                eviivo.pms.conversations.refreshIntervals.init(I),
                M.conversationsList.on("click", k.conversationsListRow, H),
                M.conversatoinListContainer.on("keydown", O),
                M.conversatoinListContainer.on("click", k.deleteConfirmation, u),
                M.conversationsList.on("contextmenu", k.conversationsListRow, function() {
                    return I.allowRightClick
                }),
                M.messageHeaderContainer.on("click", k.archive, V),
                M.messageHeaderContainer.on("click", k.delete, Y),
                M.messageHeaderContainer.on("click", k.deleteConfirmation, K),
                M.newMsgAlert.on("click", "a", N),
                $(k.conversatoinListContainer).on("click", k.errorReload, m),
                window.addEventListener("resize", function() {
                    return eviivo.util.debounce({
                        func: o,
                        unique: "scrollContainer",
                        wait: 250
                    })
                }),
                eviivo.pms.conversations.filters.setup(),
                loadGuestScript(),
                $("body").tip(),
                o(),
                setTimeout(ne, 2500)
            },
            initFromFlyout: function(e) {
                I = eviivo.util.extend(I, e),
                k = eviivo.pms.conversations.selectors,
                eviivo.pms.conversations.conversation.init(I)
            },
            dataLoadSuccess: function() {
                eviivo.pms.conversations.filters.removeDatatableSearchFromDom(),
                A = 0,
                h(j.set = !1),
                eviivo.pms.conversations.filters.showSpinnerInTextSearch(!1),
                0 < $("".concat(k.conversationsList, " .dataTables_empty")).length ? (e(!1),
                (eviivo.pms.conversations.filters.isSearching() ? se : oe)(!0)) : (e(!0),
                (x || eviivo.pms.conversations.filters.isSearching()) && (x = !1),
                scrollLoadingEnd = $("".concat(k.conversationsList, " tbody tr")).length < I.conversationInititalLoadAmount)
            },
            onBeforeDataLoadCallback: function() {
                h(!0)
            },
            failCallback: f,
            successCallback: function() {
                g("success", "success")
            },
            updateRowData: p,
            refresh: U,
            replied: function(e) {
                var o = eviivo.pms.conversations.conversation.id.get
                  , s = T(o);
                s.ItemRepliedStatus = (e = null == e ? !0 : e) ? eviivo.pms.conversations.constants.getItemRepliedStatus().Replied : eviivo.pms.conversations.constants.getItemRepliedStatus().Unreplied,
                eviivo.pms.conversations.updateRowData(o, s)
            },
            isStaff: function() {
                return eviivo.webcore.parsers.stringToBool(I.isStaff)
            },
            defaultState: e,
            selectFirstConversation: function() {
                var e = T($("".concat(k.conversationsList, " tbody tr:first")).data("id"));
                eviivo.pms.conversations.messageFooter.updateNewMsgPlaceholder(e.Name),
                eviivo.pms.conversations.conversation.id.set = e.Id,
                d()
            },
            ajaxDataCallback: function() {
                return JSON.stringify({
                    type: w(),
                    selectedConversationId: eviivo.pms.conversations.filters.isSearching() && !j.get ? 0 : eviivo.pms.conversations.conversation.id.getCoreIdFromMainList(),
                    filterRequest: eviivo.pms.conversations.filters.searchValues()
                })
            },
            getConversationType: w,
            displaySpinner: Z,
            displayErrorMsg: ee,
            ajaxDataFailureCallback: function(e) {
                "abort" != e.statusText && (h(!1),
                y(!0),
                3 == ++A) && eviivo.pms.conversations.refreshIntervals.stopConversation()
            },
            isReview: function(e) {
                return null != e ? e == eviivo.pms.conversations.constants.getConversationTypes().reviews : !!eviivo.pms.conversations.review.flyout.isActive() || w() == eviivo.pms.conversations.constants.getConversationTypes().reviews
            },
            isMessage: function(e) {
                return null != e ? e == eviivo.pms.conversations.constants.getConversationTypes().messages : !!$(k.flyout).hasClass("active") || !eviivo.pms.conversations.review.flyout.isActive() && w() == eviivo.pms.conversations.constants.getConversationTypes().messages
            },
            isConcierge: function(e) {
                return null != e ? e == eviivo.pms.conversations.constants.getConversationTypes().concierge : w() == eviivo.pms.conversations.constants.getConversationTypes().concierge
            },
            getSelectedConversationData: T,
            displayElement: C,
            load: m,
            isLoadingStateVisible: function() {
                return R
            },
            unSelectSelectedConversation: function() {
                i(eviivo.pms.conversations.conversation.id.get, !1)
            },
            displayConfirmationNotifier: S,
            loading: h,
            updateNewMessagePlaceholderWithRecpientName: t,
            newMessageCheck: function() {
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "conversations-new-messages",
                    url: "".concat(eviivoSuiteApp, "/api/conversations/conversations-new-message?type=").concat(w(), "&startDate=").concat(eviivo.pms.conversations.refreshIntervals.getNewConversationCheckStartDateTime()),
                    method: eviivo.webcore.ajaxHelper.methods.GET,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        s(!!e)
                    }
                })
            },
            error: y,
            showNewMsgAlert: s,
            openingFromQuerysting: te = {
                value: !(j = {
                    value: !(B = []),
                    get get() {
                        return this.value
                    },
                    set set(e) {
                        this.value = e
                    }
                }),
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            displayNotifierSuccessError: g
        })
    },
    3446: function() {
        function o(e) {
            return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        function n() {
            return 0 < $(r.container).length
        }
        function e() {
            eviivo.media.main.init({
                cultureCode: a.cultureCode,
                userId: a.userId,
                businessCultureCode: a.businessCultureCode,
                businessId: a.businessId,
                placeholders: [{
                    placeholderId: "media-preview",
                    showByDefault: !0,
                    galleryContext: {
                        referenceId: a.referenceId,
                        selectedGalleryCode: "all_media",
                        selectedEntityReference: null,
                        numberOfSelectedItemsAllowed: a.attachmentLimit,
                        useSelectedImageCallback: eviivo.pms.conversations.media.useSelectedImageCallback,
                        allowImages: eviivo.pms.conversations.conversation.allowImageAttachments.get,
                        allowFiles: eviivo.pms.conversations.conversation.allowFileAttachments.get
                    },
                    groupContext: a.groupContext
                }],
                renderFlags: {
                    renderByDefault: !0,
                    renderPropertySelect: !0
                }
            })
        }
        function i() {
            $(r.container).html(""),
            $.each(l.get, function(e, o) {
                o.dataPayload.isImage ? $(r.container).append(v.format(o.dataPayload.src, o.dataPayload.fileId)) : $(r.container).append(c.format(function(e) {
                    {
                        var o, s;
                        null != e && (0 < (s = e.lastIndexOf(".")) ? (o = e.slice(0, s),
                        s = e.slice(s + 1),
                        15 < o.length && (e = o.substr(0, 10) + "..." + o.substr(-5) + "." + s)) : 15 < e.length && (e = e.substr(0, 10) + "..."))
                    }
                    return e
                }(o.dataPayload.name), o.dataPayload.fileId))
            }),
            $(r.remove).on("click", s)
        }
        function s() {
            var e = $(this)
              , o = e.attr("data-id");
            e.parent(r.item).remove();
            e = (e = l.get).filter(function(e) {
                return e.dataPayload.fileId != o
            });
            l.set = e,
            t(),
            0 == e.length && 0 == $(r.newMsg).val().length ? eviivo.pms.conversations.message.draft.shouldDelete() : eviivo.pms.conversations.message.draft.save()
        }
        function t() {
            var s = [];
            $.each(l.get, function(e, o) {
                s.push(o.dataPayload.fileId)
            }),
            n() && eviivo.media.mediaList.updatePreviouslySelectedItems(s)
        }
        var a, r, v, c, l;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.media = window.eviivo.pms.conversations.media || {},
        window.eviivo.pms.conversations.media = (a = {
            attachmentLimit: 3
        },
        r = {
            container: ".s-media-preview-container",
            remove: ".s-remove-media",
            item: ".s-single-media-item",
            flyout: "#pms-fly-out",
            newMsg: ".s-newMsgTextarea"
        },
        v = '\n            <div class="media-item s-single-media-item">\n                <img src="{0}" alt="">\n                <a href="javascript:;" class="remove-media s-remove-media" data-id="{1}">\n                    <svg class="icon-bg icon-bg-close">\n                        <use xlink:href="#icon-bg-close"></use>\n                    </svg>\n                </a>\n            </div>',
        c = '\n            <div class="media-item media-file media-pdf s-single-media-item">\n                <span class="icon-phosphor-font icon-ic-pdf-file"><span class="file-name">{0}</span></span>\n                <a href="javascript:;" class="remove-media s-remove-media" data-id="{1}">\n                    <svg class="icon-bg icon-bg-close">\n                        <use xlink:href="#icon-bg-close"></use>\n                    </svg>\n                </a>\n            </div>',
        l = {
            value: [],
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        {
            init: function(e) {
                a = eviivo.util.extend(a, e)
            },
            inject: function() {
                n() && (null == a.previewLoaderUrl && ("function" == typeof initMedia ? initMedia() : console.error("media options not defined")),
                eviivo.webcore.scriptLoader.load({
                    src: a.previewLoaderUrl,
                    onloadCallback: e
                }))
            },
            refresh: function() {
                var e;
                n() && "function" != !o(eviivo.media.main.getOptions) && ((e = eviivo.media.main.getOptions()).placeholders[0].galleryContext.refresh = !0,
                e.renderFlags.renderByDefault,
                e.businessId = eviivo.pms.conversations.conversation.propertyId.get,
                e.placeholders[0].galleryContext.referenceId = eviivo.pms.conversations.conversation.getPropertyShortname(),
                e.placeholders[0].galleryContext.allowImages = eviivo.pms.conversations.conversation.allowImageAttachments.get,
                e.placeholders[0].galleryContext.allowFiles = eviivo.pms.conversations.conversation.allowFileAttachments.get,
                $(r.flyout).remove(),
                eviivo.media.main.updateOptions(e))
            },
            useSelectedImageCallback: function(e) {
                l.set = e,
                i(),
                t(),
                eviivo.pms.conversations.message.draft.save()
            },
            get: function() {
                var n = [];
                return $.each(l.get, function(e, o) {
                    var s = "pdf" != o.dataPayload.fileType;
                    n.push({
                        imagenDigest: o.dataPayload.fileId,
                        typeCode: s ? eviivo.pms.conversations.constants.getAttachmentTypeCode().image : eviivo.pms.conversations.constants.getAttachmentTypeCode().file
                    })
                }),
                n
            },
            getPreview: function() {
                var s = [];
                return $.each(l.get, function(e, o) {
                    s.push({
                        Src: o.dataPayload.src,
                        IsImage: "pdf" != o.dataPayload.fileType,
                        FileName: o.dataPayload.name
                    })
                }),
                s
            },
            reset: function() {
                l.set = [],
                $(r.container).html(""),
                t()
            },
            valid: function() {
                return 0 < l.get.length
            },
            loadDraft: function(e) {
                var s = [];
                $.each(e, function(e, o) {
                    s.push({
                        dataPayload: {
                            fileId: o.ImagenDigest,
                            isImage: o.IsImage,
                            src: o.Src,
                            name: o.FileName
                        }
                    })
                }),
                l.set = s,
                i(),
                t()
            }
        })
    },
    5663: function() {
        function e(e) {
            eviivo.pms.conversations.loading(!0),
            eviivo.pms.conversations.defaultState(!1),
            eviivo.pms.conversations.messages.defaultState(),
            eviivo.pms.conversations.info.defaultState(),
            t ? e.preventDefault() : t = !0
        }
        function o() {
            ++n == i && eviivo.pms.conversations.refreshIntervals.stopMenu()
        }
        var s, n, i, t;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.menu = window.eviivo.pms.conversations.menu || {},
        window.eviivo.pms.conversations.menu = (s = {
            menuItem: ".s-comms-menu_item"
        },
        n = 0,
        t = !(i = 3),
        {
            init: function() {
                $(s.menuItem).on("click", e)
            },
            refresh: function() {
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "conversation-menu-refresh",
                    url: eviivoSuiteApp + "/api/conversations/menu-new-notification",
                    method: eviivo.webcore.ajaxHelper.methods.GET,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        null != e && (n = 0,
                        e.forEach(function(e) {
                            var o = $(".s-".concat(e.ConversationType, "-new-message"));
                            0 < o.length && (e.UnreadMessages ? o.addClass("new-messages") : o.removeClass("new-messages"))
                        })),
                        o()
                    },
                    failCallback: function() {
                        o()
                    }
                })
            }
        })
    },
    302: function() {
        function n(e) {
            return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        function i(e, o, s) {
            (o = function(e) {
                e = function(e, o) {
                    if ("object" !== n(e) || null === e)
                        return e;
                    var s = e[Symbol.toPrimitive];
                    if (void 0 === s)
                        return ("string" === o ? String : Number)(e);
                    s = s.call(e, o || "default");
                    if ("object" !== n(s))
                        return s;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(e, "string");
                return "symbol" === n(e) ? e : String(e)
            }(o))in e ? Object.defineProperty(e, o, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[o] = s
        }
        function o() {
            var e = $(this)
              , o = (e.attr("data-src"),
            e.attr("data-isImage"));
            w = e.closest(m.flyoutStack),
            eviivo.webcore.parsers.stringToBool(o) ? (g = e.parents("tr").attr("data-id"),
            f = e.attr("data-attachmentid"),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "get-attachment-flyout-".concat(f),
                url: "".concat(eviivoSuiteApp, "/conversations/attachment?attachmentId=").concat(f),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_HTML_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                callback: s,
                failCallback: p
            })) : (g = e.parents("tr").attr("data-id"),
            f = e.attr("data-attachmentid"),
            t())
        }
        function s(e) {
            u(),
            0 == $(m.$flyout).length && ((0 < w.length ? w : $("body")).append(e),
            e = '<div class="ml-auto download-button"><a class=" btn btn-primary btn-right s-download">\n                    <span class="s-btn-text">'.concat(d.resources.downloadBtn, '</span>                    \n                </a>\n                <span class="spinner small-spinner no-background light-spinner active s-spinner-download spinner_inline hide">\n                    <span class="spin"></span>\n                </span></div>'),
            $("".concat(m.$flyout, " ").concat(m.flyoutFooter)).append(e),
            $(m.downloadBtn).on("click", t),
            null != (e = v(!0)) ? c(e.src, e.fileName) : eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "get-attachment-".concat(f),
                url: "".concat(eviivoSuiteApp, "/api/conversations/attachment?messageId=").concat(g, "&attachmentId=").concat(f, "&propertyShortname=").concat(eviivo.pms.conversations.conversation.getPropertyShortname()),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    c(e.Base64Content, e.FileName)
                },
                failCallback: p
            }))
        }
        function t() {
            a();
            var e = v(!1);
            null != e ? r("".concat(e.src), e.fileName) : eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "get-attachment-".concat(f),
                url: "".concat(eviivoSuiteApp, "/api/conversations/attachment-download?messageId=").concat(g, "&attachmentId=").concat(f, "&propertyShortname=").concat(eviivo.pms.conversations.conversation.getPropertyShortname()),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    var o;
                    o = e.Base64Content,
                    e = e.FileName,
                    l(o, e, !1),
                    r(o, e)
                },
                failCallback: p
            })
        }
        function a() {
            $(m.downloadSpinner).toggleClass("hide")
        }
        function r(e, o) {
            e = '<a id="downloadatag" href='.concat(e, ' download="').concat(o, '" class="hide"></a>');
            $("body").append(e),
            $(m.hiddenDownloadBtn)[0].click(),
            $(m.hiddenDownloadBtn).remove(),
            a()
        }
        function v(o) {
            return h.find(function(e) {
                return e.attachmentId == f && e.forFlyout == o
            })
        }
        function c(e, o) {
            var s = "<img src=".concat(e, " alt='").concat(o, "' class='image-attachment' />");
            $("".concat(m.$flyout, " ").concat(m.flyoutBody)).html(s),
            l(e, o, !0),
            eviivo.component.flyout.showFlyout(m.flyout)
        }
        function l(e, o, s) {
            var n;
            h.push((i(n = {
                attachmentId: f
            }, "attachmentId", f),
            i(n, "src", e),
            i(n, "fileName", o),
            i(n, "forFlyout", s),
            n)),
            h.length >= d.attachmentLargeImageCacheLimit && (h = h.splice(0, 1))
        }
        function u() {
            0 < $(m.$flyout).length && $(m.$flyout).remove()
        }
        function p() {}
        var d, m, g, f, w, h;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.message = window.eviivo.pms.conversations.message || {},
        window.eviivo.pms.conversations.message.attachment = window.eviivo.pms.conversations.message.attachment || {},
        window.eviivo.pms.conversations.message.attachment = (d = {
            attachmentLargeImageCacheLimit: 10
        },
        m = {
            messagesList: "#eviivo-list-messages",
            messagesListFlyout: "#eviivo-list-messages-flyout",
            messagesListInfoFlyout: "#eviivo-list-messages-info-flyout",
            open: ".s-attachment-open",
            $flyout: "#view-attachment",
            flyout: "view-attachment",
            flyoutBody: ".pms-fly-out-body",
            flyoutStack: ".cp-flyout_stacks",
            flyoutFooter: ".cp-flyout_footer",
            downloadBtn: ".s-download",
            hiddenDownloadBtn: "#downloadatag",
            downloadSpinner: ".s-spinner-download"
        },
        w = f = g = null,
        h = [],
        {
            init: function(e) {
                d = eviivo.util.extend(d, e),
                $(m.messagesList).on("click", m.open, o),
                $(m.messagesListFlyout).on("click", m.open, o),
                $(m.messagesListInfoFlyout).on("click", m.open, o)
            },
            close: function() {
                f = g = null,
                setTimeout(function() {
                    u()
                }, 1e3)
            }
        })
    },
    107: function() {
        function o() {
            var e = p.get
              , o = (i(),
            eviivo.pms.conversations.media.reset(),
            eviivo.pms.conversations.messageFooter.clearMessage(),
            eviivo.pms.conversations.conversation.id.get);
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "delete-".concat(o, "-message-").concat(e),
                url: eviivoSuiteApp + "/api/conversations/message-delete",
                data: {
                    ConversationId: o,
                    MessageId: e,
                    Value: !0
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    c = !1
                },
                failCallback: function() {}
            })
        }
        function a(e, o) {
            c = !0,
            l = e,
            p.set = l.Id,
            o || (null != l.Attachments && 0 < l.Attachments.length && eviivo.pms.conversations.media.loadDraft(l.Attachments),
            "" != l.Text && ("" != l.UpatedDateTimeDate && (s(l.UpdatedDateTime),
            n(!0)),
            e = (e = l.Text).replaceAll("&amp;amp;", "&amp;"),
            e = eviivo.webcore.html.decode(e),
            eviivo.pms.conversations.messageFooter.setMessageVal(e)))
        }
        function s(e) {
            v.darftMessageText.html(r.resources.draftMessageDateDisplayTemplate.format(e))
        }
        function n(e) {
            eviivo.pms.conversations.displayElement(v.draftMessages, e)
        }
        function i() {
            p.set = 0,
            l = {},
            d.set = !0,
            s(""),
            n(u = !1),
            c = !1
        }
        var r, t, v, c, l, u, p, d;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.message = window.eviivo.pms.conversations.message || {},
        window.eviivo.pms.conversations.message.draft = window.eviivo.pms.conversations.message.draft || {},
        window.eviivo.pms.conversations.message.draft = (r = {},
        t = {
            newMsg: ".s-newMsgTextarea",
            msgFooter: ".s-message-footer",
            draftMessages: ".s-draft-message",
            darftMessageText: ".s-draft-message-text",
            clearDraft: ".s-draft-clear"
        },
        c = !(v = {
            newMsg: null,
            darftMessageText: null,
            draftMessages: null
        }),
        u = !(l = {}),
        p = {
            value: 0,
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        {
            init: function(e) {
                r = eviivo.util.extend(r, e),
                v.newMsg = $(t.newMsg),
                v.darftMessageText = $(t.darftMessageText),
                v.draftMessages = $(t.draftMessages),
                $(t.msgFooter).on("click", t.clearDraft, o)
            },
            save: function(e) {
                var o, s, n, i, t;
                null == e && (e = v.newMsg.val()),
                d.get && (u = !0,
                o = eviivo.pms.conversations.conversation.id.get,
                c ? (i = e,
                t = o,
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "save-draft-".concat(t),
                    url: eviivoSuiteApp + "/api/conversations/message-save-draft",
                    data: {
                        MessageId: p.get,
                        UpdateMessage: {
                            ConversationId: t,
                            ConversationSource: eviivo.pms.conversations.conversation.getSource(),
                            ExternalShortName: eviivo.pms.conversations.conversation.getSourceShortName(),
                            BodyText: {
                                Text: eviivo.webcore.html.sanitize(i)
                            },
                            Attachments: function() {
                                var e = eviivo.pms.conversations.media.get();
                                return e.forEach(function(e) {
                                    var o = function(o) {
                                        if (0 != l.Attachments.length) {
                                            var e = l.Attachments.filter(function(e) {
                                                return e.ImagenDigest == o
                                            });
                                            if (0 < e.length)
                                                return e[0].Id
                                        }
                                        return null
                                    }(e.imagenDigest);
                                    null != o && (e.Id = o)
                                }),
                                e
                            }(),
                            ConversationType: l.Type,
                            PropertyShortName: l.PropertyShortName,
                            OrderReference: l.OrderReference,
                            BookingReference: l.BookingReference,
                            InReplyToId: eviivo.pms.conversations.isReview() ? eviivo.pms.conversations.review.getMainMessageId() : null
                        }
                    },
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        eviivo.webcore.parsers.stringToBool(e.Success),
                        0 < e.Attachments.length && (e = e.Attachments,
                        l.Attachments = e),
                        u = !1
                    }
                })) : (s = e,
                n = {
                    ConversationId: t = o,
                    ConversationType: eviivo.pms.conversations.conversation.type.get,
                    ConversationSource: eviivo.pms.conversations.conversation.getSource(),
                    ExternalShortName: eviivo.pms.conversations.conversation.getSourceShortName(),
                    BodyText: {
                        Text: eviivo.webcore.html.sanitize(s)
                    },
                    Attachments: eviivo.pms.conversations.media.get(),
                    PropertyShortName: eviivo.pms.conversations.conversation.getPropertyShortname(),
                    OrderReference: eviivo.pms.conversations.conversation.getOrderReference(),
                    BookingReference: eviivo.pms.conversations.conversation.getBookingReference(),
                    RoomTypeId: eviivo.pms.conversations.conversation.getRoomTypeId(),
                    RoomId: eviivo.pms.conversations.conversation.getRoomId(),
                    ExternalReferenceId: eviivo.pms.conversations.conversation.getExternalReferenceId(),
                    BookingEnquiryReference: eviivo.pms.conversations.conversation.enquiryReference.get,
                    InReplyToId: eviivo.pms.conversations.isReview() ? eviivo.pms.conversations.review.getMainMessageId() : null
                },
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "create-draft-".concat(t),
                    url: eviivoSuiteApp + "/api/conversations/message-create-draft",
                    data: n,
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        eviivo.webcore.parsers.stringToBool(e.Success),
                        null != e.MessageId && a({
                            Id: e.MessageId,
                            Type: eviivo.pms.conversations.conversation.type.get,
                            Text: s,
                            Name: r.userFullName,
                            Icon: "",
                            Date: eviivo.webcore.datetime.evDisplayLongDateTime(new Date, r.cultureCode),
                            ParticipantTypeCode: eviivo.pms.conversations.constants.getParticipantTypeCode().eviivoUser,
                            DeliveryStatusCode: eviivo.pms.conversations.constants.getDeliveryStatusCodes().Draft,
                            MessageStatusCode: "",
                            Subject: "",
                            Rating: "",
                            Sentiment: "",
                            PropertyShortName: n.PropertyShortName,
                            OrderReference: n.OrderReference,
                            BookingReference: n.BookingReference,
                            InReplyToId: n.InReplyToId,
                            UpdatedDateTimeDate: "",
                            Attachments: e.Attachments
                        }, !0),
                        u = !1
                    }
                })))
            },
            set: a,
            get: function() {
                return l
            },
            reset: i,
            saving: function() {
                return u
            },
            shouldSave: d = {
                value: !0,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            shouldDelete: function() {
                c && o()
            },
            id: p,
            setSaving: function(e) {
                u = e
            }
        })
    },
    5e3: function() {
        function o() {
            var e = $(this);
            l = e.attr("data-id"),
            d = e.attr("data-orderRef"),
            p = e.attr("data-pid"),
            u = e.attr("data-orderid"),
            f = e.parent().find("span").text(),
            g = e.closest(c.flyoutStack),
            "" != l && ((m = e.find(".s-spinner")).removeClass("hide"),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "get-email-flyout-".concat(l),
                url: "".concat(eviivoSuiteApp, "/conversations/email?emailId=").concat(l),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_HTML_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                callback: i,
                failCallback: s
            }))
        }
        function s() {
            eviivo.pms.conversations.failCallback(v.resources.errorAccessingEmail),
            n()
        }
        function n() {
            0 < m.length && m.addClass("hide")
        }
        function i(e) {
            r(),
            0 == $(c.$flyout).length && ((0 < g.length ? g : $("body")).append(e),
            void 0 === u && null == u && ((null == eviivo.eagle.viewBookingPopup.getBookingViewModel().Order ? null : eviivo.eagle.viewBookingPopup.getBookingViewModel().Order.OrderReference) == d && (u = eviivo.eagle.viewBookingPopup.getBookingViewModel().OrderId,
            p = eviivo.eagle.viewBookingPopup.getBookingViewModel().BusinessId),
            void 0 === u || null == u) && (0 == (e = $("[data-orderreference='".concat(d, "']"))).length ? eviivo.pms.conversations.failCallback(v.resources.errorAccessingEmail) : (p = e.attr("data-businessid"),
            e = e.attr("data-bookingid"),
            eviivo.eagle.viewBookingPopup.getBookingDataOnly(e, p, a))),
            void 0 !== u) && null != u && t()
        }
        function e(e) {
            $("".concat(c.$flyout, " ").concat(c.flyoutBody)).append(e),
            eviivo.component.flyout.updateTitle(c.flyout, ".s-heading-title", f),
            loadEmailDetailsJS(),
            n(),
            eviivo.component.flyout.showFlyout(c.flyout)
        }
        function t() {
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "get-email-".concat(l),
                url: "".concat(eviivoSuiteApp, "/emails/getEmailDetailsByEmailId/email"),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                data: {
                    emailId: l,
                    orderId: u,
                    businessId: p
                },
                contentType: eviivo.webcore.ajaxHelper.contentTypes.TEXT_HTML,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                callback: e,
                failCallback: s
            })
        }
        function a() {
            void 0 === (u = eviivo.eagle.viewBookingPopup.getBookingViewModel().OrderId) ? eviivo.pms.conversations.failCallback(v.resources.errorAccessingEmail) : t()
        }
        function r() {
            0 < $(c.$flyout).length && $(c.$flyout).remove()
        }
        var v, c, l, u, p, d, m, g, f;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.message = window.eviivo.pms.conversations.message || {},
        window.eviivo.pms.conversations.message.email = window.eviivo.pms.conversations.message.email || {},
        window.eviivo.pms.conversations.message.email = (v = {},
        c = {
            messagesList: "#eviivo-list-messages",
            messagesListFlyout: "#eviivo-list-messages-flyout",
            messagesListInfoFlyout: "#eviivo-list-messages-info-flyout",
            open: ".s-open-email",
            $flyout: "#view-email",
            flyout: "view-email",
            flyoutBody: ".pms-fly-out-body",
            flyoutStack: ".cp-flyout_stacks"
        },
        f = g = m = d = p = u = l = null,
        {
            init: function(e) {
                v = eviivo.util.extend(v, e),
                $(c.messagesList).on("click", c.open, o),
                $(c.messagesListFlyout).on("click", c.open, o),
                $(c.messagesListInfoFlyout).on("click", c.open, o)
            },
            load: o,
            close: function() {
                f = m = p = u = null,
                setTimeout(function() {
                    r()
                }, 1e3)
            },
            resendCallback: function() {
                $(".mod-popup-close.s-close").click()
            }
        })
    },
    6301: function() {
        function o() {
            s(),
            $(document).on("mouseup", e),
            $(this).parent().toggleClass("active")
        }
        function s() {
            eviivo.pms.conversations.messages.showMenu(!1),
            $(document).off("mouseup", e),
            $(p.messageActionContainer).removeClass("active")
        }
        function e(e) {
            var o = $(p.messageActionContainer);
            o.is(e.target) || 0 !== o.has(e.target).length || s()
        }
        function r(e) {
            e.find(".message").addClass("deleted"),
            e.find(p.messageActionContainer).remove(),
            e.find(".s-attachment-open").remove(),
            e.find(".guest-name").remove(),
            e.find(".posted-date").remove();
            var e = e.find(".message-timestamp")
              , o = e.find("strong");
            e.html(o)
        }
        function t(e, o) {
            eviivo.component.listing.updateRowData(a(), e, o)
        }
        function a() {
            return eviivo.pms.conversations.messages.flyout.isActive() ? p.flyoutMessageList : eviivo.pms.conversations.messages.info.flyout.isActive() ? p.flyoutMessageInfoList : p.messagesList
        }
        function n() {
            var e = jQ(this);
            eviivo.pms.conversations.displayConfirmationNotifier(e, u.resources.deleteMessageConfirmation)
        }
        function i() {
            var o, s, e, n;
            eviivo.pms.conversations.isMessage() && (o = $(this).closest("tr"),
            s = o.attr("data-id"),
            e = eviivo.pms.conversations.conversation.id.get,
            (n = eviivo.component.listing.getATablesRowData(a(), s)).MessageStatusCode = eviivo.pms.conversations.constants.getMessageStatusCode().Hidden,
            n.Text = "",
            n.UpdateBy = u.userFullName,
            n.UpdatedDateTimeDisplay = eviivo.webcore.datetime.evDisplayLongDateTime(new Date, u.cultureCode),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "delete-".concat(e, "-message-").concat(s),
                url: eviivoSuiteApp + "/api/conversations/message-delete",
                data: {
                    ConversationId: e,
                    MessageId: s,
                    Value: !0
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    eviivo.webcore.parsers.stringToBool(e) ? (t(s, n),
                    r(o)) : eviivo.pms.conversations.failCallback(u.resources.errorDeleting)
                },
                failCallback: function() {
                    eviivo.pms.conversations.failCallback(u.resources.errorDeleting)
                }
            }))
        }
        function v() {
            eviivo.pms.conversations.messages.error(!1),
            eviivo.pms.conversations.messages.reset(),
            eviivo.pms.conversations.messages.scroll.reset(),
            eviivo.pms.conversations.review.reset(),
            eviivo.pms.conversations.messageFooter.reset()
        }
        function c() {
            eviivo.pms.conversations.messages.loaded.set = !1,
            eviivo.component.listing.postInitRefreshDataTableSpecific(p.messagesList)
        }
        function l() {
            var e = $(this).closest("tr")
              , s = e.attr("data-id")
              , o = eviivo.pms.conversations.conversation.id.get
              , n = e.find(p.retryMessage)
              , i = e.find(".s-spinner-status");
            n.addClass("hide"),
            i.removeClass("hide"),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "send-message-".concat(o, "-").concat(s),
                url: eviivoSuiteApp + "/api/conversations/message",
                data: {
                    ConversationId: o,
                    MessageId: s
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    var o = eviivo.component.listing.getATablesRowData(a(), s);
                    o.DeliveryStatusCode = eviivo.pms.conversations.constants.getDeliveryStatusCodes().Sent,
                    t(s, o)
                },
                failCallback: function() {
                    n.removeClass("hide"),
                    i.addClass("hide")
                }
            })
        }
        var u, p, d, m;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.message = window.eviivo.pms.conversations.message || {},
        window.eviivo.pms.conversations.message = (u = {},
        p = {
            flyoutMessageList: "#eviivo-list-messages-flyout",
            flyoutMessageInfoList: "#eviivo-list-messages-info-flyout",
            messagesList: "#eviivo-list-messages",
            conversationsList: "#eviivo-list-conversations",
            delete: ".s-delete",
            deleteConfirmation: ".s-delete-conversation",
            messageActionsLink: ".s-message-action-link",
            messageContainer: ".s-comms-item-content",
            messageActionList: ".s-message-action-list",
            messageActionContainer: ".s-message-action-container",
            retryMessage: ".s-retry-message"
        },
        m = {
            value: !(d = {
                flyoutMessageList: null,
                flyoutMessageInfoList: null,
                messagesList: null,
                conversationsList: null,
                messageContainer: null
            }),
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        {
            init: function(e) {
                u = eviivo.util.extend(u, e),
                eviivo.pms.conversations.messageFooter.init(u),
                eviivo.pms.conversations.message.email.init(u),
                eviivo.pms.conversations.message.attachment.init(u),
                eviivo.pms.conversations.message.translation.init(u),
                eviivo.pms.conversations.review.flyout.init(u),
                eviivo.pms.conversations.message.truncate.init(u),
                d.messagesList = $(p.messagesList),
                d.conversationsList = $(p.conversationsList),
                d.messageContainer = $(p.messageContainer),
                d.flyoutMessageList = $(p.flyoutMessageList),
                d.flyoutMessageInfoList = $(p.flyoutMessageInfoList),
                d.messagesList.on("click", p.messageActionsLink, o),
                d.messagesList.on("click", p.delete, n),
                d.messagesList.on("click", p.deleteConfirmation, i),
                d.messagesList.on("click", p.retryMessage, l),
                d.flyoutMessageList.on("click", p.messageActionsLink, o),
                d.flyoutMessageList.on("click", p.delete, n),
                d.flyoutMessageList.on("click", p.deleteConfirmation, i),
                d.flyoutMessageList.on("click", p.retryMessage, l),
                d.flyoutMessageInfoList.on("click", p.messageActionsLink, o),
                d.flyoutMessageInfoList.on("click", p.delete, n),
                d.flyoutMessageInfoList.on("click", p.deleteConfirmation, i),
                d.flyoutMessageInfoList.on("click", p.retryMessage, l)
            },
            refresh: function() {
                m.set = !0,
                c()
            },
            load: function() {
                v(),
                eviivo.pms.conversations.messages.loading(!0),
                c(),
                d.messageContainer.show()
            },
            rowCreatedCallback: function(e, o, s, n, i) {
                var t, a;
                o.MessageStatusCode != eviivo.pms.conversations.constants.getMessageStatusCode().Unread || eviivo.pms.conversations.isStaff() || (t = o.Id,
                a = eviivo.pms.conversations.conversation.id.get,
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "message -".concat(a, "-read-").concat(t),
                    url: eviivoSuiteApp + "/api/conversations/message-read",
                    data: {
                        ConversationId: a,
                        MessageId: t,
                        Value: !0
                    },
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        eviivo.pms.conversations.menu.refresh()
                    },
                    failCallback: function() {}
                })),
                o.MessageStatusCode == eviivo.pms.conversations.constants.getMessageStatusCode().Hidden && r($(e))
            },
            reset: v,
            type: {
                value: null,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            isRefreshing: m,
            hidePreviousClickedDeleteMenu: s,
            getCorrectListSelector: a
        })
    },
    831: function() {
        function o() {
            eviivo.webcore.parsers.stringToBool($(this).is(":checked")) ? t.set = !0 : t.set = !1,
            eviivo.webcore.cacheManager.set({
                cacheKey: i,
                cachedData: t.get,
                callback: null,
                cultureCode: "",
                releaseVersion: "1"
            }),
            eviivo.pms.conversations.displayElement($(n.message), t.get),
            $(n.message).each(function() {
                eviivo.pms.conversations.displayElement($(this).parent().find(n.messageNonTranslated), !t.get)
            })
        }
        var s, n, i, t;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.message = window.eviivo.pms.conversations.message || {},
        window.eviivo.pms.conversations.message.translation = window.eviivo.pms.conversations.message.translation || {},
        window.eviivo.pms.conversations.message.translation = (s = {},
        n = {
            messageHeaderContainer: ".s-message-header",
            container: ".s-translations-toggle-container",
            message: ".s-translation",
            messageNonTranslated: ".s-body",
            toggle: ".s-toggle_translations"
        },
        {
            init: function(e) {
                s = eviivo.util.extend(s, e),
                eviivo.webcore.cacheManager.get({
                    cacheKey: i,
                    callback: eviivo.pms.conversations.message.translation.setToggle,
                    getDataFunction: function() {},
                    cultureCode: "",
                    releaseVersion: "1"
                }),
                $(n.messageHeaderContainer).on("click", n.toggle, o)
            },
            setToggle: function(e) {
                $(n.toggle).prop("checked", e.cachedData.data),
                t.set = e.cachedData.data
            },
            showToggle: function(e) {
                !eviivo.pms.conversations.conversation.allowViewTranslations.get && e || eviivo.pms.conversations.displayElement($(n.container), e)
            },
            shouldShowText: t = {
                value: !(i = "conversation-show-translations"),
                get get() {
                    return !eviivo.pms.conversations.isReview(eviivo.pms.conversations.conversation.type.get) && this.value
                },
                set set(e) {
                    this.value = e
                }
            }
        })
    },
    5159: function() {
        function o() {
            var e = $(this)
              , o = e.parent().closest(t.messageBody);
            0 < o.length ? o.find(t.hiddenTruncatedTextSection).removeClass("hide") : ((o = (o = e).parent().parent()).addClass("expand-message"),
            o.removeClass("collapse-message")),
            eviivo.pms.conversations.refreshIntervals.stopMessage(),
            eviivo.pms.conversations.refreshIntervals.startNewMsgMessage()
        }
        function s() {
            var e = $(this)
              , o = e.parent().closest(t.messageBody);
            0 < o.length ? o.find(t.hiddenTruncatedTextSection).addClass("hide") : ((o = (o = e).parent().parent()).addClass("collapse-message"),
            o.removeClass("expand-message"))
        }
        function n() {
            return "<a href=\"javascript:;\" class='s-read-more message-visibility-toggle message-visibility-expand'>".concat(i.resources.expand, "</a>\n                <a href=\"javascript:;\" class='s-read-less message-visibility-toggle message-visibility-collapse'>").concat(i.resources.collapse, "</a>")
        }
        var i, t;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.message.truncate = window.eviivo.pms.conversations.message.truncate || {},
        window.eviivo.pms.conversations.message.truncate = (i = {
            characterLimit: 600,
            messageContainerHeightLimit: 300,
            resources: {
                expand: " ...read more",
                collapse: " read less"
            }
        },
        t = {
            flyoutMessageList: "#eviivo-list-messages-flyout",
            flyoutMessageInfoList: "#eviivo-list-messages-info-flyout",
            messagesList: "#eviivo-list-messages",
            messageBody: ".s-body",
            translationBody: ".s-translation",
            messageContent: ".s-message-content",
            moreBtn: ".s-read-more",
            lessBtn: ".s-read-less",
            hiddenTruncatedTextSection: ".s-second-section"
        },
        {
            init: function(e) {
                i = eviivo.util.extend(i, e),
                $(t.flyoutMessageList).on("click", t.moreBtn, o),
                $(t.flyoutMessageList).on("click", t.lessBtn, s),
                $(t.flyoutMessageInfoList).on("click", t.moreBtn, o),
                $(t.flyoutMessageInfoList).on("click", t.lessBtn, s),
                $(t.messagesList).on("click", t.moreBtn, o),
                $(t.messagesList).on("click", t.lessBtn, s),
                $("body").append('<style class="truncateStyle">\n                .collapse {\n                    height: '.concat(i.messageContainerHeightLimit, "px;\n                }\n            </style>"))
            },
            run: function(e) {
                e = e,
                $(".message.message_align-right ".concat(t.messageBody)).each(function() {
                    var e = $(this);
                    e.find(t.hiddenTruncatedTextSection).length || e.outerHeight(!0) > i.messageContainerHeightLimit && (e = e.parent(),
                    $messageBody = e.closest(t.messageContent),
                    e.after(n()),
                    $messageBody.parent().addClass("collapse-message"))
                }),
                "function" == typeof e && e()
            }
        })
    },
    3623: function() {
        function i(e, o, s, n, i, t, a, r, v, c) {
            return '<div class="message message_align-'.concat(e, " ").concat(t, '">\n\t\t\t\t').concat(o, '\n\t\t\t\t<div class="message-content s-message-content">\n                    <span>\n                        <span class="pre-line s-body break-word ').concat(eviivo.pms.conversations.conversation.allowViewTranslations && eviivo.pms.conversations.message.translation.shouldShowText.get && "" != n ? "hide" : "", '">').concat(null == s ? "" : eviivo.webcore.html.decode(s), "</span>\n                        ").concat(function(e) {
                if (eviivo.pms.conversations.conversation.allowViewTranslations && "" != e)
                    return '<span class="pre-line translation s-translation '.concat(eviivo.pms.conversations.message.translation.shouldShowText.get ? "" : "hide", '">').concat(eviivo.webcore.html.decode(e), "</span>");
                return ""
            }(n), "\n                        ").concat(c, "\n                    </span>\n                    ").concat(i, '\n                    <div class="message-footer">\n                        ').concat(function(e) {
                if (0 < e.trim().length)
                    return '<span class="guest-name"><span>'.concat(e, "</span></span>,&nbsp;");
                return ""
            }(a), '\n                        <span class="posted-date">').concat(r, '</span>\n                        <div class="message-timestamp">\n                            <span class="posted-status">').concat(v, "</span>\n                        </div>\n                    </div>\n\t\t\t\t</div>\n\t\t\t</div>")
        }
        function t(e, o, s, n, i, t, a, r, v, c) {
            return '<div class="message_notification align-'.concat(e, " ").concat(v, '">\n                <div class="message_notification-content">\n\t\t\t\t<span>').concat(eviivo.webcore.html.decode(n), "</span>\n                ").concat((e = i,
            v = t,
            n = a,
            i = c,
            "" == (t = r) ? "" : '<a class="'.concat(t, '" data-id="').concat(e, '" data-orderid="').concat(n, '" data-pid="').concat(i, '" data-orderRef="').concat(v, '" href="javascript:;">\n                        ').concat(d.resources.reviewNotificationOpen, '\n                        <span class="spinner small-spinner no-background light-spinner active s-spinner spinner_inline hide">\n                            <span class="spin"></span>\n                        </span>\n                    </a>')), '\n                </div>\n\t\t\t\t<div class="message-timestamp">').concat(o, "</div>\n\t\t\t</div>")
        }
        function a(e) {
            return e == eviivo.pms.conversations.constants.getLinkedEntityType().review ? "s-open-review" : e == eviivo.pms.conversations.constants.getLinkedEntityType().email && eviivo.webcore.parsers.stringToBool(d.permissions.viewEmail) ? "s-open-email external-link" : e == eviivo.pms.conversations.constants.getLinkedEntityType().conversation ? "s-open-conversation" : e == eviivo.pms.conversations.constants.getLinkedEntityType().message ? "s-open-message" : ""
        }
        function r(e) {
            var s = "";
            return 0 < e.length && (s = "<div class='image-container'>"),
            $.each(e, function(e, o) {
                o.IsImage ? s += '<a href="javascript:;" class="s-attachment-open message-image-attachment" data-attachmentid="'.concat(o.Id, '" data-isImage="').concat(o.IsImage, '"><img src="').concat(o.Src, '" alt=""  /></a>') : s += '<a href="javascript:;" class="s-attachment-open file-attachment" data-attachmentid="'.concat(o.Id, '" data-src="').concat(o.Src, '" data-isImage="').concat(o.IsImage, '" ><span class="icon-phosphor-font icon-icon-pdf-file"></span>').concat(o.FileName, "</a>")
            }),
            0 < e.length && (s += "</div>"),
            s
        }
        function v(e) {
            var o = 0 < e.length ? "has-attachments" : "";
            return 1 == e.length ? o = "".concat(o, " single-attachments") : 1 < e.length && (o = "".concat(o, " multiple-attachments")),
            o
        }
        function c(e) {
            return e ? eviivo.pms.conversations.constants.getMessageAlignment().right : eviivo.pms.conversations.constants.getMessageAlignment().left
        }
        function l(e, o) {
            return o || null == e.Icon ? o && null != e.Icon ? '<div class="s-avatar-internal avatar " data-avatar-url="'.concat(e.Icon, '"></div>') : o ? '<div class="avatar-internal avatar"></div>' : '<div class="avatar-external avatar"></div>' : '<div class="s-avatar avatar " data-avatar-url="'.concat(e.Icon, '"></div>')
        }
        function u(e, o) {
            var s = e.DeliveryStatusCode;
            return e.MessageStatusCode == eviivo.pms.conversations.constants.getMessageStatusCode().Hidden && (s = eviivo.pms.conversations.constants.getMessageStatusCode().Hidden),
            o ? s == eviivo.pms.conversations.constants.getMessageStatusCode().Hidden ? "<strong>".concat(d.resources.deleted.format(e.UpdateBy, e.UpdatedDateTimeDisplay), "</strong>") : s == eviivo.pms.conversations.constants.getDeliveryStatusCodes().ReadReceipt ? '<span class="message-status "><span class="icon-phosphor-font icon-ic-double-checkmark-small"></span>'.concat(d.resources.opened, "</span>") : s == eviivo.pms.conversations.constants.getDeliveryStatusCodes().Delivered ? '<span class="message-status "><span class="icon-phosphor-font icon-ic-checkmark-small"></span>'.concat(d.resources.sent, "</span>") : s != eviivo.pms.conversations.constants.getDeliveryStatusCodes().Sent && s == eviivo.pms.conversations.constants.getDeliveryStatusCodes().Failed ? '<span class="message-status error s-retry-message">\n                            <a href="javascript:;">\n                                <span class="icon-phosphor-font icon-ic-status-error"></span>'.concat(d.resources.failed, '\n                            </a>\n                        </span>\n                        <span class="spinner small-spinner no-background light-spinner active s-spinner-status spinner_inline hide">\n                            <span class="spin"></span>\n                        </span>') : "" : ""
        }
        function p(e) {
            return e && eviivo.webcore.parsers.stringToBool(d.permissions.deleteMsg) ? '<div class="message-actions-container s-message-action-container">\n                <a href="javascript:;" class="message-actions-link s-message-action-link">\n                    <span class="icon-phosphor-font icon-ic-expand-menu"></span>\n                </a>\n                <ul class="message-action-list s-message-action-list">\n                    <li>\n                        <a href="javascript:;" class="action icon-delete s-delete" data-tooltip-pos="top" data-tooltip="title" data-tooltip-title="'.concat(d.resources.deleteTooltip, '" title="').concat(d.resources.deleteTooltip, '"><span class="icon-phosphor-font icon-ic-delete"></span><span class="text-delete">').concat(d.resources.deleteBtn, "</span></a>\n                    </li>\n                </ul>\n            </div>") : ""
        }
        var d;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.messageCustomRender = window.eviivo.pms.conversations.messageCustomRender || {},
        window.eviivo.pms.conversations.messageCustomRender = (d = {},
        {
            init: function(e) {
                d = eviivo.util.extend(d, e),
                eviivo.pms.conversations.reviewCustomRender.init(e)
            },
            build: function(e, o, s) {
                var n = s.ParticipantTypeCode == eviivo.pms.conversations.constants.getParticipantTypeCode().eviivoUser || s.ParticipantTypeCode == eviivo.pms.conversations.constants.getParticipantTypeCode().eviivoConciergeGuest;
                return eviivo.pms.conversations.message.type.set = s.Type,
                eviivo.pms.conversations.conversation.allowNewMessages.set = s.AllowNewMessages,
                eviivo.pms.conversations.conversation.allowImageAttachments.set = s.AllowImageAttachments,
                eviivo.pms.conversations.conversation.allowFileAttachments.set = s.AllowFileAttachments,
                eviivo.pms.conversations.conversation.allowAttachmentsSentWithoutMessage.set = s.AllowAttachmentsSentWithoutMessage,
                eviivo.pms.conversations.conversation.allowViewTranslations.set = s.AllowViewTranslations,
                "0" == s.Id ? "" : s.DeliveryStatusCode == eviivo.pms.conversations.constants.getDeliveryStatusCodes().Draft ? (eviivo.pms.conversations.message.isRefreshing.get || eviivo.pms.conversations.message.draft.set(s),
                "") : eviivo.pms.conversations.isReview(s.Type) ? eviivo.pms.conversations.reviewCustomRender.build(e, o, s) : (eviivo.pms.conversations.isMessage(s.Type),
                null != s.LinkedEntityType ? t(eviivo.pms.conversations.constants.getMessageAlignment().middle, s.Date, s.Name, s.Text, s.LinkedEntityReference, s.OrderReference, s.ExternalReferenceId, a(s.LinkedEntityType), s.LinkedEntityType, s.PropertyId) : i(c(n), l(s, n), s.Text, s.TranslatedText, r(s.Attachments), v(s.Attachments), s.Name, s.Date, u(s, n), p(n)))
            }
        })
    },
    9449: function() {
        function o() {
            $(w.mediaPreviewOpenFlyout).trigger("click")
        }
        function s() {
            eviivo.pms.conversations.message.reset()
        }
        function n() {
            h.newMsg = $(this).parents(w.msgFooter).find(w.newMsg);
            var e = h.newMsg.val();
            !function(e) {
                var o = !0;
                i(!1),
                "" == e && (o = !1);
                o || eviivo.pms.conversations.media.valid() || i(!0);
                o || !eviivo.pms.conversations.media.valid() || eviivo.pms.conversations.conversation.allowAttachmentsSentWithoutMessage.get || i(!0);
                return o || eviivo.pms.conversations.media.valid() && eviivo.pms.conversations.conversation.allowAttachmentsSentWithoutMessage.get
            }(e) || t(e)
        }
        function i(e) {
            e ? h.newMsg.addClass("error") : h.newMsg.removeClass("error")
        }
        function t(o) {
            var s, e;
            eviivo.pms.conversations.message.draft.saving() ? setTimeout(t, 300, o) : 0 == (s = eviivo.pms.conversations.message.draft.id.get) ? eviivo.pms.conversations.failCallback(f.resources.errorSending) : (u(!0),
            e = eviivo.pms.conversations.conversation.id.get,
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "send-message-".concat(e),
                url: eviivoSuiteApp + "/api/conversations/message",
                data: {
                    ConversationId: e,
                    MessageId: s
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    u(!1),
                    eviivo.webcore.parsers.stringToBool(e) ? (e = {
                        Id: s,
                        Type: eviivo.pms.conversations.constants.getConversationTypes().messages,
                        Text: eviivo.webcore.html.sanitize(o),
                        TranslatedText: "",
                        Name: f.userFullName,
                        Icon: null,
                        Date: eviivo.webcore.datetime.evDisplayShortTime(new Date, f.cultureCode),
                        ParticipantTypeCode: eviivo.pms.conversations.constants.getParticipantTypeCode().eviivoUser,
                        DeliveryStatusCode: eviivo.pms.conversations.constants.getDeliveryStatusCodes().Sent,
                        MessageStatusCode: "",
                        Subject: "",
                        Rating: "",
                        Sentiment: "",
                        Attachments: eviivo.pms.conversations.media.getPreview()
                    },
                    eviivo.pms.conversations.isMessage() && eviivo.component.listing.addRowData(eviivo.pms.conversations.message.getCorrectListSelector(), e),
                    eviivo.pms.conversations.conversation.markAsReplied(),
                    v(),
                    a(),
                    eviivo.pms.conversations.messages.scroll.forceScrollToLatest()) : eviivo.pms.conversations.failCallback(f.resources.errorSending)
                },
                failCallback: function() {
                    eviivo.pms.conversations.failCallback(f.resources.errorSending)
                }
            }))
        }
        function a() {
            eviivo.pms.conversations.messages.flyout.isActive() || (eviivo.pms.conversations.filters.isSearching() ? (eviivo.pms.conversations.refreshIntervals.stopNewMsgMessage(),
            eviivo.pms.conversations.refreshIntervals.startMessage()) : (eviivo.pms.conversations.refreshIntervals.stopNewMsgMessage(),
            eviivo.pms.conversations.refreshIntervals.stopNewMsgConversation(),
            eviivo.pms.conversations.refreshIntervals.startConversationAndMessage()))
        }
        function r() {
            var e = $(this)
              , o = e.val()
              , s = eviivo.pms.conversations.conversation.id.get;
            0 < o.length ? (eviivo.pms.conversations.message.draft.setSaving(!0),
            o = {
                func: eviivo.pms.conversations.message.draft.save,
                params: o,
                unique: s,
                wait: 500
            },
            eviivo.util.debounce(o),
            m(e)) : (a(),
            eviivo.pms.conversations.message.draft.shouldDelete(),
            eviivo.util.debounceClearEventQueue(s))
        }
        function v() {
            e(),
            l(!1),
            i(!1),
            eviivo.pms.conversations.message.draft.reset(),
            eviivo.pms.conversations.media.reset(),
            p()
        }
        function e() {
            c("")
        }
        function c(e) {
            h.newMsg.val(e),
            m(h.newMsg)
        }
        function l(e) {
            eviivo.pms.conversations.displayElement(h.cancelBtn, e)
        }
        function u(e) {
            h.sendBtn.attr("disabled", e),
            h.newMsg.attr("disabled", e)
        }
        function p() {
            d("" != y ? y : f.resources.sendButton)
        }
        function d(e) {
            h.sendBtn.html(e)
        }
        function m(e) {
            eviivo.pms.conversations.review.flyout.isActive() && 1 < e.length ? g($(e[3])) : eviivo.pms.conversations.messages.flyout.isActive() && 1 < e.length ? g($(e[1])) : eviivo.pms.conversations.messages.info.flyout.isActive() && 1 < e.length ? g($(e[2])) : g($(e[0]))
        }
        function g(e) {
            var o;
            e.is(":visible") ? ((o = e).height(0),
            o.height(o.prop("scrollHeight") + "px")) : setTimeout(g, 500, e)
        }
        var f, w, h, y;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.messageFooter = window.eviivo.pms.conversations.messageFooter || {},
        window.eviivo.pms.conversations.messageFooter = (f = {},
        w = {
            messagesListContainer: ".s-messages-list-container",
            flyoutMessageInfoList: "#eviivo-list-messages-info-flyout",
            flyoutMessageList: "#eviivo-list-messages-flyout",
            messagesList: "#eviivo-list-messages",
            newMsg: ".s-newMsgTextarea",
            msgFooterMessaging: ".s-GTMSG.s-message-footer",
            msgFooter: ".s-message-footer",
            sendBtn: ".s-send-btn",
            attachFileBtn: "#attach-file",
            mediaPreviewOpenFlyout: "#media-preview .s-select-image",
            cancelBtn: ".s-cancel-btn"
        },
        h = {
            msgFooter: null,
            msgFooterMessaging: null,
            cancelBtn: null,
            sendBtn: null,
            newMsg: null
        },
        y = "",
        {
            init: function(e) {
                f = eviivo.util.extend(f, e),
                eviivo.pms.conversations.media.inject(),
                eviivo.pms.conversations.message.draft.init(f),
                h.msgFooter = $(w.msgFooter),
                h.msgFooterMessaging = $(w.msgFooterMessaging),
                h.cancelBtn = $(w.cancelBtn),
                h.sendBtn = $(w.sendBtn),
                h.newMsg = $(w.newMsg),
                h.msgFooter.on("keyup paste input", w.newMsg, r),
                h.msgFooterMessaging.on("click", w.sendBtn, n),
                h.msgFooterMessaging.on("click", w.attachFileBtn, o),
                h.msgFooter.on("click", w.cancelBtn, s)
            },
            updateNewMsgPlaceholder: function(e) {
                e = eviivo.util.decodedHtml(e),
                h.newMsg.attr("placeholder", f.resources.newMsgPlaceholder.format(e))
            },
            saveBtnState: u,
            setMessageVal: c,
            setSaveBtnText: d,
            setSaveBtnTextCancel: function() {
                d(f.resources.updateButton)
            },
            showCancelBtn: l,
            reset: v,
            setNewMsgPlaceholderText: function(e) {
                f.resources.newMsgPlaceholder = e
            },
            setSaveButtonText: function(e) {
                y = e
            },
            setSaveBtnTextSave: p,
            clearMessage: e
        })
    },
    1878: function() {
        function o() {
            var e = $(this);
            g.set = e.attr("data-conversationid"),
            d.bookingReference = "",
            d.conversationSource = e.attr("data-source"),
            d.orderReference = e.attr("data-orderref"),
            d.propertyShortname = e.attr("data-propertyshortname"),
            d.externalReferenceId = null,
            p = "".concat((e = e).text(), " (").concat(e.attr("data-sourcedisplay"), ")"),
            n(),
            u = eviivo.pms.conversations.message.draft.get(),
            s()
        }
        function s() {
            eviivo.component.flyout.showFlyout(c.flyout)
        }
        function n() {
            eviivo.component.flyout.updateTitle(c.flyout.replace("#", ""), ".s-heading-title", p)
        }
        function e() {
            e = eviivo.component.listing.getATablesData(c.flyoutMessageList);
            var e = [].concat.apply([], e);
            0 < e.length && (d.bookingReference = e[0].BookingReference,
            d.conversationSource = e[0].ConversationSource,
            d.orderReference = e[0].OrderReference,
            d.propertyShortname = e[0].PropertyShortName,
            d.externalReferenceId = e[0].ExternalReferenceId,
            p = "".concat(e[0].Name),
            n())
        }
        function i(e) {
            eviivo.pms.conversations.messageFooter.reset(),
            eviivo.pms.conversations.messages.scroll.reset(),
            e && (d = r(),
            g.set = 0,
            jQuery.isEmptyObject(u) || (eviivo.pms.conversations.message.draft.set(u, !1),
            u = {}),
            eviivo.component.listing.clear(c.flyoutMessageList),
            t(!0))
        }
        function t(e) {
            0 < $(".s-comms-container .s-newMsgTextarea").length && ($(".s-comms-container .s-newMsgTextarea").first().css("visibility", e ? "visible" : "hidden"),
            $(".s-comms-container .s-draft-message").first().css("visibility", e ? "visible" : "hidden")),
            eviivo.pms.conversations.messages.info.flyout.isActive() && ($("#view-conversation-info .s-newMsgTextarea").first().css("visibility", e ? "visible" : "hidden"),
            $("#view-conversation-info .s-draft-message").first().css("visibility", e ? "visible" : "hidden"))
        }
        function a() {
            eviivo.pms.conversations.messages.loaded.set = !1,
            eviivo.component.listing.postInitRefreshDataTableSpecific(c.flyoutMessageList)
        }
        function r() {
            return {
                propertyShortname: null,
                conversationSource: null,
                orderReference: null,
                bookingReference: null,
                externalReferenceId: null
            }
        }
        var v, c, l, u, p, d, m, g;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.messages = window.eviivo.pms.conversations.messages || {},
        window.eviivo.pms.conversations.messages.flyout = window.eviivo.pms.conversations.messages.flyout || {},
        window.eviivo.pms.conversations.messages.flyout = (v = {},
        c = {
            infoContainer: ".s-info-outer-contrainer",
            messagesList: "#eviivo-list-messages",
            flyout: "#view-conversation",
            flyoutMessageList: "#eviivo-list-messages-flyout",
            flyoutMessageInfoList: "#eviivo-list-messages-info-flyout",
            flyoutInfoContainer: ".s-flyout-info-outer-contrainer",
            open: ".s-open-guestmessage"
        },
        l = {
            messagesList: null,
            flyoutMessageList: null,
            infoContainer: null,
            flyoutInfoContainer: null
        },
        u = {},
        d = r(),
        m = !(p = ""),
        {
            init: function(e) {
                v = eviivo.util.extend(v, e),
                l.messagesList = $(c.messagesList),
                l.flyoutMessageList = $(c.flyoutMessageList),
                l.infoContainer = $(c.infoContainer),
                l.flyoutInfoContainer = $(c.flyoutInfoContainer),
                l.flyoutInfoContainer.on("click", c.open, o),
                l.infoContainer.on("click", c.open, o),
                l.messagesList.on("click", c.open, o)
            },
            id: g = {
                value: 0,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            show: s,
            onShow: function() {
                i(!1),
                eviivo.pms.conversations.messages.loading(!0),
                l.flyoutMessageList.removeClass("force-hide"),
                a(),
                eviivo.pms.conversations.conversation.openedFromFlyout.set = !0,
                eviivo.pms.conversations.refreshIntervals.stopMessage(),
                eviivo.pms.conversations.refreshIntervals.startMessageFlyout(!1),
                m = !1,
                eviivo.pms.conversations.messageFooter.updateNewMsgPlaceholder(""),
                t(!1),
                eviivo.pms.conversations.openingFromQuerysting.get && setTimeout(e, 2e3)
            },
            onClose: function() {
                m || (eviivo.pms.conversations.conversation.openedFromBooking.set = !1,
                eviivo.pms.conversations.conversation.openedFromFlyout.set = !1,
                eviivo.pms.conversations.refreshIntervals.stopMessageFlyout(),
                setTimeout(function() {
                    eviivo.pms.conversations.refreshIntervals.startMessage()
                }, 600),
                p = "",
                n(),
                i(!0),
                m = !0)
            },
            ajaxDataCallback: function() {
                return {
                    conversationId: g.get,
                    type: eviivo.pms.conversations.constants.getConversationTypes().messages
                }
            },
            isActive: function() {
                return $(c.flyout).hasClass("active")
            },
            refresh: function() {
                eviivo.pms.conversations.message.isRefreshing.set = !0,
                a()
            },
            bookingReference: function() {
                return d.bookingReference
            },
            orderReference: function() {
                return d.orderReference
            },
            conversationSource: function() {
                return d.conversationSource
            },
            propertyShortname: function() {
                return d.propertyShortname
            },
            openSpecificConversation: function(e) {
                g.set = e,
                u = eviivo.pms.conversations.message.draft.get(),
                s()
            },
            externalReferenceId: function() {
                return d.externalReferenceId
            }
        })
    },
    1287: function() {
        function o() {
            eviivo.component.flyout.showFlyout(r.flyout)
        }
        function s() {
            eviivo.component.flyout.updateTitle(r.flyout.replace("#", ""), ".s-heading-title", c)
        }
        function e(e) {
            eviivo.pms.conversations.messageFooter.reset(),
            eviivo.pms.conversations.messages.scroll.reset(),
            e && (l = t(),
            p.set = 0,
            jQuery.isEmptyObject(v) || (eviivo.pms.conversations.message.draft.set(v, !1),
            v = {}),
            n(!0))
        }
        function n(e) {
            0 < $(".s-comms-container .s-newMsgTextarea").length && $(".s-comms-container .s-newMsgTextarea").first().css("visibility", e ? "visible" : "hidden")
        }
        function i() {
            eviivo.component.listing.postInitRefreshDataTableSpecific(r.flyoutMessageList)
        }
        function t() {
            return {
                propertyShortname: null,
                conversationSource: null,
                orderReference: null,
                bookingReference: null,
                externalReferenceId: null
            }
        }
        var a, r, v, c, l, u, p;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.messages = window.eviivo.pms.conversations.messages || {},
        window.eviivo.pms.conversations.messages.info = window.eviivo.pms.conversations.messages.info || {},
        window.eviivo.pms.conversations.messages.info.flyout = window.eviivo.pms.conversations.messages.info.flyout || {},
        window.eviivo.pms.conversations.messages.info.flyout = (a = {},
        r = {
            infoContainer: ".s-info-outer-contrainer",
            messagesList: "#eviivo-list-messages",
            flyout: "#view-conversation-info",
            flyoutMessageList: "#eviivo-list-messages-info-flyout",
            msgFooter: ".s-message-footer",
            messageHeaderContainer: ".s-message-header",
            open: ".s-open-guestmessage",
            empty: ".s-message-empty",
            spinner: ".s-messages-spinner"
        },
        v = {},
        l = t(),
        u = !(c = ""),
        {
            init: function(e) {
                a = e
            },
            id: p = {
                value: 0,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            show: o,
            onShow: function() {
                e(!1),
                $(r.flyoutMessageList).removeClass("force-hide"),
                i(),
                eviivo.pms.conversations.conversation.openedFromFlyout.set = !0,
                eviivo.pms.conversations.refreshIntervals.stopMessage(),
                eviivo.pms.conversations.refreshIntervals.startMessageInfoFlyout(!1),
                u = !1,
                eviivo.pms.conversations.messageFooter.updateNewMsgPlaceholder(""),
                n(!1),
                $("".concat(r.flyout, " ").concat(r.empty)).addClass("hide"),
                $("".concat(r.flyout, " ").concat(r.msgFooter)).removeClass("hide"),
                $("".concat(r.flyout, " ").concat(r.messageHeaderContainer)).removeClass("hide")
            },
            onClose: function() {
                u || (eviivo.pms.conversations.openingFromQuerysting.set = !1,
                eviivo.pms.conversations.conversation.openedFromBooking.set = !1,
                eviivo.pms.conversations.conversation.openedFromFlyout.set = !1,
                eviivo.pms.conversations.refreshIntervals.stopMessageInfoFlyout(),
                c = "",
                s(),
                e(!0),
                u = !0)
            },
            ajaxDataCallback: function() {
                return {
                    conversationId: p.get,
                    type: eviivo.pms.conversations.constants.getConversationTypes().messages
                }
            },
            isActive: function() {
                return $(r.flyout).hasClass("s-active")
            },
            refresh: function() {
                eviivo.pms.conversations.message.isRefreshing.set = !0,
                i()
            },
            bookingReference: function() {
                return l.bookingReference
            },
            orderReference: function() {
                return l.orderReference
            },
            conversationSource: function() {
                return l.conversationSource
            },
            propertyShortname: function() {
                return l.propertyShortname
            },
            externalReferenceId: function() {
                return l.externalReferenceId
            },
            open: function(e) {
                p.set = e,
                v = eviivo.pms.conversations.message.draft.get(),
                o()
            },
            dataLoadSuccess: function() {
                eviivo.pms.conversations.displaySpinner($("".concat(r.flyout, " ").concat(r.spinner)), !1)
            },
            ifOpeningFromQuerystringUpdateData: function() {
                var e = function() {
                    var e = eviivo.component.listing.getATablesData(r.flyoutMessageList);
                    0 != (e = [].concat.apply([], e)).length && 0 != e[0].Id || (eviivo.component.flyout.hideFlyout(r.flyout.replace("#", "")),
                    eviivo.pms.conversations.displayNotifierSuccessError("error", a.resources.cantOpen));
                    return e
                }();
                0 < e.length && (l.bookingReference = e[0].BookingReference,
                l.conversationSource = e[0].ConversationSource,
                l.orderReference = e[0].OrderReference,
                l.propertyShortname = e[0].PropertyShortName,
                l.externalReferenceId = e[0].ExternalReferenceId,
                e = e[0].Name,
                c = "".concat(e),
                s(),
                eviivo.pms.conversations.info.flyout.load(p.get, eviivo.pms.conversations.constants.getConversationTypes().messages, l.propertyShortname))
            }
        })
    },
    7207: function() {
        function o(e) {
            var o = I.pin
              , e = (e ? o.addClass("active") : o.removeClass("active"),
            e ? T.resources.unpinTooltip : T.resources.pinTooltip);
            o.attr("data-tooltip-title", e),
            o.attr("title", e)
        }
        function s(e) {
            var o = I.archive
              , e = (e ? o.addClass("active") : o.removeClass("active"),
            e ? T.resources.unarchiveTooltip : T.resources.archiveTooltip);
            o.attr("data-tooltip-title", e),
            o.attr("title", e)
        }
        function e() {
            t(!0, !1)
        }
        function n() {
            t(!1, !0),
            r(!1),
            eviivo.pms.conversations.messages.scroll.displayReachedEndMsg(!1)
        }
        function i(e) {
            e && (t(!1, !1),
            r(!1),
            eviivo.pms.conversations.messages.scroll.displayReachedEndMsg(!1)),
            eviivo.pms.conversations.displaySpinner(I.spinner, e)
        }
        function t(e, o) {
            a(e),
            eviivo.pms.conversations.displayElement(I.messageHeaderContainer, e),
            eviivo.pms.conversations.displayElement(I.msgFooter, e),
            eviivo.pms.conversations.displayElement(I.emptyMessage, o),
            I.messagesContainer.toggleClass("none-selected", o)
        }
        function a(e) {
            null != I.tableContainer && 0 < I.tableContainer.length && !eviivo.pms.conversations.messages.flyout.isActive() && (e ? (I.tableContainer.css("visibility", "visible"),
            I.messagesListOuterContainer.css("overflow", "auto")) : (I.tableContainer.css("visibility", "hidden"),
            I.messagesListOuterContainer.css("overflow", "hidden"))),
            null != S.flyoutTableContainer && 0 < $(S.flyoutTableContainer).length && eviivo.pms.conversations.messages.flyout.isActive() && (e ? ($(S.flyoutTableContainer).css("visibility", "visible"),
            I.messagesListOuterContainer.css("overflow", "auto")) : ($(S.flyoutTableContainer).css("visibility", "hidden"),
            I.messagesListOuterContainer.css("overflow", "hidden")))
        }
        function r(e) {
            eviivo.pms.conversations.displayErrorMsg(I.errorReload.parent(), e)
        }
        function v() {
            eviivo.pms.conversations.message.refresh(),
            l(!1),
            eviivo.pms.conversations.refreshIntervals.stopNewMsgMessage(),
            eviivo.pms.conversations.refreshIntervals.startMessage(!1)
        }
        function c() {
            eviivo.pms.conversations.filters.isSearching() || (eviivo.pms.conversations.refreshIntervals.stopConversation(),
            eviivo.pms.conversations.refreshIntervals.startConversation(),
            eviivo.pms.conversations.showNewMsgAlert(!1))
        }
        function l(e) {
            eviivo.pms.conversations.displayElement(I.newMsgAlert, e)
        }
        function u() {
            p(!0),
            eviivo.pms.conversations.conversation.sync(),
            eviivo.pms.conversations.message.refresh()
        }
        function p(e) {
            0 != I.manualRefreshBtn.length && I.manualRefreshBtn.toggleClass(activeManualRefreshClasses, e)
        }
        function d() {
            w() ? g(!1) : (eviivo.pms.conversations.message.hidePreviousClickedDeleteMenu(),
            g(!0))
        }
        function m() {
            g(!1)
        }
        function g(e) {
            e ? $(document).on("mouseup", f) : $(document).off("mouseup", f),
            e && w() ? g(!1) : I.toolbarMenuToggle.toggleClass("active", e)
        }
        function f(e) {
            var o = $(".comms-manual-refresh");
            o.is(e.target) || 0 !== o.has(e.target).length || g(!1)
        }
        function w() {
            return I.toolbarMenuToggle.hasClass("active")
        }
        function h() {
            I.messagesContainer.hide()
        }
        function y() {
            I.messagesContainer.show()
        }
        function b() {
            eviivo.util.debounce({
                func: y,
                params: "",
                unique: "showMessagePanelId",
                wait: 200
            })
        }
        function C() {
            eviivo.pms.conversations.messages.info.flyout.isActive() ? eviivo.pms.conversations.messages.info.flyout.dataLoadSuccess() : (i(!1),
            0 < $("".concat(S.messagesList, " .dataTables_empty")).length ? n() : (e(),
            $(S.newMsg).focus()))
        }
        var T, S, I, k, M;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.messages = window.eviivo.pms.conversations.messages || {},
        window.eviivo.pms.conversations.messages = (T = {},
        S = {
            messagesContainer: ".s-comms-item-content",
            flyoutMessageList: "#eviivo-list-messages-flyout",
            flyoutMessageInfoList: "#eviivo-list-messages-info-flyout",
            messagesList: "#eviivo-list-messages",
            messagesListContainer: ".s-messages-list-container",
            messagesListOuterContainer: ".s-messages-list-outer-container",
            tableContainer: "#eviivo-list-messages_wrapper",
            flyoutTableContainer: "#eviivo-list-messages-flyout_wrapper",
            emptyMessage: ".s-message-empty",
            messageHeaderContainer: ".s-message-header",
            pin: ".s-pin",
            archive: ".s-archive",
            delete: ".s-message-header .s-delete",
            msgFooter: ".s-message-footer",
            spinner: ".s-messages-spinner",
            errorReload: ".s-error-reload-messages",
            newMsgAlert: ".s-message-new-msg-alert",
            iconInlineStyle: ".avatarInlineStyle",
            icon: ".s-avatar",
            iconInternal: ".s-avatar-internal",
            manualRefresh: ".s-message-refresh",
            toolbarMenuExpand: ".s-expand-menu",
            togglePanelVisibility: ".s-close-messages",
            newMsg: ".s-newMsgTextarea"
        },
        I = {
            messagesContainer: null,
            messagesListContainer: null,
            messagesListOuterContainer: null,
            messagesList: null,
            messageHeaderContainer: null,
            newMsgAlert: null,
            pin: null,
            archive: null,
            tableContainer: null,
            msgFooter: null,
            emptyMessage: null,
            spinner: null,
            errorReload: null,
            manualRefreshBtn: null,
            toolbarMenuToggle: null,
            togglePanelVisibility: null
        },
        getAjaxFailures = 0,
        getAjaxFailuresAllowed = 3,
        activeManualRefreshClasses = "dd active",
        k = {
            value: !(keyboardEvents = {
                esc: 27
            }),
            get get() {
                return this.value
            },
            set set(e) {
                this.value != e && ((this.value = e) && eviivo.pms.conversations.message.isRefreshing.get ? (eviivo.pms.conversations.message.isRefreshing.set = !1,
                eviivo.pms.conversations.isMessage() && eviivo.pms.conversations.message.truncate.run()) : e && !eviivo.pms.conversations.message.isRefreshing.get && (eviivo.pms.conversations.messages.flyout.isActive() || eviivo.pms.conversations.messages.info.flyout.isActive() || eviivo.pms.conversations.review.flyout.isActive() || (o(eviivo.pms.conversations.conversation.isPinned()),
                s(eviivo.pms.conversations.conversation.isArchived())),
                eviivo.pms.conversations.isMessage() ? (eviivo.pms.conversations.media.refresh(),
                eviivo.pms.conversations.message.truncate.run(C),
                eviivo.pms.conversations.messages.scroll.forceScrollToLatest(),
                eviivo.pms.conversations.messages.scroll.on()) : (eviivo.pms.conversations.isReview() && eviivo.pms.conversations.review.setSaveBtnState(),
                C())))
            }
        },
        M = {
            value: null,
            get get() {
                return this.value
            },
            set set(e) {
                this.value = e
            }
        },
        {
            init: function(e) {
                T = eviivo.util.extend(T, e),
                eviivo.pms.conversations.messages.scroll.init(T),
                eviivo.pms.conversations.messages.flyout.init(T),
                I.messagesContainer = $(S.messagesContainer),
                I.messagesListContainer = $(S.messagesListContainer),
                I.messagesListOuterContainer = $(S.messagesListOuterContainer),
                I.messagesList = $(S.messagesList),
                I.messageHeaderContainer = $(S.messageHeaderContainer),
                I.newMsgAlert = $(S.newMsgAlert),
                I.pin = $(S.pin),
                I.archive = $(S.archive),
                I.msgFooter = $(S.msgFooter),
                I.emptyMessage = $(S.emptyMessage),
                I.spinner = $(S.spinner),
                I.errorReload = $(S.errorReload),
                I.manualRefreshBtn = $(S.manualRefresh),
                I.toolbarMenuToggle = $(S.toolbarMenuExpand).parent(),
                I.togglePanelVisibility = $(S.togglePanelVisibility),
                I.messagesListContainer.on("click", S.errorReload, function() {
                    eviivo.pms.conversations.message.load()
                }),
                I.messagesListContainer.on("contextmenu", function() {
                    return T.allowRightClick
                }),
                I.newMsgAlert.on("click", "a", v),
                I.messageHeaderContainer.on("click", "".concat(S.pin, ", ").concat(S.archive, ", ").concat(S.delete), m),
                I.messageHeaderContainer.on("click", S.manualRefresh, u),
                I.messageHeaderContainer.on("click", S.toolbarMenuExpand, d),
                $(document).on("keydown", function(e) {
                    w() && e.keyCode === keyboardEvents.esc && m()
                }),
                I.messageHeaderContainer.on("click", S.togglePanelVisibility, h),
                $(window).resize(b)
            },
            ajaxDataCallback: function() {
                var e = eviivo.pms.conversations.getConversationType();
                return null == e && (e = eviivo.pms.conversations.constants.getConversationTypes().messages),
                {
                    conversationId: eviivo.pms.conversations.conversation.id.get,
                    type: e
                }
            },
            dataLoadSuccess: function() {
                null == I.tableContainer && (I.tableContainer = $(S.tableContainer),
                I.messagesList = $(S.messagesList),
                I.messagesList.removeClass("force-hide"),
                a(!1)),
                getAjaxFailures = 0,
                p(!(eviivo.pms.conversations.messages.loaded.set = !0)),
                $(S.iconInlineStyle).remove();
                0 < (o = $(S.icon)).length && (e = o.attr("data-avatar-url"),
                I.messagesListContainer.append('<style class="avatarInlineStyle">\n                body .message .s-avatar {\n                    background-image: url("'.concat(e, '");\n                }\n            </style>'))),
                0 < (o = $(S.iconInternal)).length && (e = o.attr("data-avatar-url"),
                I.messagesListContainer.append('<style class="avatarInternalInlineStyle">\n                body .message .s-avatar-internal {\n                    background-image: url("'.concat(e, '");\n                }\n            </style>')));
                var e, o = $("".concat(S.messagesList, " tbody tr")).find(".message_align-left").last().parents("tr").data("id");
                null == M.get ? M.set = o : M.get != o && (c(),
                M.set = o),
                eviivo.pms.conversations.openingFromQuerysting.get && eviivo.pms.conversations.messages.info.flyout.ifOpeningFromQuerystringUpdateData()
            },
            updatePinStateInMessageHeader: o,
            updateArchiveStateInMessageHeader: s,
            defaultState: n,
            view: e,
            onBeforeDataLoadCallback: function() {
                eviivo.pms.conversations.messages.info.flyout.isActive() || i(!0)
            },
            loading: i,
            ajaxDataFailureCallback: function(e) {
                "abort" != e.statusText && (i(!1),
                r(!0),
                ++getAjaxFailures == getAjaxFailuresAllowed) && eviivo.pms.conversations.refreshIntervals.stopMessage()
            },
            error: r,
            newMessageCheck: function() {
                var e = eviivo.pms.conversations.conversation.id.get;
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "conversation-new-messages-".concat(e),
                    url: "".concat(eviivoSuiteApp, "/api/conversations/conversation-new-message?conversationId=").concat(e, "&type=").concat(eviivo.pms.conversations.getConversationType(), "&startDate=").concat(eviivo.pms.conversations.refreshIntervals.getNewMessageCheckStartDateTime()),
                    method: eviivo.webcore.ajaxHelper.methods.GET,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        e ? (l(!0),
                        c()) : l(!1)
                    }
                })
            },
            loaded: k,
            showMenu: g,
            reset: function() {
                M.set = null
            },
            getData: function() {
                return eviivo.component.listing.getATablesData(eviivo.pms.conversations.message.getCorrectListSelector())
            }
        })
    },
    3592: function() {
        function o() {
            l(!1),
            e()
        }
        function e() {
            f = !0,
            $(u.messagesListOuterContainer).animate({
                scrollTop: t.messagesListOuterContainer[0].scrollHeight
            }, 100, function() {
                f = !1
            })
        }
        function s() {
            var e, t, a, o, s, r = $(this);
            !(Math.abs(r.scrollTop()) + r.innerHeight() >= r[0].scrollHeight - 100) || d || m || eviivo.pms.conversations.isReview() || g || f ? Math.abs(r.scrollTop()) + r.innerHeight() <= r[0].scrollHeight - 100 && m ? l(!1, r) : Math.abs(r.scrollTop()) + r.innerHeight() >= r[0].scrollHeight - 100 && m && l(!0, r) : (e = eviivo.pms.conversations.conversation.id.get,
            eviivo.pms.conversations.refreshIntervals.stopMessage(),
            eviivo.pms.conversations.refreshIntervals.startNewMsgMessage(),
            p++,
            d = !0,
            t = r.parent().find(u.spinner),
            eviivo.pms.conversations.displayElement(t, !0),
            eviivo.pms.conversations.message.translation.showToggle(!1),
            c(r, !1),
            a = r.find("tbody tr:first").attr("data-id"),
            o = $(".s-row-".concat(a)).offset().top,
            s = r.outerWidth(!0),
            n(r, "fixed", o, s - 48, "scroll", "24px", "-1"),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "scroll-load-message-".concat(e),
                url: "".concat(eviivoSuiteApp, "/api/conversations/messageslist-scroll?ConversationId=").concat(parseInt(e), "&Index=").concat(p, "&Type=").concat(eviivo.pms.conversations.getConversationType()),
                method: eviivo.webcore.ajaxHelper.methods.GET,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    if (eviivo.pms.conversations.displayElement(t, !1),
                    eviivo.pms.conversations.message.translation.showToggle(!0),
                    d = !1,
                    null != e) {
                        if (0 < e.length) {
                            for (var o = s = e, s = eviivo.pms.conversations.message.getCorrectListSelector(), n = eviivo.component.listing.getATablesData(s), i = 0; i < n.length; i++)
                                o.push(n[i]);
                            eviivo.component.listing.clear(s),
                            eviivo.component.listing.addRowsData(s, o),
                            eviivo.pms.conversations.message.truncate.run()
                        } else
                            0 == e.length && (l(!0, r),
                            m = !0);
                        v(r, a)
                    } else
                        v(r, a),
                        c(r, !0)
                },
                failCallback: function() {
                    v(r, a),
                    c(r, !0)
                }
            }))
        }
        function v(e, o) {
            g || (n(e, "", "", "", "", "", ""),
            e.animate({
                scrollTop: $(".s-row-".concat(o)).offset().top - 130
            }, 1, function() {
                g = !1
            }))
        }
        function n(e, o, s, n, i, t, a) {
            e = e.find(u.messagesListContainer);
            e.css("z-index", a),
            e.css("position", o),
            e.css("top", s),
            e.css("width", n),
            e.css("overflow-y", i),
            e.css("padding-right", t)
        }
        function c(e, o) {
            eviivo.pms.conversations.displayErrorMsg(e.find(u.errorReloadScroll).parent(), o)
        }
        function l(e) {
            var o, s, n, i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null;
            (!e || (n = null == (n = i) ? t.messagesListOuterContainer : n,
            o = n.find("tbody tr:last").attr("data-id"),
            o = $(".s-row-".concat(o)),
            s = o.offset().top,
            o = o.outerHeight(),
            s += o,
            (o = n.scrollTop() + n.height()) < s - 200)) && (n = null == i ? t.scrollEnd : i.find(u.scrollEnd),
            eviivo.pms.conversations.displayElement(n, e))
        }
        var i, u, t, p, d, m, g, f;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.messages = window.eviivo.pms.conversations.messages || {},
        window.eviivo.pms.conversations.messages.scroll = window.eviivo.pms.conversations.messages.scroll || {},
        window.eviivo.pms.conversations.messages.scroll = (i = {},
        u = {
            messagesList: "#eviivo-list-messages",
            messagesListOuterContainer: ".s-messages-list-outer-container",
            messagesListContainer: ".s-messages-list-container",
            spinner: ".s-toolbar-messages-spinner",
            scrollEnd: ".s-messages-scroll-end",
            errorReloadScroll: ".s-error-reload-scroll-messages"
        },
        p = 0,
        f = g = m = d = !(t = {
            messagesListOuterContainer: null,
            scrollEnd: null
        }),
        {
            init: function(e) {
                i = eviivo.util.extend(i, e),
                t.messagesListOuterContainer = $(u.messagesListOuterContainer),
                t.scrollEnd = $(u.scrollEnd),
                $("".concat(u.scrollEnd, " a")).on("click", o)
            },
            reset: function() {
                p = 0,
                l(d = m = !1)
            },
            forceScrollToLatest: e,
            displayReachedEndMsg: l,
            on: function() {
                t.messagesListOuterContainer.on("scroll", s)
            },
            off: function() {
                t.messagesListOuterContainer.off("scroll", s)
            }
        })
    },
    1226: function() {
        function N() {
            "hidden" === document.visibilityState ? (D = P,
            e(j.stop)) : (e(j.start),
            D = [])
        }
        function e(e) {
            for (var o = e == j.start ? D : P, s = 0; s < o.length; s++) {
                var n = o[s];
                n == B.menu && e == j.start ? i() : n == B.menu && e == j.stop ? t() : n == B.conversation && e == j.start ? a() : n == B.conversation && e == j.stop ? r() : n == B.newMsgConversation && e == j.start ? v() : n == B.newMsgConversation && e == j.stop ? c() : n == B.message && e == j.start ? l() : n == B.message && e == j.stop ? u() : n == B.newMessage && e == j.start ? p() : n == B.newMessage && e == j.stop ? d() : n == B.messageFlyout && e == j.start ? O() : n == B.messageFlyout && e == j.stop ? g() : n == B.newMessageFlyout && e == j.start ? H() : n == B.newMessageFlyout && e == j.stop ? f() : n == B.messageInfoFlyout && e == j.start ? E() : n == B.messageInfoFlyout && e == j.stop ? w() : n == B.newMessageInfoFlyout && e == j.start ? _() : n == B.newMessageInfoFlyout && e == j.stop && h()
            }
        }
        function o(e) {
            P.push(e)
        }
        function s(o) {
            P = P.filter(function(e) {
                return e !== o
            })
        }
        function i() {
            null == C && (eviivo.pms.conversations.menu.refresh(),
            C = setInterval(eviivo.pms.conversations.menu.refresh, y.menuInterval),
            o(B.menu))
        }
        function t() {
            clearInterval(C),
            C = null,
            s(B.menu)
        }
        function a() {
            null == T && (0 < arguments.length && void 0 !== arguments[0] && !arguments[0] || eviivo.pms.conversations.refresh(),
            c(),
            T = setInterval(eviivo.pms.conversations.refresh, y.conversationInternal),
            o(B.conversation))
        }
        function r() {
            clearInterval(T),
            T = null,
            s(B.conversation)
        }
        function v() {
            null == M && 0 < $(b.conversationsList).length && (n(),
            r(),
            eviivo.pms.conversations.newMessageCheck(),
            M = setInterval(eviivo.pms.conversations.newMessageCheck, y.conversationInternal),
            o(B.newMsgConversation))
        }
        function c() {
            F = null,
            clearInterval(M),
            M = null,
            s(B.newMsgConversation)
        }
        function n() {
            return F = null == F ? (new Date).toISOString() : F
        }
        function l() {
            var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0];
            eviivo.pms.conversations.isMessage() && null == S && (e && eviivo.pms.conversations.message.refresh(),
            d(),
            S = setInterval(eviivo.pms.conversations.message.refresh, y.messageInterval),
            o(B.message))
        }
        function u() {
            clearInterval(S),
            S = null,
            s(B.message)
        }
        function p() {
            eviivo.pms.conversations.isMessage() && null == x && (u(),
            m(),
            eviivo.pms.conversations.messages.newMessageCheck(),
            x = setInterval(eviivo.pms.conversations.messages.newMessageCheck, y.messageInterval),
            o(B.newMessage))
        }
        function d() {
            clearInterval(x),
            x = L = null,
            s(B.newMessage)
        }
        function m() {
            return L = null == L ? (new Date).toISOString() : L
        }
        function O() {
            var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0];
            eviivo.pms.conversations.isMessage() && eviivo.pms.conversations.messages.flyout.isActive() && null == I && (e && eviivo.pms.conversations.messages.flyout.refresh(),
            f(),
            I = setInterval(eviivo.pms.conversations.messages.flyout.refresh, y.messageInterval),
            o(B.messageFlyout))
        }
        function g() {
            clearInterval(I),
            I = null,
            s(B.messageFlyout)
        }
        function H() {
            eviivo.pms.conversations.isMessage() && eviivo.pms.conversations.messages.flyout.isActive() && null == R && (g(),
            m(),
            eviivo.pms.conversations.messages.newMessageCheck(),
            R = setInterval(eviivo.pms.conversations.messages.newMessageCheck, y.messageInterval),
            o(B.newMessageFlyout))
        }
        function f() {
            clearInterval(R),
            R = L = null,
            s(B.newMessageFlyout)
        }
        function E() {
            var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0];
            eviivo.pms.conversations.isMessage() && eviivo.pms.conversations.messages.info.flyout.isActive() && null == k && (e && eviivo.pms.conversations.messages.info.flyout.refresh(),
            h(),
            k = setInterval(eviivo.pms.conversations.messages.info.flyout.refresh, y.messageInterval),
            o(B.messageInfoFlyout))
        }
        function w() {
            clearInterval(k),
            k = null,
            s(B.messageInfoFlyout)
        }
        function _() {
            eviivo.pms.conversations.isMessage() && eviivo.pms.conversations.messages.info.flyout.isActive() && null == A && (w(),
            m(),
            eviivo.pms.conversations.messages.newMessageCheck(),
            A = setInterval(eviivo.pms.conversations.messages.newMessageCheck, y.messageInterval),
            o(B.newMessageInfoFlyout))
        }
        function h() {
            clearInterval(A),
            A = L = null,
            s(B.newMessageInfoFlyout)
        }
        var y, b, C, T, S, I, k, M, x, R, A, L, F, P, D, B, j;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations.refreshIntervals = window.eviivo.pms.conversations.refreshIntervals || {},
        window.eviivo.pms.conversations.refreshIntervals = (y = {
            menuInterval: 3e4,
            conversationInternal: 3e4,
            messageInterval: 3e4
        },
        b = {},
        F = L = A = R = x = M = k = I = S = T = C = null,
        P = [],
        D = [],
        B = {
            menu: "menu",
            conversation: "conversation",
            newMsgConversation: "newMsgConversation",
            message: "message",
            newMessage: "newMessage",
            messageFlyout: "messageFlyout",
            newMessageFlyout: "newMessageFlyout",
            messageInfoFlyout: "messageInfoFlyout",
            newMessageInfoFlyout: "newMessageInfoFlyout"
        },
        j = {
            start: "start",
            stop: "stop"
        },
        {
            init: function(e) {
                y = eviivo.util.extend(y, e),
                b = eviivo.pms.conversations.selectors,
                document.addEventListener("visibilitychange", N, !1),
                i(),
                a()
            },
            startMenu: i,
            stopMenu: t,
            startConversation: a,
            stopConversation: r,
            startMessage: l,
            stopMessage: u,
            startNewMsgMessage: p,
            stopNewMsgMessage: d,
            startNewMsgConversation: v,
            stopNewMsgConversation: c,
            startConversationAndMessage: function() {
                var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0];
                a(e),
                l(e)
            },
            stopConversationAndMessage: function() {
                r(),
                u()
            },
            getNewMessageCheckStartDateTime: m,
            getNewConversationCheckStartDateTime: n,
            startMessageFlyout: O,
            stopMessageFlyout: g,
            startNewMsgMessageFlyout: H,
            stopNewMsgMessageFlyout: f,
            startMessageInfoFlyout: E,
            stopMessageInfoFlyout: w,
            startNewMsgMessageInfoFlyout: _,
            stopNewMsgMessageInfoFlyout: h
        })
    },
    3388: function() {
        function e(e) {
            eviivo.pms.conversations.messages.error(!1),
            eviivo.pms.conversations.review.reset(),
            eviivo.pms.conversations.messageFooter.reset(),
            e && (d = a(),
            f.set = 0,
            eviivo.pms.conversations.refreshIntervals.startConversationAndMessage(),
            eviivo.pms.conversations.messageFooter.setNewMsgPlaceholderText(p),
            eviivo.pms.conversations.updateNewMessagePlaceholderWithRecpientName(),
            eviivo.pms.conversations.messageFooter.setSaveButtonText(v.resources.sendButton),
            eviivo.pms.conversations.messageFooter.setSaveBtnTextSave(),
            eviivo.pms.conversations.messageFooter.saveBtnState(!1),
            jQuery.isEmptyObject(u) || (eviivo.pms.conversations.message.draft.set(u, !1),
            u = {}))
        }
        function o() {
            eviivo.pms.conversations.messages.loaded.set = !1,
            eviivo.component.listing.postInitRefreshDataTableSpecific(c.reviewMessagesList)
        }
        function s() {
            var e = $(this);
            f.set = e.attr("data-conversationid"),
            m = $(e).text(),
            i()
        }
        function n() {
            var e = $(this);
            f.set = e.attr("data-id"),
            i()
        }
        function i() {
            u = eviivo.pms.conversations.message.draft.get(),
            eviivo.pms.conversations.refreshIntervals.stopConversationAndMessage(),
            initReviewFlyout(),
            t(),
            eviivo.component.flyout.showFlyout(c.flyout)
        }
        function t() {
            eviivo.component.flyout.updateTitle(c.flyout.replace("#", ""), ".s-heading-title", m)
        }
        function a() {
            return {
                propertyShortname: null,
                conversationSource: null,
                orderReference: null,
                bookingReference: null
            }
        }
        function r(o, s) {
            var e;
            return null == o && (e = $(c.reviewMessagesList).find(" tbody tr:eq(0)").attr("data-id"),
            null == (e = eviivo.component.listing.getATablesRowData(c.reviewMessagesList, e)) || (d.propertyShortname = e.PropertyShortName,
            d.conversationSource = e.ConversationSource,
            d.bookingReference = e.BookingReference,
            d.orderReference = e.OrderReference,
            0) || Object.keys(d).forEach(function(e) {
                e == s && (o = d[e])
            }),
            null == o) && console.error("ev suite error - messaging: review flyout issue getting required data for reply"),
            o
        }
        var v, c, l, u, p, d, m, g, f;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.review = window.eviivo.pms.conversations.review || {},
        window.eviivo.pms.conversations.review.flyout = window.eviivo.pms.conversations.review.flyout || {},
        window.eviivo.pms.conversations.review.flyout = (v = {},
        c = {
            infoContainer: ".s-info-outer-contrainer",
            messagesList: "#eviivo-list-messages",
            reviewMessagesList: "#eviivo-list-review",
            flyout: "#view-review",
            openReview: ".s-open-review",
            flyoutInfoContainer: ".s-flyout-info-outer-contrainer",
            openConversation: ".s-open-conversation"
        },
        l = {
            messagesList: null,
            reviewMessagesList: null,
            infoContainer: null,
            flyoutInfoContainer: null
        },
        u = {},
        p = null,
        d = a(),
        g = !(m = ""),
        {
            init: function(e) {
                v = eviivo.util.extend(v, e),
                p = v.resources.newMsgPlaceholder,
                l.messagesList = $(c.messagesList),
                l.reviewMessagesList = $(c.reviewMessagesList),
                l.infoContainer = $(c.infoContainer),
                l.flyoutInfoContainer = $(c.flyoutInfoContainer),
                l.flyoutInfoContainer.on("click", c.openReview, s),
                l.infoContainer.on("click", c.openReview, s),
                l.messagesList.on("click", c.openConversation, n)
            },
            onShow: function() {
                e(!1),
                eviivo.pms.conversations.messages.loading(!0),
                l.reviewMessagesList.removeClass("force-hide"),
                o(),
                g = !1
            },
            onClose: function() {
                g || (m = "",
                t(),
                e(!0),
                g = !0)
            },
            id: f = {
                value: 0,
                get get() {
                    return this.value
                },
                set set(e) {
                    this.value = e
                }
            },
            isActive: function() {
                return $(c.flyout).hasClass("active")
            },
            conversationSource: function() {
                return r(d.conversationSource, "conversationSource")
            },
            bookingReference: function() {
                return r(d.bookingReference, "bookingReference")
            },
            orderReference: function() {
                return r(d.orderReference, "orderReference")
            },
            propertyShortname: function() {
                return r(d.propertyShortname, "propertyShortname")
            },
            refresh: function() {
                o()
            }
        })
    },
    9988: function() {
        function s() {
            return (eviivo.pms.conversations.review.flyout.isActive() ? $("".concat(u.reviewMessagesListFlyout, " tbody tr:first")) : $("".concat(u.messagesList, " tbody tr:first"))).data("id")
        }
        function o() {
            var e = s();
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "review-online-display-".concat(e),
                url: eviivoSuiteApp + "/api/conversations/review-online-display",
                data: {
                    MessageId: e,
                    Value: p.displayOnline.prop("checked")
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    eviivo.webcore.parsers.stringToBool(e) || eviivo.pms.conversations.failCallback(l.resources.errorDisplayOnline)
                },
                failCallback: function() {
                    eviivo.pms.conversations.failCallback(l.resources.errorDisplayOnline)
                }
            })
        }
        function n() {
            a($(this).closest(u.replyContainer).attr("data-id")),
            eviivo.pms.conversations.messageFooter.setMessageVal($(u.replyText).html()),
            eviivo.pms.conversations.messageFooter.saveBtnState(!1),
            eviivo.pms.conversations.messageFooter.setSaveBtnTextCancel(),
            eviivo.pms.conversations.messageFooter.showCancelBtn(!0),
            e(!(eviivo.pms.conversations.message.draft.shouldSave.set = !1))
        }
        function e(e) {
            d = e
        }
        function i() {
            var e = jQ(this);
            eviivo.pms.conversations.displayConfirmationNotifier(e, l.resources.deleteMessageConfirmation, eviivo.webcore.notifier.positions.topRight)
        }
        function t() {
            var o, e, s;
            eviivo.pms.conversations.isReview() && (e = $(this),
            o = e.closest("tr"),
            e = e.closest(u.replyContainer).attr("data-id"),
            s = eviivo.pms.conversations.conversation.id.get,
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: "delete-".concat(s, "-message-").concat(e),
                url: eviivoSuiteApp + "/api/conversations/message-delete",
                data: {
                    ConversationId: s,
                    MessageId: e,
                    Value: !0
                },
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                callback: function(e) {
                    eviivo.webcore.parsers.stringToBool(e) ? (o.find(u.replyContainer).remove(),
                    eviivo.pms.conversations.messageFooter.saveBtnState(!1),
                    eviivo.pms.conversations.messages.flyout.isActive() || eviivo.pms.conversations.review.flyout.isActive() || eviivo.pms.conversations.replied(!1)) : eviivo.pms.conversations.failCallback(l.resources.errorDeleting)
                },
                failCallback: function() {
                    eviivo.pms.conversations.failCallback(l.resources.errorDeleting)
                }
            }))
        }
        function a(e) {
            m = e
        }
        function r() {
            eviivo.pms.conversations.messageFooter.saveBtnState(!eviivo.pms.conversations.conversation.allowNewMessages.get)
        }
        function v() {
            var e = p.newMsg.val();
            !function(e) {
                var o = !0;
                p.newMsg.removeClass("error"),
                "" == e && (o = !1,
                p.newMsg.addClass("error"));
                return o
            }(e) || (e = e,
            eviivo.pms.conversations.messageFooter.saveBtnState(!0),
            (d ? function(e) {
                var o = eviivo.pms.conversations.conversation.id.get;
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "edit-review-reply-".concat(o),
                    url: eviivoSuiteApp + "/api/conversations/review-reply-edit",
                    data: {
                        ConversationId: o,
                        MessageId: m,
                        UpdateMessage: {
                            ConversationId: o,
                            ConversationType: eviivo.pms.conversations.constants.getConversationTypes().reviews,
                            ConversationSource: eviivo.pms.conversations.conversation.getSource(),
                            BodyText: {
                                Text: eviivo.webcore.html.sanitize(e)
                            },
                            PropertyShortName: eviivo.pms.conversations.conversation.getPropertyShortname(),
                            OrderReference: eviivo.pms.conversations.conversation.getOrderReference(),
                            BookingReference: eviivo.pms.conversations.conversation.getBookingReference(),
                            InReplyToId: s()
                        }
                    },
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        eviivo.pms.conversations.messageFooter.saveBtnState(!1),
                        e.Success ? (eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.review.flyout.refresh() : eviivo.pms.conversations.message.load(),
                        eviivo.pms.conversations.messageFooter.reset()) : c(e.ErrorMessage)
                    },
                    failCallback: function() {
                        eviivo.pms.conversations.messageFooter.saveBtnState(!1),
                        eviivo.pms.conversations.failCallback(l.resources.errorSending)
                    }
                })
            }
            : function(e) {
                var o = eviivo.pms.conversations.conversation.id.get;
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "review-reply-".concat(o),
                    url: eviivoSuiteApp + "/api/conversations/review-reply",
                    data: {
                        ConversationId: o,
                        ConversationType: eviivo.pms.conversations.constants.getConversationTypes().reviews,
                        ConversationSource: eviivo.pms.conversations.conversation.getSource(),
                        ExternalShortName: eviivo.pms.conversations.conversation.getSourceShortName(),
                        BodyText: {
                            Text: eviivo.webcore.html.sanitize(e)
                        },
                        PropertyShortName: eviivo.pms.conversations.conversation.getPropertyShortname(),
                        OrderReference: eviivo.pms.conversations.conversation.getOrderReference(),
                        BookingReference: eviivo.pms.conversations.conversation.getBookingReference(),
                        InReplyToId: s()
                    },
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        eviivo.pms.conversations.messageFooter.saveBtnState(!1),
                        e.Success ? (eviivo.pms.conversations.review.flyout.isActive() ? eviivo.pms.conversations.review.flyout.refresh() : (eviivo.pms.conversations.message.load(),
                        eviivo.pms.conversations.conversation.markAsReplied()),
                        eviivo.pms.conversations.messageFooter.reset()) : c(e.ErrorMessage)
                    },
                    failCallback: function() {
                        eviivo.pms.conversations.messageFooter.saveBtnState(!1),
                        eviivo.pms.conversations.failCallback(l.resources.errorSending)
                    }
                })
            }
            )(e))
        }
        function c(e) {
            null != e ? eviivo.pms.conversations.failCallback(e) : eviivo.pms.conversations.failCallback(l.resources.errorSending)
        }
        var l, u, p, d, m;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.review = window.eviivo.pms.conversations.review || {},
        window.eviivo.pms.conversations.review = (l = {},
        u = {
            messagesList: "#eviivo-list-messages",
            reviewMessagesListFlyout: "#eviivo-list-review",
            edit: ".s-edit-reviews",
            delete: ".s-delete-reviews",
            replyContainer: ".s-reply-container",
            replyText: ".s-reply-text",
            displayOnline: ".s-reviews_display",
            messageHeader: ".s-message-header",
            deleteConfirmation: ".s-delete-conversation",
            msgFooter: ".s-GTREV.s-message-footer",
            sendBtn: ".s-send-btn",
            newMsg: ".s-GTREV .s-newMsgTextarea"
        },
        d = !(p = {
            messagesList: null,
            displayOnline: null,
            newMsg: null,
            reviewMessagesListFlyout: null
        }),
        m = 0,
        {
            init: function(e) {
                l = eviivo.util.extend(l, e),
                eviivo.pms.conversations.messageFooter.setNewMsgPlaceholderText(l.resources.newMsgPlaceholder),
                eviivo.pms.conversations.messageFooter.setSaveButtonText(l.resources.replyButton),
                eviivo.pms.conversations.messageFooter.updateNewMsgPlaceholder(""),
                p.messagesList = $(u.messagesList),
                p.displayOnline = $(u.displayOnline),
                p.newMsg = $(u.newMsg),
                p.reviewMessagesListFlyout = $(u.reviewMessagesListFlyout),
                $(u.msgFooter).on("click", u.sendBtn, v),
                p.messagesList.on("click", u.edit, n),
                p.messagesList.on("click", u.delete, i),
                p.messagesList.on("click", u.deleteConfirmation, t),
                p.reviewMessagesListFlyout.on("click", u.edit, n),
                p.reviewMessagesListFlyout.on("click", u.delete, i),
                p.reviewMessagesListFlyout.on("click", u.deleteConfirmation, t),
                $(u.messageHeader).on("change", u.displayOnline, o)
            },
            reset: function() {
                r(),
                e(!1)
            },
            setSaveBtnState: r,
            setDisplayOnlineState: function(e) {
                $(u.displayOnline).prop("checked", e)
            },
            setReplyMessageId: a,
            getMainMessageId: s,
            ajaxDataCallback: function() {
                return {
                    conversationId: eviivo.pms.conversations.review.flyout.id.get,
                    type: eviivo.pms.conversations.constants.getConversationTypes().reviews
                }
            }
        })
    },
    990: function() {
        var a;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.reviewCustomRender = window.eviivo.pms.conversations.reviewCustomRender || {},
        window.eviivo.pms.conversations.reviewCustomRender = (a = {},
        {
            init: function(e) {
                a = eviivo.util.extend(a, e)
            },
            build: function(e, o, s) {
                var n, i, t;
                return s.MessageStatusCode == eviivo.pms.conversations.constants.getMessageStatusCode().Hidden ? "" : s.DeliveryStatusCode == eviivo.pms.conversations.constants.getDeliveryStatusCodes().Draft ? (eviivo.pms.conversations.message.draft.set(s),
                "") : (eviivo.pms.conversations.review.setDisplayOnlineState(s.ReviewOnlineDisplayBool),
                null != s.ReviewReplyMessageId ? eviivo.pms.conversations.review.setReplyMessageId(s.ReviewReplyMessageId) : eviivo.pms.conversations.review.setReplyMessageId(0),
                eviivo.pms.conversations.isReview(s.Type) ? (t = "" == (t = (n = s).Subject) ? "" : '<div class="h5">'.concat(t, "</div>"),
                i = "" == (i = s.WouldRecommend) || i == eviivo.pms.conversations.constants.getReviewWouldRecommend().notSpecified ? "" : i == eviivo.pms.conversations.constants.getReviewWouldRecommend().recommended ? '<div class="review-recommended">\n\t\t\t\t\t\t<span class="icon-phosphor-font icon-ic-checkmark-circle"></span>\n\t\t\t\t\t\t'.concat(a.resources.reviewsGuestRecommends, "\n\t\t\t\t\t</div>") : i == eviivo.pms.conversations.constants.getReviewWouldRecommend().notRecommended ? '<div class="review-not-recommended">\n\t\t\t\t\t\t<span class="icon-phosphor-font icon-ic-close"></span>\n    \t\t\t\t\t'.concat(a.resources.reviewsGuestDoesNotRecommends, "\n\t\t\t\t\t</div>") : "",
                s = null == (s = s).ReviewBusinessReplyText ? "" : '<div class="review-reply s-reply-container" data-id="'.concat(s.ReviewReplyMessageId, '">\n                        <div class="review-reply-body">\n\t\t\t\t\t        <span class="pre-line s-reply-text">').concat(s.ReviewBusinessReplyText, '</span>\n                            <a href="javascript:;" alt="" class="delete-reply s-delete-reviews">\n\t\t\t\t\t\t\t\t<span class="icon-phosphor-font icon-ic-delete"></span>\n\t\t\t\t\t\t\t</a>\n                        </div>\n                         <div class="review-footer">\n                            <span class="posted-date review-posted">').concat(s.ReviewName, ", ").concat(s.ReviewBusinessReplyDate, " ").concat(function(e) {
                    if (e.ReviewReplyIsEditable)
                        return '- <a class="s-edit-reviews" href="javascript:;" title="">'.concat(a.resources.reviewsEdit, "</a>");
                    return ""
                }(s), "</span>\n                        </div>\n                    </div>\n                   "),
                '<div class="review-container">\n\t\t\t\t    <div class="review-content-header">\n\t\t\t\t\t    <div class="h4">'.concat(n.Name, "</div>\n                        ").concat(i, '\n\t\t\t\t    </div>\n\t\t\t\t    <div class="review-timestamp">').concat(n.Date, '</div>\n\t\t\t\t    <div class="review-details">\n\t\t\t\t\t    ').concat(t, "\n\t\t\t\t\t    <p>").concat(n.Text.replace(/(?:\r\n|\r|\n)/g, "<br/>"), "</p>\n\t\t\t\t    </div>\n\t\t\t    </div>\n                ").concat(s)) : "")
            }
        })
    },
    4158: function() {
        function o() {
            t(!1),
            c.conversatoinListContainer.scrollTop(0)
        }
        function s() {
            d = !1,
            a()
        }
        function n() {
            var e = $(this);
            e.scrollTop() + e.innerHeight() >= e[0].scrollHeight - 500 && !u && !p && !d ? (l++,
            (a = function() {
                eviivo.pms.conversations.refreshIntervals.stopConversation(),
                eviivo.pms.conversations.refreshIntervals.startNewMsgConversation(),
                i(!(u = !0)),
                eviivo.pms.conversations.displayElement($(v.spinner), !0),
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: "scroll-load-conversations",
                    url: "".concat(eviivoSuiteApp, "/api/conversations/Conversationslist-scroll"),
                    data: {
                        Type: eviivo.pms.conversations.getConversationType(),
                        Index: l,
                        FilterRequest: eviivo.pms.conversations.filters.searchValues()
                    },
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.APPLICATION_JSON_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.JSON,
                    callback: function(e) {
                        eviivo.pms.conversations.displayElement($(v.spinner), !1),
                        u = !1,
                        null != e ? 0 < e.length ? eviivo.component.listing.addRowsData(v.conversationsList, e) : 0 == e.length && (p = !0) : i(!0)
                    },
                    failCallback: function() {
                        i(!(u = !1))
                    }
                })
            }
            )()) : e.scrollTop() + e.innerHeight() >= e[0].scrollHeight - 10 && p ? t(!0) : 1e3 <= e.scrollTop() + e.innerHeight() && p ? (eviivo.pms.conversations.refreshIntervals.stopConversation(),
            eviivo.pms.conversations.refreshIntervals.startNewMsgConversation(),
            t(!1)) : e.scrollTop() + e.innerHeight() < 1e3 && p && t(!1)
        }
        function i(e) {
            d = e,
            eviivo.pms.conversations.displayErrorMsg($(v.errorReloadScroll).parent(), e),
            eviivo.pms.conversations.displayElement($(v.spinner), !1),
            eviivo.pms.conversations.error(!1)
        }
        function t(e) {
            var o;
            o = $(v.scrollEnd),
            e ? o.css("display", "inline-flex").hide().fadeIn(200) : o.css("display", "inline-flex").hide().fadeOut(200)
        }
        var a, r, v, c, l, u, p, d;
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.scroll = window.eviivo.pms.conversations.scroll || {},
        window.eviivo.pms.conversations.scroll = (r = {},
        v = {},
        l = 0,
        d = p = u = !(c = {
            conversatoinListContainer: null
        }),
        {
            init: function(e) {
                r = eviivo.util.extend(r, e),
                v = eviivo.pms.conversations.selectors,
                c.conversatoinListContainer = $(v.conversatoinListContainer),
                c.conversatoinListContainer.on("scroll", n),
                c.conversatoinListContainer.on("click", v.errorReloadScroll, s),
                $("".concat(v.scrollEnd, " a")).on("click", o)
            },
            displayReachedEndMsg: t,
            reset: function() {
                l = 0,
                t(p = !1)
            }
        })
    },
    7873: function() {
        window.eviivo = window.eviivo || {},
        window.eviivo.pms = window.eviivo.pms || {},
        window.eviivo.pms.conversations = window.eviivo.pms.conversations || {},
        window.eviivo.pms.conversations.selectors = window.eviivo.pms.conversations.selectors || {},
        window.eviivo.pms.conversations.selectors = {
            conversationsList: "#eviivo-list-conversations",
            conversationsListRow: ".s-conversation",
            messagesList: "#eviivo-list-messages",
            pin: ".s-pin",
            archive: ".s-archive",
            delete: ".s-delete",
            deleteConfirmation: ".s-delete-conversation",
            messageHeaderContainer: ".s-message-header",
            newMsgAlert: ".s-conversation-new-msg-alert",
            conversatoinListContainer: ".s-conversation-list-container",
            emptyMessage: ".s-conversation-empty",
            emptySearchMessage: ".s-conversation-empty-search",
            tableContainer: "#eviivo-list-conversations_wrapper",
            spinner: ".s-conversations-spinner",
            errorReload: ".s-error-reload-conversations",
            errorReloadScroll: ".s-error-reload-scroll-conversations",
            messagesContainer: "#view-messages-container",
            newBtn: ".s-create-new-conversation",
            viewBtn: ".s-view-conversation",
            flyout: "#view-conversation",
            flyoutReview: "#view-review",
            flyoutConversationCreating: "#view-conversation-creating",
            flyoutStack: ".cp-flyout_stacks",
            scrollEnd: ".s-conversation-scroll-end",
            newMsgAlertUpdate: ".s-update",
            newMsgAlertUpdateAndClear: ".s-clear-filters",
            confirmationNotifierBtnOne: ".btn-one",
            confirmationNotifierBtnTwo: ".btn-two",
            flyoutMessageList: "#eviivo-list-messages-flyout",
            genericSpinnerClass: ".s-spinner"
        }
    }
}
  , n = {};
function i(e) {
    var o = n[e];
    return void 0 !== o || (o = n[e] = {
        exports: {}
    },
    s[e](o, o.exports, i)),
    o.exports
}
i.n = function(e) {
    var o = e && e.__esModule ? function() {
        return e.default
    }
    : function() {
        return e
    }
    ;
    return i.d(o, {
        a: o
    }),
    o
}
,
i.d = function(e, o) {
    for (var s in o)
        i.o(o, s) && !i.o(e, s) && Object.defineProperty(e, s, {
            enumerable: !0,
            get: o[s]
        })
}
,
i.o = function(e, o) {
    return Object.prototype.hasOwnProperty.call(e, o)
}
,
function() {
    "use strict";
    i(3290),
    i(1226),
    i(4158),
    i(9017),
    i(7873),
    i(2028),
    i(3623),
    i(6301),
    i(5e3),
    i(831),
    i(107),
    i(5159),
    i(302),
    i(9449),
    i(3446),
    i(7207),
    i(3592),
    i(1878),
    i(1287),
    i(357),
    i(7555),
    i(5663),
    i(5494),
    i(3937),
    i(2222),
    i(990),
    i(9988),
    i(3388),
    i(4294)
}();
//# sourceMappingURL=conversations.min.js.map
