var n = {
    7890: function() {
        function e(e) {
            var t = jQuery(this);
            t.val(t.prop("checked") ? "true" : "false"),
            t.is(":checked") ? (t.siblings(".checkbox-off").removeClass("checked"),
            t.siblings(".checkbox-on").addClass("checked"),
            eviivo.util.safeFunction(t.data("on-handler"), [e, t])) : (t.siblings(".checkbox-on").removeClass("checked"),
            t.siblings(".checkbox-off").addClass("checked"),
            eviivo.util.safeFunction(t.data("off-handler"), [e, t]))
        }
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.switch = {
            init: function() {
                if ("function" != typeof window.jQuery)
                    throw "eviivo.component.switch: module depends on jQuery";
                window.jQuery,
                jQuery(document).on("change.eviivo.component.switch", "input[type='checkbox'].s-switch", e)
            }
        }
    },
    2197: function() {
        function t() {
            var e = d(this)
              , t = e.parents("div.s-translatable-section")
              , e = "[data-language-code='".concat(e.val(), "']")
              , n = (t.find(u).each(function(e, t) {
                var t = d(t)
                  , n = t.attr("data-language-code");
                "" != n && null != n && "root" != n && t.addClass("hide").css("display", "")
            }),
            "input[type='text']".concat(e, ",small.s-helper-text").concat(e))
              , e = (t.find(n).removeClass("hide"),
            n = "textarea".concat(e),
            t.find(n));
            0 < e.length && ("true" == e.attr("data-has-summernote") ? (n = e.attr("data-summernote-identifier"),
            n = n,
            (t = t).find("div.note-editor").addClass("hide"),
            t.find("div.note-editor[data-textarea-id='".concat(n, "_summernote_area']")).removeClass("hide")) : e.removeClass("hide").css("display", ""))
        }
        function n(e) {
            var o, a, t = d(this), n = t.parents("div.s-translatable-section"), i = n.find("#isValidationTranslationsOn").val();
            eviivo.webcore.parsers.stringToBool(i) && (i = "change" === e.type ? t.val() : t.data("language-code"),
            e = '[data-language-code="'.concat(i, '"]'),
            n.find(".field-validation-valid:not(.validation-language-list)").addClass("hide"),
            n.find(".field-validation-valid:not(.validation-language-list)").hide(),
            i = "input[type='text']".concat(e, ",textarea").concat(e, ",small.s-helper-text").concat(e),
            (e = n.find(i)).hasClass("input-validation-error") && (e.next().removeClass("hide"),
            e.next().show()),
            n = (o = d(o = t)).parents("div.s-translatable-section"),
            a = o.parent().find(".validation-language-list"),
            n.find(u).each(function(e, t) {
                var n, t = d(t), i = t.attr("data-language-code");
                "" != i && null != i && "root" != i && (n = t.parent().find(".validation-language-list"),
                (t = t.hasClass("input-validation-error")) || a.find('span[data-language-code="' + i + '"]').remove(),
                t || 0 != n.children().length || a.addClass("hide"),
                t) && 0 == n.find('span[data-language-code="' + i + '"]').length && (a.removeClass("hide"),
                a.append('<span data-language-code="' + i + '">' + o.parent().parent().parent().find('select option[value="' + i + '"]').text() + "</span>"))
            }))
        }
        function l(e, t) {
            return null == e || e.length <= 0 || e.hasClass("hide") || !e.is(":visible") || 0 < t.length && (t.hasClass("hide") || !t.is(":visible"))
        }
        function c(e, t) {
            return null == e || e.length <= 0 || e.hasClass("hide") || !e.is(":visible") || 0 < t.length && (t.hasClass("hide") || !t.is(":visible"))
        }
        function s(e, t) {
            var n;
            return null == e || e.length <= 0 ? (console.error("eviivo.webcore.translatableSection.extractValidationTextForTextInput: Cannot extract validation text, jqElem is null or empty!", e),
            null) : null == t ? (console.error("eviivo.webcore.translatableSection.extractValidationTextForTextInput: Cannot extract validation text, cultureNames is null or empty!", t),
            null) : "" == (n = e.attr("data-language-code")) ? (console.error("eviivo.webcore.translatableSection.extractValidationTextForTextInput: Cannot extract validation text, item has no language code!", e),
            null) : t[n]
        }
        function r(n, e, i, o) {
            var a, l, c, s;
            return null == o.arrayOfElements || 0 == o.arrayOfElements.length ? (console.error("eviivo.webcore.translatableSection.validateGenericInputs: cannot validate, you have to supply the instanceOptions.arrayOfElements!"),
            !1) : null == n || "function" != typeof n ? (console.error("eviivo.webcore.translatableSection.validateGenericInputs: cannot validate, you have to supply the validationFunction!"),
            !1) : (a = null != e && "function" == typeof e && null != i && "function" == typeof i ? !0 : !1,
            c = !(l = !0),
            s = "",
            o.arrayOfElements.forEach(function(e) {
                var t = n(e)
                  , e = (l = l && t,
                i(e, o.cultureNames));
                null != e && 1 == a && 0 == t && (c = !0,
                1 == o.displayInvalidLanguages) && (s = "".concat(s, ", ").concat(e))
            }),
            "" != s && 2 < s.length && (s = s.substr(2, s.length - 2)),
            null != o.otherLanguagesInvalidLabel && 0 < o.otherLanguagesInvalidLabel.length && (o.otherLanguagesInvalidLabel.addClass("hide").removeClass("error-colour"),
            1 == c) && (null != (e = o.resources.inputFieldOtherTranslationsInvalidLabel) && "" != e && "" != s ? e = "".concat(e, "<br/>(").concat(s, ")") : "" != s && (e = "[invalid languages]: (".concat(s, ")")),
            o.otherLanguagesInvalidLabel.html(e),
            o.otherLanguagesInvalidLabel.removeClass("hide").addClass("error-colour")),
            l)
        }
        var d, i, u;
        window.eviivo = window.eviivo || {},
        window.eviivo.webcore = window.eviivo.webcore || {},
        window.eviivo.webcore.translatableSection = window.eviivo.webcore.translatableSection || {},
        window.eviivo.webcore.translatableSection = (u = "input[type='text'][data-language-code],textarea[data-language-code],small.s-helper-text[data-language-code]",
        {
            init: function() {
                if ("function" != typeof window.jQuery)
                    throw "eviivo.webcore.translatableSection: module depends on jQuery";
                d = window.jQuery,
                i = null,
                "undefined" != typeof Storage && (i = window.sessionStorage),
                d(document).on("change.eviivo.webcore.translatableSection", "div.s-translatable-section select", t),
                d(document).on("change.eviivo.webcore.translatableSection", "div.s-translatable-section select", n),
                d(document).on("blur.eviivo.webcore.translatableSection", "div.s-translatable-section input[type='text']", n);
                var e = d(".page-heading_has-translation input[type='checkbox'].s-switch,form.s-form-with-translation-switch input[type='checkbox'].s-switch");
                0 < e.length && e.each(function(e, t) {
                    t = d(t);
                    t.is(":checked") && t.trigger("change.eviivo.component.switch"),
                    !t.is(":checked") && null != i && eviivo.webcore.parsers.stringToBool(i.translationsOn) && t.trigger("click")
                })
            },
            show: function(e, t) {
                d("div.s-translatable-section").removeClass("hide"),
                d("div.s-translatable-section select").trigger("change.eviivo.webcore.translatableSection"),
                d("#guest-custom-field-internal1-translations").addClass("hide"),
                d("#guest-custom-field-internal2-translations").addClass("hide"),
                d(".mod-multilanguage .tab").removeClass("hide"),
                d("body").removeClass("page-has-translations").addClass("page-has-translations"),
                null != i && (i.translationsOn = !0)
            },
            hide: function(e, t) {
                d("div.s-translatable-section").addClass("hide"),
                d(".mod-multilanguage .tab").addClass("hide"),
                d("body").removeClass("page-has-translations"),
                null != i && i.removeItem("translationsOn")
            },
            translations: function() {
                var n = null;
                return d(".input-edit-container").find("input[type='text'],textarea").each(function(e, t) {
                    t = d(t);
                    (n = null == n ? [] : n).push({
                        content: t.val(),
                        cultureCode: t.attr("data-language-code")
                    })
                }),
                n
            },
            initTranslations: function() {
                d(".input-edit-container").find("input[type='text'],textarea").each(function(e, t) {
                    t = d(t);
                    "root" !== t.attr("data-language-code") && (t.parents(".s-translatable-section").find("select[name='cultures-dropdown']").val() == t.attr("data-language-code") ? t.removeClass("hide") : t.addClass("hide"))
                })
            },
            refreshDisplay: function() {
                var e = d("div.s-translatable-section select")
                  , n = e.parents("div.s-translatable-section")
                  , i = "[data-language-code='" + e.val() + "']";
                n.find("div.note-editor").addClass("hide"),
                d(n).each(function(e, t) {
                    t = d(t).find("input[type='text']" + i + ",textarea" + i).attr("id");
                    n.find("div.note-editor[data-textarea-id='" + t + "_summernote_area']").removeClass("hide")
                })
            },
            isLanguageListValid: function(e) {
                return null == e ? (console.error("No validation list to check against"),
                !1) : 0 == e.children().length
            },
            initValidation: function(n) {
                if ("function" != typeof eviivo.webcore.textInput.validation.init)
                    console.error("eviivo.webcore.translatableSection.initValidation: module depends on eviivo.webcore.textInput.validation.init!", n);
                else if (null == n)
                    console.error("eviivo.webcore.translatableSection.initValidation: you MUST specify options!", n);
                else if (null == n.translatableAreaContainer)
                    console.error("eviivo.webcore.translatableSection.initValidation: you MUST specify options.translatableAreaContainer!", n);
                else if (null == n.itemsSelector)
                    console.error("eviivo.webcore.translatableSection.initValidation: you MUST specify options.itemsSelector!", n);
                else {
                    var e = n.translatableAreaContainer;
                    if (0 == (e = "string" == typeof n.translatableAreaContainer ? jQuery(n.translatableAreaContainer) : e).length)
                        console.error("eviivo.webcore.translatableSection.initValidation: could not find element(s) for the options.translatableAreaContainer!", n);
                    else {
                        var i, o, t, a = e.find(n.itemsSelector);
                        if (0 != a.length)
                            return i = [],
                            a.each(function(e, t) {
                                var t = jQuery(t);
                                i.push(t),
                                1 != n.isHtmlContent && (t = jQuery.extend({}, {
                                    inputElement: t,
                                    resources: n.resources.validation,
                                    initEventHandlers: !0
                                }),
                                eviivo.webcore.textInput.validation.init(t))
                            }),
                            a = e.find("div.s-translatable-section select option"),
                            o = {},
                            a.length <= 0 ? console.warn('eviivo.webcore.translatableSection.initValidation: jqCultureNames is null or empty (cannot find "div.s-translatable-section select option")!', n) : a.each(function(e, t) {
                                var n = jQuery(t).attr("value");
                                o["".concat(n)] = jQuery(t).text().trim()
                            }),
                            a = null,
                            1 == n.useOtherLanguagesDefaultInvalidLabel ? a = e.find("small.s-invalid-info-text") : "string" == typeof (a = n.otherLanguagesInvalidLabel) && (a = jQuery(a)),
                            t = {
                                translatableAreaContainer: e,
                                otherLanguagesInvalidLabel: a,
                                otherLanguagesAreaContainer: e.find("div.s-translatable-section"),
                                arrayOfElements: i,
                                cultureNames: o,
                                displayInvalidLanguages: n.displayInvalidLanguages,
                                resources: n.resources
                            },
                            1 == n.isHtmlContent ? n.validate = function() {
                                var e = t;
                                return null == e ? (console.error("eviivo.webcore.translatableSection.validateHtmlTextInputs: you MUST specify instanceOptions!"),
                                !1) : null == e.translatableAreaContainer ? (console.error("eviivo.webcore.translatableSection.validateHtmlTextInputs: you MUST specify instanceOptions.translatableAreaContainer!"),
                                !1) : null != e.arrayOfElements && 0 != e.arrayOfElements.length ? r(eviivo.webcore.summernote.validate, l, s, e) : void console.error("eviivo.webcore.translatableSection.validateHtmlTextInputs: could not find element(s) for the instanceOptions.arrayOfElements!")
                            }
                            : n.validate = function() {
                                var e = t;
                                return null == e ? (console.error("eviivo.webcore.translatableSection.validateTextInputs: you MUST specify instanceOptions!"),
                                !1) : null == e.translatableAreaContainer ? (console.error("eviivo.webcore.translatableSection.validateTextInputs: you MUST specify instanceOptions.translatableAreaContainer!"),
                                !1) : null != e.arrayOfElements && 0 != e.arrayOfElements.length ? r(eviivo.webcore.textInput.validation.validate, c, s, e) : void console.error("eviivo.webcore.translatableSection.validateTextInputs: could not find element(s) for the instanceOptions.arrayOfElements!")
                            }
                            ,
                            n;
                        console.error("eviivo.webcore.translatableSection.initValidation: could not find element(s) for the options.itemsSelector!", n)
                    }
                }
            }
        })
    },
    5032: function() {
        var t, n, i, o, a, l, c, s, r, d;
        function u() {
            eviivo.component.flyout.showFlyout(eviivo.component.flyoutListAssignment.getSelectors().AssignFlyout)
        }
        function v(e, t) {
            null != t && "" !== t && eviivo.webcore.notifier.show({
                type: e,
                message: t
            })
        }
        function p() {
            return eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.list.getAssigned: ", d),
            d
        }
        function f(e) {
            d = e,
            eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.list.setAssigned: ", d)
        }
        function g(e) {
            d.push(e),
            eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.list.pushAssigned: ", d)
        }
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.flyoutListAssignment = window.eviivo.component.flyoutListAssignment || {},
        window.eviivo.component.flyoutListAssignment = (jQuery,
        t = {},
        n = {},
        c = l = a = o = i = null,
        {
            init: function(e) {
                t = e.selectors,
                i = e.entity,
                o = e.route,
                n = e.resx,
                a = e.postAjaxDataCallback,
                l = e.postSuccessCallback,
                c = e.onSuccessListDataLoadAssign
            },
            getSelectors: function() {
                return t
            },
            getResx: function() {
                return n
            },
            getEntity: function() {
                return i
            },
            getRoute: function() {
                return o
            },
            getPostAjaxDataCallback: function() {
                return a
            },
            getPostSuccessCallback: function() {
                return l
            },
            getOnSuccessListDataLoadAssign: function() {
                return c
            }
        }),
        window.eviivo.component.flyoutListAssignment.flyout = (s = jQuery,
        {
            showFlyout: function() {
                var e = eviivo.component.flyoutListAssignment.getSelectors();
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.showFlyout", e),
                eviivo.component.flyout.showFlyout(eviivo.component.flyoutListAssignment.getSelectors().AssignedFlyout)
            },
            onShowAssigned: function() {
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onShowAssigned");
                var e = eviivo.component.flyoutListAssignment.getSelectors();
                eviivo.component.listing.postInitRefreshDataTableSpecific(e.AssignedTable),
                s(document).off("click", e.AddItemButton, u).on("click", e.AddItemButton, u)
            },
            onCancelAssigned: function() {},
            onCloseAssigned: function() {
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onCloseAssigned"),
                eviivo.component.flyoutListAssignment.list.setAssigned([])
            },
            onSave: function() {
                var e = [].concat.apply([], eviivo.component.flyoutListAssignment.list.getAssigned())
                  , t = {
                    ids: e
                }
                  , n = eviivo.util.safeFunction(eviivo.component.flyoutListAssignment.getPostAjaxDataCallback());
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.postAjaxDataCallback check function exists and is function run: ", n),
                "function" == typeof n && (t = n(e)),
                eviivo.webcore.ajaxHelper.executeAjax({
                    actionId: eviivo.component.flyoutListAssignment.getEntity(),
                    url: eviivo.component.flyoutListAssignment.getRoute() + eviivo.component.flyoutListAssignment.getEntity() + "Assign",
                    data: t,
                    method: eviivo.webcore.ajaxHelper.methods.POST,
                    contentType: eviivo.webcore.ajaxHelper.contentTypes.URL_ENCODED_UTF8,
                    dataType: eviivo.webcore.ajaxHelper.dataTypes.HTML,
                    callback: function(e) {
                        eviivo.webcore.parsers.stringToBool(e) ? (eviivo.component.flyout.hideFlyout(eviivo.component.flyoutListAssignment.getSelectors().AssignedFlyout),
                        e = eviivo.util.safeFunction(eviivo.component.flyoutListAssignment.getPostSuccessCallback()),
                        eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.postSuccessCallback check function exists and is function run: ", e),
                        "function" == typeof e && e(),
                        v("success", eviivo.component.flyoutListAssignment.getResx().success)) : v("error", eviivo.component.flyoutListAssignment.getResx().error)
                    }
                })
            },
            onShowAssign: function() {
                eviivo.component.listing.postInitRefreshDataTableSpecific(eviivo.component.flyoutListAssignment.getSelectors().AssignTable)
            },
            onCancelAssign: function() {
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onCancelAssign");
                var e = document.querySelectorAll(eviivo.component.flyoutListAssignment.getSelectors().AssignedTable + " tbody tr")
                  , n = [];
                0 != e.length && e.forEach(function(e, t) {
                    null != s(e).data("id") && n.push(s(e).data("id"))
                }),
                eviivo.component.flyoutListAssignment.list.setAssigned(n)
            },
            onContinue: function() {
                var e = eviivo.component.flyoutListAssignment.list.getAssigned()
                  , n = (eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onContinue", e),
                eviivo.component.listing.getNamedDataTableInstance(eviivo.component.flyoutListAssignment.getSelectors().AssignTable).dataTable)
                  , i = [];
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onContinue", n),
                e.forEach(function(e, t) {
                    e = s("#" + eviivo.component.flyoutListAssignment.getSelectors().AssignTable + " tr[data-id='" + e + "']"),
                    e = n.row(e).data();
                    i.push(e)
                }),
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onContinue", i),
                (e = s("#" + eviivo.component.flyoutListAssignment.getSelectors().AssignedTable).dataTable()).fnClearTable(),
                0 != i.length && (eviivo.component.flyoutListAssignment.list.setAssigned([]),
                e.fnAddData(i)),
                eviivo.component.flyout.hideFlyout(eviivo.component.flyoutListAssignment.getSelectors().AssignFlyout)
            }
        }),
        window.eviivo.component.flyoutListAssignment.list = (r = jQuery,
        d = [],
        {
            onBeforeListDataLoad: function() {},
            onSuccessListDataLoad: function() {
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onSuccessListDataLoadAssign getAssigned: ", p()),
                r("#" + eviivo.component.flyoutListAssignment.getSelectors().AssignTable + " .s-select-row").prop("checked", !1),
                p().forEach(function(e, t) {
                    e = Array.isArray(e) ? e[0] : e;
                    r("#" + eviivo.component.flyoutListAssignment.getSelectors().AssignTable + ' .s-select-row[data-id="' + e + '"]').prop("checked", "checked").click()
                });
                var e = eviivo.util.safeFunction(eviivo.component.flyoutListAssignment.getOnSuccessListDataLoadAssign());
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.flyout.onSuccessListDataLoadAssign check function exists and is function run: ", e),
                "function" == typeof e && e()
            },
            RowSelectionCallback: function() {
                var e = document.querySelectorAll("#" + eviivo.component.flyoutListAssignment.getSelectors().AssignTable + " .s-select-row:checked")
                  , n = [];
                eviivo.component.debug.printDebug("eviivo.component.flyoutListAssignment.list.RowSelectionCallback", e.length),
                0 != e.length && e.forEach(function(e, t) {
                    n.push(r(e).data("id"))
                }),
                f(n)
            },
            onRowCreatedDataTable: function(e, t, n, i, o) {
                g([t.Id])
            },
            constructDeleteAjaxData: function(n, e) {
                r("#" + eviivo.component.flyoutListAssignment.getSelectors().AssignedTable + " tr[data-id='" + n.Id + "']").remove();
                var i = [];
                return p().forEach(function(e, t) {
                    e != n.Id && i.push(e)
                }),
                f(i),
                !1
            },
            getAssigned: p,
            setAssigned: f,
            pushAssigned: g
        })
    },
    5808: function() {
        var f;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.multiSelectDragDrop = window.eviivo.component.multiSelectDragDrop || {},
        window.eviivo.component.multiSelectDragDrop = void ((f = jQuery).multiSelectDragDrop = function(e, t) {
            var n = {
                selectors: {
                    widgetId: null,
                    leftColumnId: null,
                    rightColumnId: null
                }
            }
              , i = this;
            i.settings = {};
            function o(e, t) {
                t = jQuery(t);
                i.rightColumn.prepend(t)
            }
            function a(e) {
                e.preventDefault(),
                i.leftColumn.find("li.ui-state-selected").each(o)
            }
            function l(e) {
                e.preventDefault(),
                i.leftColumn.find("li").each(function() {
                    i.rightColumn.prepend(jQuery(this))
                })
            }
            function c(e, t) {
                t = jQuery(t);
                i.leftColumn.prepend(t)
            }
            function s(e) {
                e.preventDefault(),
                i.rightColumn.find("li.ui-state-selected").each(c)
            }
            function r(e) {
                e.preventDefault(),
                i.rightColumn.find("li").each(function() {
                    i.leftColumn.prepend(jQuery(this))
                })
            }
            function d(e) {
                e.ctrlKey ? jQuery(this).toggleClass("ui-state-selected") : (e = jQuery(this).hasClass("ui-state-selected"),
                i.el.find("li").removeClass("ui-state-selected"),
                !1 === e && jQuery(this).addClass("ui-state-selected"))
            }
            i.getNonSelected = function() {
                var n = [];
                return i.leftColumn.children().each(function(e, t) {
                    n.push(f(t).data("id"))
                }),
                n
            }
            ,
            i.getSelected = function() {
                var n = [];
                return i.rightColumn.children().each(function(e, t) {
                    n.push(f(t).data("id"))
                }),
                n
            }
            ,
            i.getAll = function() {
                var e = i.getSelected();
                return e.concat(i.getNonSelected()),
                e
            }
            ,
            i.isAllToggled = function() {
                return eviivo.webcore.parsers.stringToBool(f("input[name='msddType']:checked").val())
            }
            ;
            function u(e) {
                e.find(".arrow-single-l").on("click", a),
                e.find(".arrow-double-l").on("click", l),
                e.find(".arrow-single-r").on("click", s),
                e.find(".arrow-double-r").on("click", r),
                e.find("li").on("click", d),
                f('input[name="msddType"]').on("change", function() {
                    p()
                }),
                p()
            }
            function v() {
                i.leftColumn.sortable({
                    connectWith: "#" + i.rightColumn.attr("id"),
                    placeholder: "ui-state-highlight",
                    receive: function(e, t) {},
                    update: function(e, t) {}
                }),
                i.rightColumn.sortable({
                    connectWith: "#" + i.leftColumn.attr("id"),
                    placeholder: "ui-state-highlight",
                    receive: function(e, t) {},
                    update: function(e, t) {}
                })
            }
            var p = function() {
                i.isAllToggled() ? i.el.parent().addClass("hide") : i.el.parent().removeClass("hide")
            };
            i.settings = f.extend({}, n, t),
            i.el = e,
            i.leftColumn = f("#" + i.settings.selectors.leftColumnId),
            i.rightColumn = f("#" + i.settings.selectors.rightColumnId),
            v(),
            u(i.el)
        }
        )
    },
    5124: function() {
        function n(e) {
            e.preventDefault()
        }
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.progress = window.eviivo.component.progress || {},
        window.eviivo.component.progress = {
            init: function() {
                if (eviivo.component.handlers.assign(".cp-steps_incomplete a", n, "click"),
                0 == document.querySelectorAll(".cp-steps_incomplete").length) {
                    eviivo.component.handlers.assign(".cp-steps_complete a", n, "click");
                    for (var e = document.querySelectorAll(".cp-steps_complete a"), t = 0; t < e.length; t++)
                        e[t].classList.add("default-cursor")
                }
            },
            cancelAction: function() {
                window.location.href = "index"
            },
            backAction: function() {
                history && history.back()
            },
            nextAction: function() {
                window.location.href = options.NextURL
            }
        }
    },
    2953: function() {
        function c(e) {
            return e = null == e ? g("#sortableContainer") : e
        }
        function i(e, t, n, i) {
            e = c(e),
            null == t && (t = n ? e.find("#sortable1 li") : e.find("#sortable2 li"));
            var o = new Array;
            return t.each(function() {
                void 0 === i ? o.push(Number(g(this).attr("item-id"))) : o.push(g(this).attr(i))
            }),
            o
        }
        function o(e, t, n, i, o) {
            e = c(e);
            var a = "<br />"
              , l = "";
            "" != o && "" != i || (a = "",
            l = "class='smallTopPad'"),
            t.append(m.format(n, i, o, a, l)),
            f(e)
        }
        function a(e) {
            var t = (e = c(e)).find(".mod-sortable li:not(.ui-state-disabled)");
            e.find("#sortable1").prepend(t),
            f(e)
        }
        function t(e, t) {
            u(e, "#sortableLeftColumn", t)
        }
        function n(e, t) {
            u(e, "#sortableRightColumn", t)
        }
        function l(e, t) {
            u(e, "#sortableIncludeAll", t)
        }
        function s(e, t) {
            u(e, "#sortableExcludeAll", t)
        }
        function r(e, t) {
            u(e, "#sortableInclude", t)
        }
        function d(e, t) {
            u(e, "#sortableExclude", t)
        }
        function u(e, t, n) {
            (e = c(e)).find(t).html(n)
        }
        function v(t, e, n) {
            var i = ".mod-sortable:not(.s-new-sortable)";
            b = n,
            h = e,
            (t = c(t)).find(i).sortable({
                cancel: ".ui-state-disabled",
                connectWith: ".connectedSortable",
                items: "li:not(.ui-state-disabled)",
                placeholder: "ui-state-highlight"
            }),
            p(t),
            t.find(".arrow-single-l:not(.s-new-sortable)").on("click", function(e) {
                e.preventDefault();
                e = t.find(".mod-sortable:not(.s-new-sortable) li.ui-state-selected");
                t.find("#sortable2").prepend(e),
                f(t)
            }),
            t.find(".arrow-double-l:not(.s-new-sortable)").on("click", function(e) {
                e.preventDefault();
                e = t.find(".mod-sortable:not(.s-new-sortable) li:not(.ui-state-disabled)");
                t.find("#sortable2").prepend(e),
                f(t)
            }),
            t.find(".arrow-single-r:not(.s-new-sortable)").on("click", function(e) {
                e.preventDefault();
                e = t.find(".mod-sortable:not(.s-new-sortable) li.ui-state-selected");
                t.find("#sortable1").prepend(e),
                f(t)
            }),
            t.find(".arrow-double-r:not(.s-new-sortable)").on("click", function(e) {
                e.preventDefault(),
                a(t),
                f(t)
            }),
            g(document).on("keyup", function(e) {
                27 == e.keyCode && t.find(".mod-sortable li").removeClass("ui-state-selected")
            }),
            t.find(i).sortable({
                receive: function() {
                    f(t)
                }
            })
        }
        function p(t) {
            (t = c(t)).find(".mod-sortable li").off("click"),
            t.find(".mod-sortable li:not(.ui-state-disabled)").on("click", function(e) {
                e.ctrlKey ? g(this).toggleClass("ui-state-selected") : (e = g(this).hasClass("ui-state-selected"),
                t.find(".mod-sortable li").removeClass("ui-state-selected"),
                !1 === e && g(this).addClass("ui-state-selected"))
            })
        }
        function f(e, t, n) {
            e = c(e);
            t = g(t = null == t ? "#appliedCount" : t);
            null != t && (e = i(e, null, n).length,
            0 == b && 0 == e ? t.html("") : t.html("(" + e + ")")),
            (n = h) && n()
        }
        var g, m, b, h;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.twoColumnListAssignment = window.eviivo.component.twoColumnListAssignment || {},
        window.eviivo.component.twoColumnListAssignment = (g = jQuery,
        m = "<li class='ui-state-default ui-state-flex' title='{1}' item-id={0}><span {4}><strong>{1}</strong>{3}{2}</span></li>",
        b = !0,
        h = null,
        {
            init: function(e) {
                v(e.container, e.callback, e.showCountOnZero),
                t(e.container, e.resources.ChannelLeftColumn),
                n(e.container, e.resources.ChannelRightColumn),
                l(e.container, e.resources.CloseAll),
                s(e.container, e.resources.OpenAll),
                r(e.container, e.resources.Close),
                d(e.container, e.resources.Open)
            },
            initSortableWidget: v,
            getSortableLineItem: function() {
                return m
            },
            getSelectedSortableItems: i,
            addSortableItemToLeftList: function(e, t, n, i) {
                o(e = c(e), e.find("#sortable1"), t, n, i)
            },
            addSortableItemToRightList: function(e, t, n, i) {
                o(e = c(e), e.find("#sortable2"), t, n, i)
            },
            moveSortableItemToRightList: function(e, t) {
                (e = c(e)).find("#sortable1 li").each(function() {
                    g(this).attr("item-id") == t && e.find("#sortable2").prepend(g(this))
                }),
                f(e)
            },
            moveAllSortableFromRightToLeftNoCallBack: a,
            updateSortableWidgetCount: f,
            setRightColumnTitle: n,
            setLeftColumnTitle: t,
            setupAccordionEvent: function(e) {
                g(e = null == e ? ".accordion" : e).on("click", function() {
                    g(this).parent().toggleClass("accordion-expanded")
                })
            },
            addSortableItemClickEvents: p,
            setIncludeAllText: l,
            setExcludeAllText: s,
            setIncludeText: r,
            setExcludeText: d,
            clearItemsFromTheWidget: function(e) {
                g(e).find("ul#sortable1").find("li").remove(),
                g(e).find("ul#sortable2").find("li").remove()
            },
            getSelectedItems: function(e, t, n, o) {
                e = c(e),
                null == t && (t = n ? e.find("#sortable1 li") : e.find("#sortable2 li"));
                var a = [];
                return t.each(function() {
                    var e = g(this);
                    if (null == o)
                        a.push(e.attr("item-id"));
                    else {
                        for (var t = {
                            id: e.attr("item-id")
                        }, n = 0; n < o.length; n++) {
                            var i = o[n];
                            t[i.replace("-", "_")] = e.attr(i)
                        }
                        a.push(t)
                    }
                }),
                a
            }
        })
    },
    3278: function() {
        var d, u;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.customRenders = window.eviivo.component.listing.customRenders || {},
        window.eviivo.component.listing.customRenders = (u = !0,
        {
            renderSelectDropDown: function(l, e, t) {
                var n, i, o, a = (s = eviivo.component.listing.getNamedDataTableInstance(l.table().node().id)).options, c = s.dataTable, s = a.resources, r = e + a.enableBulkSelect, e = (a.filterPosition.Header && (n = (0 < (e = $(a.container + " thead tr:eq(0) th").eq(r)).children().length ? e.children("span").first() : e).text(),
                i = e.empty()),
                a.filterPosition.Footer && (i = l.footer().empty()),
                a.filterPosition.Custom && (i = a.filterPosition.Custom.empty()),
                '<div class="cp-table_filterable-header">\n                <span class="s-sorting cp-table_title">{0}</span>\n                <div class="md-dd filter-outer">\n                   <a href="javascript:;" class="th-filter s-md-dd-tgl s-drag-false">\n\t\t                <svg class="icon icon-ic-filter"><use xlink:href="#icon-ic-filter"></use></svg>\n\t                </a>\n                   <div class="md-dd-c md-dd-c-s-l s-ignore filter-inner">\n                      <div class="mod-user-section user-details align-center">\n                         <div class="dropdown-header s-search-input-container">\n                            <div class="cp-search-bar">\n                               <input type="text" class="stretch-input" id="'.concat(a.container.replace("#", ""), "-search-").concat(r, '" name="').concat(a.container.replace("#", ""), "-search-").concat(r, '">\n                               <a href="javascript:;" class="icon-bg-ic-close-a hidden s-clear-search-').concat(r, '">\n                                  <svg class="icon-bg icon-ic-close"><use xlink:href="#icon-ic-close"></use></svg>\n                               </a>\n                            </div>\n                         </div>\n         \n                         <div class="list filter-list">\n                            ').concat((e = r,
                o = s,
                t ? '<div class="mb24 display-flex">\n            <div class="s-selected hide">\n                <span class="s-select-count">\n                </span>\n                '.concat(o.selected, '\n               </div>\n            <div class="ml-auto display-flex ">\n                <a href="javascript:;" class="s-select-all s-').concat(e, ' mr12 link-no-border link-hover-pill">').concat(o.btnSelectAll, '</a>\n                <a href="javascript:;" class="s-select-all s-clear-all s-').concat(e, ' link-no-border link-hover-pill">').concat(o.btnDeselectAll, "</a>\n            </div>\n        </div>") : ""), '\n                            <ul class="mod-autocomplete-filter s-isolate-scroll s-multi-select-container ').concat(t ? "s-multi" : "s-single", " s-").concat(r, '" data-columnindex="').concat(r, '" id="">\n             \n                            </ul>\n                         </div>\n                      </div>\n                      <div class="filter-footer">\n                         <div class="display-flex">\n                            <a href="#" class="btn btn-secondary s-cancel">').concat(s.cancel, '</a>\n                            <a href="#" class="btn ml-auto s-apply">\n                                ').concat(s.apply, '\n                                <span class="spinner small-spinner no-background light-spinner active s-spinner spinner_inline hide">\n                                    <span class="spin"></span>\n                                </span>\n                            </a>\n                         </div>\n                      </div>\n                   </div>\n                </div>\n            </div>'));
                $(e.format(n)).appendTo(i),
                $(i).off(),
                $(i).removeClass("sorting"),
                $("".concat(a.container, " thead tr:eq(0) th:eq(").concat(r, ") .s-sorting")).on("click", function() {
                    d != r && (u = !0,
                    d = r);
                    var e = "asc";
                    u = 0 == u ? (e = "desc",
                    !0) : !(e = "asc"),
                    c.order([r, e]).draw()
                }),
                $("".concat(a.container, " .s-multi-select-container.s-").concat(r)).on("click", ":checkbox,:radio", function() {
                    var e = $(this).parents(".md-dd.active");
                    eviivo.component.listing.selectAll.updateSelectedCount(e)
                }),
                t && $("".concat(a.container)).off("click", ".s-select-all.s-".concat(r)).on("click", ".s-select-all.s-".concat(r), function() {
                    var e = $(this)
                      , t = l
                      , n = e.parents(".md-dd")
                      , i = n.find(":checkbox")
                      , o = t.index()
                      , a = e.parents("table").attr("id");
                    eviivo.component.listing.filter.setColumnFilterIndex(o),
                    e.hasClass("s-clear-all") ? (i.prop("checked", !1),
                    eviivo.component.listing.filter.setColumnSearchStrings(a, eviivo.component.listing.filter.getColumnFilterIndex(), []),
                    $.each(i, function() {
                        var e = $(this);
                        e.parents("li").hasClass("hide") || e.val()
                    })) : $.each(i, function() {
                        var e;
                        $(this).parents("li").hasClass("hide") || (e = $(this).val(),
                        eviivo.component.listing.filter.pushColumnSearchStrings(a, o, e),
                        $(this).prop("checked", !0))
                    }),
                    eviivo.component.listing.selectAll.updateSelectedCount(n)
                }),
                $("".concat(a.container)).on("click", ".s-clear-search-".concat(r), function() {
                    $("#".concat(a.container.replace("#", ""), "-search-").concat(r)).val("").trigger("input")
                }),
                $("".concat(a.container)).on("input", "#".concat(a.container.replace("#", ""), "-search-").concat(r), function() {
                    var e = $(this)
                      , t = e.val().trim().toLowerCase()
                      , e = e.parents(".md-dd.active")
                      , n = $("".concat(a.container)).find(".s-clear-search-".concat(r));
                    0 < t.length ? (e.unhighlight(),
                    n.removeClass("hidden"),
                    e.find("li").each(function() {
                        var e = $(this);
                        e.text().toLowerCase().includes(t) ? (e.highlight(t),
                        e.removeClass("hide")) : e.addClass("hide")
                    })) : (e.unhighlight(),
                    n.addClass("hidden"),
                    e.find("li").removeClass("hide"))
                }),
                $("".concat(a.container, " thead tr:eq(0) th:eq(").concat(r, ") .s-cancel")).on("click", function() {
                    $(this).parents(".md-dd.active").removeClass("active"),
                    $("#".concat(a.container.replace("#", ""), "-search-").concat(r)).val("").trigger("input"),
                    eviivo.component.listing.filter.updateColumnFilter(c, [r])
                }),
                $("".concat(a.container, " thead tr:eq(0) th:eq(").concat(r, ") .s-apply")).on("click", function() {
                    var e = $(this)
                      , t = e.find(".s-spinner");
                    t.removeClass("hide"),
                    eviivo.component.listing.filter.setupFilterValues(e, l),
                    eviivo.component.listing.filter.filterColumns(l),
                    e.parents(".md-dd.active").removeClass("active"),
                    eviivo.component.listing.filter.updateEveryColumnFilter(c),
                    eviivo.component.listing.selectAll.deselectAllRowsAcrossPaginatedTable(a.container),
                    t.addClass("hide"),
                    "function" == typeof a.filterOnApplyCallback && a.filterOnApplyCallback(e, r)
                })
            },
            labelForRowSelection: function(e, t, n) {
                return e
            },
            labelForRowSelectionSave: function(e) {
                return document.getElementsByClassName("s-row-selector-label" + e)[0].innerHTML
            }
        })
    },
    9713: function() {
        function t() {
            i($(this).data("id"), $(this).closest("table").attr("id"), this)
        }
        function n() {
            var t = $(this).data("id")
              , n = $(this).closest("table").attr("id");
            eviivo.webcore.notifier.show({
                type: eviivo.webcore.notifier.types.warn,
                style: eviivo.webcore.notifier.styles.withTwoActions,
                message: s.confirmDeleteMsg,
                autoHide: !1,
                buttonTwo: s.yes,
                buttonOne: s.no
            }),
            $(a.deleteConfirmationYes).addClass("btn btn-right"),
            $(a.deleteConfirmationNo).addClass("btn btn-secondary"),
            $(".mod-close-notice").off(),
            $(".mod-close-notice").off("click", function(e) {
                l()
            }).on("click", function(e) {
                l()
            }),
            $(".notifyjs-withTwoActions-base").off("click", a.deleteConfirmationYes, function(e) {
                i(t, n, this)
            }).on("click", a.deleteConfirmationYes, function(e) {
                i(t, n, this)
            }),
            $(".notifyjs-withTwoActions-base").off("click", a.deleteConfirmationNo, function(e) {
                l()
            }).on("click", a.deleteConfirmationNo, function(e) {
                l()
            }),
            $(".notifyjs-hidable").removeClass("notifyjs-hidable")
        }
        function i(e, t, n) {
            eviivo.component.debug.printDebug("listing table - deleteItem data: ", e, t, n);
            var i = $("#" + t).DataTable()
              , o = eviivo.component.listing.getNamedDataTableInstance(t).options
              , a = $("#" + t).find('tr[data-id="' + e + '"]')
              , n = i.row(a).data();
            n ? null == o.deleteAjaxDataCallback || (eviivo.component.debug.printDebug("listing table - should perform custom deleteAjaxDataCallback: ", o.deleteAjaxDataCallback),
            n = o.deleteAjaxDataCallback(n, t),
            eviivo.component.debug.printDebug("listing table - custom deleteAjaxDataCallback: ", n),
            n) ? (eviivo.component.debug.printDebug("listing table - perform delete ajax request"),
            eviivo.webcore.ajaxHelper.executeAjax({
                actionId: o.baseAjaxUrl + "delete/" + e,
                url: o.baseAjaxUrl + "delete",
                method: eviivo.webcore.ajaxHelper.methods.POST,
                contentType: eviivo.webcore.ajaxHelper.contentTypes.JSON,
                data: {
                    id: e
                },
                callback: function(e) {
                    eviivo.component.debug.printDebug("listing table - delete ajax callback data: ", e),
                    e ? (eviivo.component.debug.printDebug("listing table - delete ajax callback data true: notifier should be displayed success"),
                    c(eviivo.webcore.notifier.types.success, s.deleteConfirmationSuccess),
                    null != (e = i.row(a)) && e.remove().draw(!1),
                    null != o.deleteCallback && o.deleteCallback()) : (eviivo.component.debug.printDebug("listing table - delete ajax callback data false: notifier should be displayed error"),
                    c(eviivo.webcore.notifier.types.error, s.deleteConfirmationError),
                    null != o.deleteFailureCallback && o.deleteFailureCallback())
                },
                failCallback: function() {
                    c(eviivo.webcore.notifier.types.error, s.deleteConfirmationError),
                    null != o.deleteFailureCallback && o.deleteFailureCallback()
                }
            })) : (eviivo.component.debug.printDebug("listing table - custom deleteAjaxDataCallback data = false: close notifier and return with no further action"),
            l()) : (console.warning("error in getting data from table"),
            l())
        }
        function l() {
            $(".notifyjs-wrapper").remove()
        }
        function c(e, t) {
            eviivo.component.debug.printDebug("listing table - delete ajax callback notifier:", e, t),
            eviivo.webcore.notifier.show({
                type: e,
                message: t
            })
        }
        var o, a, s, r;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.delete = window.eviivo.component.listing.delete || {},
        window.eviivo.component.listing.delete = (a = {
            deleteBtn: ".s-listing-table-delete",
            deleteConfirmationYes: ".btn-two",
            deleteConfirmationNo: ".btn-one"
        },
        s = {
            confirmDeleteMsg: "Are you sure you want to delete?",
            buttonTwo: "No",
            buttonOne: "Yes"
        },
        r = {},
        {
            init: function(e) {
                o = $.extend(r, e),
                s = $.extend(s, e.resources),
                o.enableDeleteConfirmPopup ? $(o.tableId).off("click", a.deleteBtn, n).on("click", a.deleteBtn, n) : $(o.tableId).off("click", a.deleteBtn, t).on("click", a.deleteBtn, t)
            },
            confirmBulkDelete: function() {},
            confirmDelete: n,
            deleteItem: i
        })
    },
    9186: function() {
        var t;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.edit = window.eviivo.component.listing.edit || {},
        window.eviivo.component.listing.edit = (t = ".s-listing-table-edit",
        options = {},
        defaultOptions = {},
        options.editButtonFunc,
        {
            init: function(e) {
                "function" == typeof (null == (e = options = $.extend(defaultOptions, e)) ? void 0 : e.editButtonFunc) && $(options.tableId).on("click", t, options.editButtonFunc)
            }
        })
    },
    2533: function() {
        function s(e) {
            return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            )(e)
        }
        function o(e) {
            return function(e) {
                if (Array.isArray(e))
                    return a(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || function(e, t) {
                var n;
                if (e)
                    return "string" == typeof e ? a(e, t) : "Map" === (n = "Object" === (n = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : n) || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? a(e, t) : void 0
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function a(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function l(e) {
            S = e
        }
        function v(e, t) {
            return A["".concat(e, "-col-").concat(t)]
        }
        function r(e, t, n) {
            A["".concat(e, "-col-").concat(t)] = n
        }
        function c(e, t, n) {
            A["".concat(e, "-col-").concat(t)].push(n)
        }
        function d(e) {
            var t, n = $("#".concat(e)).find(".s-multi-select-container :checkbox,:radio").filter(":checked"), i = $("#".concat(e, "_wrapper")).find(".s-table-reset");
            0 < n.length ? (0 === i.length && (n = '<a href="javascript:;" class="s-table-reset cp-table_reset-filters" data-table="'.concat(e, '"><svg class="icon-ic-filter"><use xlink:href="#icon-ic-filter"></use></svg></a>'),
            0 < (t = $("#".concat(e, "_wrapper .cp-table_toolbar"))).length ? t.find(".cp-table_toolbar-actions").prepend(n) : $('<div class="cp-table_toolbar"><div class="cp-table_toolbar-actions">'.concat(n, "</div></div>")).insertBefore("#".concat(e))),
            $("#".concat(e, "_wrapper .cp-table_toolbar")).on("click", ".s-table-reset", u)) : 0 < i.length && i.remove()
        }
        function u() {
            var t = $(this).attr("data-table")
              , e = $("#".concat(t))
              , n = (e.find(".s-clear-all").each(function() {
                $(this).trigger("click")
            }),
            e.find(".s-multi-select-container.s-single"));
            0 < n.length && (e.find(".s-multi-select-container.s-single :radio").prop("checked", !1),
            $.each(n, function() {
                var e = $(this)
                  , e = (e.parents(".filter-outer").find(".th-filter").removeClass("active"),
                e.attr("data-columnindex"));
                r(t, e, [])
            })),
            e.find(".s-apply").each(function() {
                $(this).trigger("click")
            }),
            d(t)
        }
        function p(e) {
            var t = e.table().node().id
              , n = e.index()
              , i = "boolean" == typeof (i = e.data()[0]) || "number" == typeof i ? i.toString() : o(e.data()[0])
              , t = (r(t, n, o(new Set(v(t, n)))),
            v(t, n).join("|"));
            ("" == (t = eviivo.webcore.html.decode(t).replaceAll("(", "\\(").replaceAll(")", "\\)").replaceAll("-", "\\-")) || "object" === s(i) && null != i ? e.search("".concat(t), !0, !1) : e.search("^".concat(t, "$"), !0, !1)).draw()
        }
        function f(e) {
            var e = e.options
              , t = e.columnsWithFilters.reduce(function(e, t, n) {
                return e.push({
                    multiFilter: !1,
                    index: t
                }),
                e
            }, []);
            return e.columnsWithMultiFilters.reduce(function(e, t, n) {
                return e.push({
                    multiFilter: !0,
                    index: t
                }),
                e
            }, t)
        }
        function g(e, t) {
            var n, i, o = e.table().node().id, a = eviivo.component.listing.getNamedDataTableInstance(o), l = a.options, c = l.enableBulkSelect, s = t - c, a = f(a).find(function(e) {
                return e.index == s
            });
            a && (n = eviivo.component.listing.findTrueColumnIndex(e, s),
            i = e.column(t),
            "function" == typeof l.filterOnBeforeCallback ? r(o, t, "" != (l = l.filterOnBeforeCallback(o, t)) ? l : []) : r(o, t, []),
            eviivo.component.listing.customRenders.renderSelectDropDown(i, n, a.multiFilter),
            m(i, n + c),
            d(o),
            w(e, t),
            b(o, t))
        }
        function m(e, a) {
            var t, l, n, c, i, o, s, r, d, u = [];
            e.visible() && (t = e.table().node().id,
            l = eviivo.component.listing.getNamedDataTableInstance(t).options,
            n = $(l.container + " thead tr:eq(0) th").eq(a),
            (c = n.find("ul.s-multi-select-container")).length) && (c.empty(),
            i = C(e),
            null != (i = eviivo.webcore.sorting.naturalSortDescendingWithCulture(i, l.userLanguageCulture))) && "" != i && (1 < i.filter(function(e) {
                return "string" == typeof e || "boolean" == typeof e
            }).length ? c.siblings("footer").show() : c.siblings("footer").hide(),
            0 != (o = i.length)) && (o <= eviivo.component.listing.getNoOfItemsFilterShouldHaveToIncludeSearchInput() ? n.find(".s-search-input-container").addClass("hide") : n.find(".s-search-input-container").removeClass("hide"),
            $(l.container + " thead tr:eq(0) th").eq(a).find(".s-selected").find(".s-all-count").html(o),
            s = c.hasClass("s-multi"),
            r = v(t, e.index()),
            d = !1,
            $.each(i, function(e, t) {
                var n = label = formatedValue = t
                  , i = ("boolean" == typeof t ? (label = t ? l.resources.yes : l.resources.no,
                n = t.toString()) : "number" == typeof t ? n = t.toString() : null == t || "" == t ? (label = formatedValue = "".concat(l.resources.emptyOption),
                n = "") : formatedValue = n.replace(/\s+/g, "-"),
                n.includes("&#39;") && r.includes(n.replace(/&#39;/g, "'").replaceAll("&quot;", '"')) || r.includes(n))
                  , o = i ? "checked" : "";
                d += i,
                u.includes(n) || (c.append('\n                    <li class="mb4" data-order="'.concat(e, '">\n                        <div class="cp-custom-input">\n                            <input type="').concat(s ? "checkbox" : "radio", '" id="').concat(formatedValue, "_").concat(e, "_").concat(a, '" data-value="').concat(t, '" name="filter-').concat(a, '" value="').concat(n, '" ').concat(o, ' />\n                            <label for="').concat(formatedValue, "_").concat(e, "_").concat(a, '">\n                                <span class="').concat(s ? "checkbox-input" : "radio-input", '"></span>\n                                <span class="label wrap_text s-label">').concat(label, "</span>\n                            </label>\n                        </div>\n                    </li>\n                    ")),
                u.push(n))
            }),
            0 < r.length) && 0 < d && (p(e),
            c.parents(".md-dd").find(".th-filter").addClass("active"),
            eviivo.component.listing.selectAll.updateSelectedCount(c.parents(".md-dd")))
        }
        function b(e, t) {
            var n = $("#".concat(e)).find(".s-multi-select-container.s-".concat(t))
              , i = $("#".concat(e)).find(".s-multi-select-container.s-".concat(t, " :checkbox, .s-multi-select-container.s-").concat(t, " :radio")).filter(":checked").parents("li");
            0 < i.length ? (0 < (e = $("#".concat(e)).find(".s-multi-select-container.s-".concat(t, " :checkbox, .s-multi-select-container.s-").concat(t, " :radio")).filter(":not(:checked)").parents("li")).length && e.sort(function(e, t) {
                return +e.dataset.order - +t.dataset.order
            }).prependTo(n),
            i.sort(function(e, t) {
                return +e.dataset.order - +t.dataset.order
            }).prependTo(n)) : n.find("li").sort(function(e, t) {
                return +e.dataset.order - +t.dataset.order
            }).appendTo(n)
        }
        function h(n, e) {
            null != e && (0 === e ? [0] : [].concat(e || [])).forEach(function(e) {
                var t = n.column(e)
                  , e = eviivo.component.listing.findTrueColumnIndex(n, e)
                  , t = (m(t, e),
                n.table().node().id)
                  , t = (b(t, e),
                $("#".concat(t, " .s-multi-select-container.s-").concat(e)).parents(".md-dd"));
                eviivo.component.listing.selectAll.updateSelectedCount(t)
            })
        }
        function w(t, e) {
            null != e && [].concat(e || []).forEach(function(e) {
                var n = C(t.column(e, {
                    search: "applied"
                }))
                  , e = $(".s-multi-select-container.s-".concat(e));
                0 < e.length && (e = e.find(":checkbox,:radio"),
                $.each(e, function() {
                    var e = $(this)
                      , t = $('label[for="'.concat(y(e.attr("id")), '"]'));
                    0 <= $.inArray(y(eviivo.webcore.html.encode(e.attr("data-value"))), n) ? t.removeClass("no-visible-data") : t.addClass("no-visible-data")
                }))
            })
        }
        function y(e) {
            return e.replace(/'/g, "&#39;").replaceAll('"', "&quot;")
        }
        function C(e) {
            e = e.data().unique();
            return $(Array.prototype.concat.apply([], e))
        }
        function t(n) {
            var i = eviivo.component.listing.getNamedDataTableInstance(n.table().node().id)
              , o = i.options;
            n.columns().every(function(t) {
                var e;
                0 == t && o.enableBulkSelect || null != (e = f(i).filter(function(e) {
                    return e.index == t - o.enableBulkSelect
                })) && e.length && this.visible() && (h(n, this.index()),
                w(n, this.index()))
            })
        }
        var S, A;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.filter = window.eviivo.component.listing.filter || {},
        window.eviivo.component.listing.filter = (A = {},
        {
            setupFilterValues: function(e, t) {
                var n = (e = e.parents(".md-dd.active")).find(":checkbox,:radio")
                  , i = t.index()
                  , o = e.parents("table").attr("id")
                  , t = (l(i),
                n.filter(":checked").length);
                d(o),
                0 == t ? r(o, i, []) : $.each(n, function() {
                    var e = $(this)
                      , t = e.val();
                    e.is(":checked") ? c(o, i, t) : r(o, i, $.grep(v(o, i), function(e) {
                        return e !== t
                    }))
                })
            },
            dynamicallyAppendFilterSelectDropdown: g,
            bindfilterSelectOptions: m,
            updateColumnFilter: h,
            updateEveryColumnFilter: t,
            updateAllTableFilters: function(e) {
                t(eviivo.component.listing.getNamedDataTableInstance(e.replace("#", "")).dataTable)
            },
            filterColumns: p,
            dynamicallyHideFilterInputs: function(e, t, n) {
                var o = t.columns().visible().toArray();
                for (i = 0; i < n.length; i++)
                    o[i] && (n[i] ? $(e + " thead tr:eq(0) th").eq(eviivo.component.listing.findTrueColumnIndex(t, i)).show() : $(e + " thead tr:eq(0) th").eq(eviivo.component.listing.findTrueColumnIndex(t, i)).hide())
            },
            getColumnSearchStrings: v,
            setColumnSearchStrings: r,
            pushColumnSearchStrings: c,
            setColumnFilterIndex: l,
            getColumnFilterIndex: function() {
                return S
            },
            filteringExtnesion: function() {
                $.fn.dataTable.ext.search.push(function(e, t, n, i, o) {
                    var a, l, c;
                    return null == e || null == S || void 0 === (l = v(e.nTable.id, S)) || 0 == (a = l.map(function(e) {
                        return e
                    })).length || null == (l = e.aoColumns[S]) || ("object" === s(e = null == (e = i[l.key]) ? "" : e) && null != e && 0 <= e.length ? (c = !1,
                    $.each(e, function(e, t) {
                        a.includes(eviivo.webcore.html.decode(t)) && (c += !0)
                    }),
                    0 < c) : ("boolean" != typeof e && "number" != typeof e || (e = e.toString()),
                    a.includes(eviivo.webcore.html.decode(e))))
                })
            },
            checkIfFiltersNeedToBeCreated: f,
            create: function(t) {
                var n = t.options
                  , e = f(t);
                0 < e.length && e.forEach(function(e) {
                    t.dataTable.column(e.index + n.enableBulkSelect).visible() && g(t.dataTable, e.index + n.enableBulkSelect)
                })
            }
        })
    },
    7914: function() {
        function t(e) {
            for (var t = 0; t < listingInits.length; t++)
                if (listingInits[t][0] == e) {
                    listingInits[t][1]();
                    break
                }
        }
        function a(i, c) {
            i.off("select deselect").on("select deselect", function(e, t, n, i) {
                var o;
                null != t && (o = "select" == e.type,
                null != document.querySelector("#".concat(c.tableName, " .target-select-all")) && (document.querySelector("#".concat(c.tableName, " .target-select-all")).checked = t.rows("tr .s-select-row, tr:not(.s-no-select-row)", {
                    selected: !0,
                    search: "applied",
                    page: "current"
                }).count() === t.rows("tr .s-select-row, tr:not(.s-no-select-row)", {
                    search: "applied",
                    page: "current"
                }).count()),
                i.forEach(function(e) {
                    var e = $(t.column(0).nodes()).find("input#".concat(c.tableName).concat(e, ".s-select-row"))[0];
                    null != e && (e.checked = o),
                    c.enableSingleSelect && (e = $(e).parents("tr"),
                    o ? ($("#".concat(c.tableName, " tr.selected")).removeClass("selected"),
                    e.addClass("selected")) : e.removeClass("selected"))
                }),
                eviivo.component.listing.selectAll.updateTableSelectionData(c.tableName),
                null != c.rowSelectionCallback) && c.rowSelectionCallback(t.rows({
                    selected: !0
                }).toArray()[0])
            }),
            c.enableResponsive && (i.off("responsive-resize").on("responsive-resize", function(e, t, n) {
                eviivo.component.listing.filter.dynamicallyHideFilterInputs(c.container, i, n)
            }),
            i.off("responsive-display").on("responsive-display", function(e, t, n, i, o) {
                null != c.responsiveRowExpandedCallback && c.responsiveRowExpandedCallback()
            })),
            i.off("click", ".s-row-selector-label").on("click", ".s-row-selector-label", function() {
                $('.s-select-row[data-id="' + $(this).attr("for") + '"]').prop("checked", "checked"),
                $('.s-select-row[data-id="' + $(this).attr("for") + '"]').click()
            }),
            null != c.rowSelectionCallback && i.off("click", ".s-row-selector-label", c.rowSelectionCallback).on("click", ".s-row-selector-label", c.rowSelectionCallback),
            c.enableDeleteButton && eviivo.component.listing.delete.init({
                tableId: c.container,
                baseAjaxUrl: c.baseAjaxUrl,
                resources: c.resources,
                enableDeleteConfirmPopup: c.enableDeleteConfirmPopup,
                deleteCallback: c.deleteCallback,
                deleteFailureCallback: c.deleteFailureCallback
            }),
            c.enableEditButton && eviivo.component.listing.edit.init({
                tableId: c.container,
                editButtonFunc: c.editButtonFunc
            }),
            c.lastColComplex && eviivo.component.listing.rowActions.init("#".concat(c.tableName)),
            c.enableViewButton && eviivo.component.listing.view.init({
                tableId: c.container,
                viewButtonFunc: c.viewButtonFunc
            }),
            null != c.enableRowReOrder && (i.off("pre-row-reorder").on("pre-row-reorder", function(e, t, n) {
                eviivo.component.debug.printDebug("pre-row-reorder", e, t, n),
                null != c.rowReOrderCallbacksPre && c.rowReOrderCallbacksPre(e, t, n)
            }),
            i.off("row-reordered").on("row-reordered", function(e, t, n) {
                eviivo.component.debug.printDebug("row-reordered", e, t, n),
                null != c.rowReOrderCallbacksPost && c.rowReOrderCallbacksPost(e, t, n)
            })),
            i.off("draw").on("draw", function(e, t) {
                var n, o, a, l;
                c.enableSearching && "function" == typeof (n = $(i.body())).unhighlight && (n.unhighlight(),
                n.highlight(i.search())),
                null != c.groupColumn && (o = i.columns().visible().length - 1,
                a = i.rows({
                    page: "current"
                }).nodes(),
                l = null,
                i.column(c.groupColumn, {
                    page: "current"
                }).data().each(function(e, t) {
                    var n = e
                      , i = (c.groupColumnCheckbox && (n = '<div class="cp-custom-input">\n                                                <input type="checkbox" class="s-group-checkbox" data-group-name="'.concat(e, '" id="group-').concat(e, '" data-id="').concat(e, '">\n                                                <label for="group-').concat(e, '">\n                                                    <span class="checkbox-input"></span>\n                                                    <span class="label">').concat(e, "</span>\n                                                </label>\n                                            </div>")),
                    "");
                    c.groupColumnCollapse && (i = ""),
                    l !== e && ($(a).eq(t).before('<tr class="group"><td colspan="' + o + '"><strong>' + n + "</strong> " + i + "</td></tr>"),
                    l = e)
                }))
            })
        }
        function l(e) {
            for (var t = 0; t < m.length; t++)
                if (m[t][0] == e)
                    return {
                        name: m[t][0],
                        options: m[t][1],
                        dataTable: m[t][2]
                    }
        }
        function c(e) {
            var t, n = l(e);
            eviivo.component.listing.filter.create(n),
            null != n.options.moveSearchInputIntoThisContainer && 0 < (e = $(n.options.moveSearchInputIntoThisContainer)).length && "" == e.html() && n.options.enableSearching && (0 < (t = $("#".concat(n.name, "_filter")).find('input[type="search"]')).length && t.appendTo(e),
            t.on("keyup input paste", function() {
                $("#".concat(n.name, "_wrapper")).find(".s-table-reset").trigger("click")
            })),
            "function" == typeof n.options.initComplete && n.options.initComplete(n.dataTable)
        }
        function n(e, t) {
            eviivo.component.debug.printDebug("listing table get tables row index and data for", e, t);
            var n = eviivo.component.listing.getNamedDataTableInstance(e.replace("#", "")).dataTable
              , e = i(e, t)
              , t = n.row(e).data()
              , n = {
                index: e.index(),
                data: t
            };
            return eviivo.component.debug.printDebug("listing table get tables row data", n),
            n
        }
        function i(e, t) {
            return $("".concat(e, " tr[data-id='").concat(t, "']"))
        }
        var s, r, u, v, p, f, g, m;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing = (r = {
            paging: !1,
            ordering: !0,
            info: !0,
            searching: !0,
            filter: !1,
            autoWidth: !1,
            responsive: !0,
            loading: !1,
            processing: !1,
            serverSide: !1,
            select: {
                style: "multi+shift",
                selector: "tr:not(.s-no-select-row) td:first-child .s-select-row"
            },
            dom: "",
            initComplete: function(e, t) {},
            order: [],
            aLengthMenu: [[10, 25, 50, 100, 250, 500], [10, 25, 50, 100, 250, 500]],
            orderCellsTop: !0,
            conditionalPaging: !0
        },
        u = 4,
        v = 10,
        p = "eviivo.component.listing",
        f = {
            confirmDelete: ".s-confirm-delete",
            selectAll: ".target-select-all",
            rowSelector: ".s-select-row",
            rowMenuSelector: ".s-trigger-inline-menu"
        },
        g = {},
        m = [],
        {
            init: function(e) {
                if ("function" != typeof window.jQuery)
                    throw p + ": module depends on jQuery";
                if ("function" != typeof jQuery.fn.DataTable)
                    throw p + ": module depends on jQuery DataTables";
                (e = (s = window.jQuery).extend({}, e)).tableName = e.container.replace("#", ""),
                g.click = "click" + p;
                var o, d = e;
                if (null == d || d.dataTableColumns)
                    throw p + ": no dataTableColumns specified";
                var t = s.extend({}, r)
                  , n = d.columns;
                d.displayDefaultSpinnerOnInitialLoad && null != eviivo.component.loadingSpinners && "function" == typeof eviivo.component.loadingSpinners.fullScreen.startSpinner ? d.endSpinnerFunc = eviivo.component.loadingSpinners.fullScreen.startSpinner({
                    container: "#".concat(d.tableName),
                    withinContainer: !0,
                    inject: !0,
                    noOverlay: !0
                }) : d.endSpinnerFunc = null;
                for (var i = 0; i < n.length; i++)
                    n[i].render = eviivo.util.safeFunction(n[i].render);
                (d.enableBulkDelete || d.enableBulkSelect) && (o = d.enableSingleSelect ? "radio" : "checkbox",
                n.unshift({
                    data: null,
                    className: "cp-table_text-center cp-table_checkbox-col cp-table_sticky-column",
                    sortable: !1,
                    bSortable: !1,
                    orderable: !1,
                    filterable: !1,
                    visible: !0,
                    targets: 0,
                    render: function(e, t, n, i) {
                        return '<div class="cp-custom-input">\n                                <input type="'.concat(o, '" class="s-select-row" id="').concat(d.tableName + i.row, '" name="').concat(d.tableName, '" data-id="').concat(n[d.identityColumnKey], '"/>\n                                <label for="').concat(d.tableName + i.row, '">\n                                    <span class="').concat(o, '-input"></span>\n                                </label>\n                            </div>')
                    }
                })),
                (d.enableEditButton || d.enableViewButton || d.enableDeleteButton) && n.push({
                    data: null,
                    className: d.lastColClasses,
                    title: d.lastColHeader,
                    sortable: !1,
                    bSortable: !1,
                    orderable: !1,
                    filterable: !1,
                    visible: !0,
                    render: function(e, t, n, i) {
                        var o, a, l = "", n = n[d.identityColumnKey], c = 'title="{0}" data-tooltip="title" data-tooltip-title="{0}" data-tooltip-pos="top"', s = d.lastColComplex ? "cp-table_action-interchange" : "", r = "cp-table_action cp-table_action-item ";
                        return d.enableEditButton && (a = "" != d.editButtonTooltip ? c.format(d.editButtonTooltip) : "",
                        o = "function" == typeof (null == d ? void 0 : d.editButtonFunc),
                        l += eviivo.component.listing.rowActions.createEditButton(d.baseBrowserUrl, n, r + s, a, o)),
                        d.enableViewButton && (a = "" != d.viewButtonTooltip ? c.format(d.viewButtonTooltip) : "",
                        o = "function" == typeof (null == d ? void 0 : d.viewButtonFunc),
                        l += eviivo.component.listing.rowActions.createViewButton(d.baseBrowserUrl, n, r + s, a, o)),
                        d.enableDeleteButton && (a = "" != d.deleteButtonTooltip ? c.format(d.deleteButtonTooltip) : "",
                        l += eviivo.component.listing.rowActions.createDeleteButton(n, r + s, a)),
                        l
                    }
                }),
                d.enableResponsive ? (n.push({
                    data: null,
                    className: "control cp-table_responsive-control",
                    sortable: !1,
                    bSortable: !1,
                    orderable: !1,
                    filterable: !1,
                    targets: -1,
                    render: function(e, t, n, i) {
                        return ""
                    }
                }),
                t.responsive = {
                    details: {
                        type: "column",
                        target: ".cp-table_responsive-control"
                    }
                }) : t.responsive = !1,
                d.paging && (t.paging = !0,
                t.pageLength = d.pageLength),
                d.enableSearching && (t.searchHighlight = !0),
                null != d.dom && (t.dom = d.dom),
                null != d.baseAjaxUrl && null == d.data && (t.ajax = {
                    url: d.baseAjaxUrl + "list",
                    type: "" != d.ajaxType ? d.ajaxType : "GET",
                    data: function() {
                        var e = null;
                        return e = null != d.ajaxDataCallback ? d.ajaxDataCallback() : e
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    dataSrc: function(e) {
                        return e
                    },
                    failure: function(e) {
                        console.log(e),
                        null != d.ajaxDataFailureCallback && (data = d.ajaxDataFailureCallback(e))
                    },
                    error: function(e) {
                        console.log(e),
                        null != d.ajaxDataFailureCallback && (data = d.ajaxDataFailureCallback(e))
                    }
                }),
                null == d.data || $.isEmptyObject(d.data) || (t.data = d.data),
                t.createdRow = function() {
                    var e = Array.prototype.slice.call(arguments)
                      , t = (e.push(d),
                    null != e[4].createdRowCallback && e[4].createdRowCallback(e[0], e[1], e[2], e[3], e[4]),
                    $(e[0]).addClass("s-row-" + e[1][e[4].identityColumnKey]),
                    e[0].dataset.id = e[1][e[4].identityColumnKey],
                    e[0])
                      , n = e[1]
                      , i = e[4];
                    if (null != i.additionalRowDataAttributes && "" !== i.additionalRowDataAttributes && Array.isArray(i.additionalRowDataAttributes))
                        for (var o = 0; o < i.additionalRowDataAttributes.length; o++)
                            t.dataset[i.additionalRowDataAttributes[o].Item1] = n[i.additionalRowDataAttributes[o].Item2];
                    var a = $(e[0]).find(".s-row-selector-label");
                    0 < a.length && (a[0].parentNode.dataset.filter = e[1].Name,
                    a[0].parentNode.dataset.search = e[1].Name),
                    e[4].enableBulkSelect && ($(e[0]).find("td:eq(1)").addClass("s-row-selector-label s-row-selector-label" + e[1][e[4].identityColumnKey]),
                    $(e[0]).find("td:eq(1)").attr("for", e[1][e[4].identityColumnKey]))
                }
                ,
                null != d.footerCallback && (t.footerCallback = d.footerCallback),
                null != d.language && (t.language = d.language),
                null != d.enableRowReOrder && (t.rowReorder = d.enableRowReOrder()),
                null != d.fixedOrder && (t.orderFixed = d.fixedOrder),
                null != d.orderSetCallback && (t.stateSave = !0,
                t.stateSaveCallback = function(e, t) {
                    d.orderSetCallback({}, t.order[0])
                }
                ),
                null != d.orderGetCallback && ("function" == typeof d.orderGetCallback ? t.order = d.orderGetCallback() : null != d.orderGetCallback[0] && null != n[d.orderGetCallback[0]] && n[d.orderGetCallback[0]].sortable && (t.order = d.orderGetCallback)),
                0 != d.noOfItemsFilterShouldHaveToIncludeSearchInput && null != d.noOfItemsFilterShouldHaveToIncludeSearchInput && (u = d.noOfItemsFilterShouldHaveToIncludeSearchInput),
                d.noOfRecordsTableShouldHaveToIncludeSelectionInfo = v,
                t.info = d.tableInfo,
                t.initComplete = function(e, t) {
                    var n = this[0].id;
                    setTimeout(c, 500, n),
                    "function" == typeof d.endSpinnerFunc && d.endSpinnerFunc()
                }
                ,
                t.columns = n,
                t = s(d.container).DataTable(t),
                eviivo.component.debug.printDebug("listing table: ", d.tableName, d, t),
                m.push([d.tableName, d, t]),
                a(t, d),
                t.select().init(),
                d.enableResponsive && eviivo.component.listing.filter.dynamicallyHideFilterInputs(d.container, t, t.columns().responsiveHidden().toArray()),
                eviivo.component.listing.filter.filteringExtnesion(),
                eviivo.component.handlers.assign(f.deleteItem, eviivo.component.listing.delete.confirmBulkDelete, "click"),
                eviivo.component.handlers.assign(f.selectAll, eviivo.component.listing.selectAll.selectAllRows, "click"),
                $(e.container).show()
            },
            modes: {
                NO_FILTER: 1,
                WITH_FILTER: 2
            },
            refreshRow: function(e, t) {
                var n = e.rows({
                    selected: !0
                }).toArray()[0]
                  , i = !1;
                0 < n.length && (i = n.includes(t)),
                e.row(t).invalidate().draw(!1),
                i && e.row(t).select()
            },
            getColumnHeaderInfo: function(e, t) {
                return e = eviivo.component.listing.getNamedDataTableInstance(e).dataTable,
                $(e.column(t).header())
            },
            updateDataTableInformation: function(n, e) {
                var i = l(n.table().node().id)
                  , o = i.options;
                n.clear(),
                n.rows.add(e),
                n.columns.adjust().draw(),
                eviivo.component.listing.filter.setColumnFilterIndex(null),
                n.search("").draw(),
                n.columns().every(function(t) {
                    var e;
                    0 == t && o.enableBulkSelect || (this.search("").draw(),
                    null != (e = eviivo.component.listing.filter.checkIfFiltersNeedToBeCreated(i).filter(function(e) {
                        return e.index == t - o.enableBulkSelect
                    })) && e.length && this.visible() && eviivo.component.listing.filter.dynamicallyAppendFilterSelectDropdown(n, this.index()))
                })
            },
            findTrueColumnIndex: function(e, t) {
                var n = l(e.table().node().id).options
                  , e = e.columns().visible().toArray();
                return n.enableBulkSelect && e.shift(),
                t - e.slice(0, t).filter(function(e) {
                    return !e
                }).length
            },
            getNamedDataTableInstance: l,
            initListing: function(e, t) {
                "function" == typeof e && e(),
                eviivo.component.listing.init(t)
            },
            postInitListingTableAll: function() {
                for (var e = 0; e < listingInits.length; e++)
                    listingInits[e][1]()
            },
            postInitListingTableSpecific: t,
            postInitRefreshDataTableSpecific: function(e) {
                e = eviivo.util.getJqueryId(e),
                eviivo.component.debug.printDebug("eviivo.pms.component.listingtable.postInitRefreshDataTableSpecific", e),
                $.fn.dataTable.isDataTable(e) ? (eviivo.component.debug.printDebug("eviivo.pms.component.listingtable.postInitRefreshDataTableSpecific refresh", e),
                null != document.querySelector("".concat(e, " .target-select-all")) && (document.querySelector("".concat(e, " .target-select-all")).checked = !1),
                $(e).DataTable().ajax.reload(eviivo.component.listing.getNamedDataTableInstance(e.replace("#", "")).options.initComplete, !1)) : (eviivo.component.debug.printDebug("eviivo.pms.component.listingtable.postInitRefreshDataTableSpecific setup", e),
                t(e))
            },
            getATablesRowData: function(e, t) {
                return n(e, t).data
            },
            getATablesRowDataViaTableId: function(e, t) {
                return e = eviivo.component.listing.getNamedDataTableInstance(e.replace("#", "")).dataTable.rows().data(),
                e = (e = [].concat.apply([], e)).filter(function(e) {
                    return e.TableId == t
                })
            },
            getATablesRow: n,
            getATablesData: function(e) {
                return eviivo.component.debug.printDebug("listing table get tables data", e),
                e = eviivo.component.listing.getNamedDataTableInstance(e.replace("#", "")).dataTable.rows().data(),
                e = [].concat.apply([], e),
                eviivo.component.debug.printDebug("listing table get tables data", e),
                e
            },
            updateRowData: function(e, t, n) {
                t = i(e, t),
                $(e).dataTable().fnUpdate(n, t, void 0, !1)
            },
            getRowTR: i,
            addRowData: function(e, t) {
                $(e).DataTable().row.add(t).draw(!1)
            },
            addRowsData: function(e, t) {
                $(e).DataTable().rows.add(t).draw(!1)
            },
            deleteRowsData: function(e, t) {
                $(e).DataTable().row($("".concat(e, " tr[data-id='").concat(t, "']"))).remove().draw()
            },
            clear: function(e) {
                $(e).DataTable().clear().draw()
            },
            getSelectedSingleSelectForList: function(e) {
                return e = eviivo.util.getJSId(e),
                $("input[name=".concat(e, "]:checked")).attr("data-id")
            },
            validateSingleSelectForList: function(e) {
                e = eviivo.util.getJSId(e);
                var t = $("input[name=".concat(e, "]:checked")).length;
                return t ? $("input[name=".concat(e, "]")).removeClass("error") : $("input[name=".concat(e, "]")).addClass("error"),
                0 < t
            },
            getSelectedMultiSelectForList: function(e) {
                e = eviivo.util.getJSId(e);
                var t = [];
                return $("input[name=".concat(e, "]:checked")).each(function() {
                    var e = $(this);
                    t.push(e.attr("data-id"))
                }),
                t
            },
            getNoOfItemsFilterShouldHaveToIncludeSearchInput: function() {
                return u
            },
            bindDataTableListeners: a,
            getAllRows: function(e) {
                return $("".concat(e, " tr"))
            },
            getATablesSelectedData: function(e) {
                eviivo.component.debug.printDebug("listing table get tables data", e);
                e = null == (e = null == (e = eviivo.component.listing.getNamedDataTableInstance(e.replace("#", ""))) ? void 0 : e.dataTable) || null == (e = e.rows({
                    selected: !0
                })) ? void 0 : e.data(),
                e = [].concat.apply([], e);
                return eviivo.component.debug.printDebug("listing table get tables data", e),
                e
            },
            doesListTableHaveAnySelectedData: function(e) {
                return 0 < (null == (e = eviivo.component.listing.getATablesSelectedData(e)) ? void 0 : e.length)
            }
        })
    },
    9008: function() {
        function a(e) {
            var t, n, i, o = eviivo.component.listing.getNamedDataTableInstance(e), a = o.dataTable, o = o.options;
            o.enableBulkSelect && (t = o.resources,
            i = a.page.info(),
            0 < $("#".concat(e, "_wrapper .s-select-all-info")).length && $("#".concat(e, "_wrapper .s-select-all-info")).remove(),
            0 < i.page || i.recordsTotal > o.noOfRecordsTableShouldHaveToIncludeSelectionInfo) && 0 != (i = a.rows("tr .s-select-row, tr:not(.s-no-select-row)", {
                search: "applied",
                selected: !0
            }).count()) && (o = a.rows("tr .s-select-row, tr:not(.s-no-select-row)", {
                search: "applied"
            }).count(),
            a = "<span class='s-select-all-count'>(".concat(i, ") ").concat(t.selected, ".</span>"),
            n = i != o ? "<a class='s-select-all-across-pagination cp-table_toolbar-action-link'>".concat(t.btnSelectAll, " ").concat(o, "</a>") : "",
            i = i == o ? "<a class='s-clear-all-across-pagination cp-table_toolbar-action-link'>".concat(t.btnDeselectAll, "</a>") : "",
            o = "<span class='s-select-all-info cp-table_toolbar-select-all'>".concat(a).concat(n).concat(i, "</span>"),
            0 < $("#".concat(e, "_wrapper .cp-table_toolbar")).length ? $("#".concat(e, "_wrapper .cp-table_toolbar #").concat(e, "_filter")).prepend(o) : $('<div class="cp-table_toolbar"><div class="cp-table_toolbar-actions">'.concat(o, "</div></div>")).insertBefore("#".concat(e)),
            $("#".concat(e, "_wrapper")).off("click", ".s-select-all-across-pagination").on("click", ".s-select-all-across-pagination", function() {
                l(e, !0)
            }),
            $("#".concat(e, "_wrapper")).off("click", ".s-clear-all-across-pagination").on("click", ".s-clear-all-across-pagination", function() {
                l(e, !1)
            }))
        }
        function l(e, t) {
            var n = eviivo.component.listing.getNamedDataTableInstance(e)
              , i = n.dataTable;
            n.options;
            t ? i.rows("tr .s-select-row, tr:not(.s-no-select-row)", {
                search: "applied"
            }).select() : i.rows({
                search: "applied"
            }).deselect(),
            a(e)
        }
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.selectAll = window.eviivo.component.listing.selectAll || {},
        window.eviivo.component.listing.selectAll = {
            selectAllRows: function(e) {
                var t = $(this).closest("table").attr("id")
                  , n = eviivo.component.listing.getNamedDataTableInstance(t)
                  , i = n.dataTable;
                n.options,
                e.target.checked ? i.rows("tr .s-select-row, tr:not(.s-no-select-row)", {
                    search: "applied",
                    page: "current"
                }).select() : i.rows({
                    search: "applied",
                    page: "current"
                }).deselect(),
                a(t)
            },
            updateSelectedCount: function(e) {
                var t = e.find(".s-selected")
                  , n = e.find(".s-select-count")
                  , i = (o = e.find(".s-multi-select-container")).find("li").length
                  , o = o.find("input:checked").length
                  , a = eviivo.component.listing.getNamedDataTableInstance(e.closest("table").attr("id"));
                null != a && (a = a.options.resources,
                e = e.find(".th-filter"),
                0 < o ? (e.addClass("active"),
                t.removeClass("hide"),
                o === i ? n.html(a.labelAll) : n.html(o + "/" + i)) : (e.removeClass("active"),
                t.addClass("hide")))
            },
            selectAllRowsAcrossPaginatedTable: l,
            updateTableSelectionData: a,
            deselectAllRowsAcrossPaginatedTable: function(e) {
                e = e.replace("#", ""),
                eviivo.component.listing.getNamedDataTableInstance(e.replace("#", "")).dataTable.rows().deselect(),
                a(e)
            },
            selectSpecific: function(e, t) {
                var n, i, o;
                null != e && 0 != $(e).length && null != t && 0 != t.length && (e = e.replace("#", ""),
                n = eviivo.component.listing.getNamedDataTableInstance(e).dataTable,
                i = "",
                o = "tr[data-id='{0}']",
                t.forEach(function(e, t) {
                    i = (1 <= t ? "".concat(i, ",") : "").concat(o.format(e))
                }),
                n.rows(i).select(),
                a(e))
            }
        }
    },
    1863: function() {
        var t;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.view = window.eviivo.component.listing.view || {},
        window.eviivo.component.listing.view = (t = ".s-listing-table-view",
        options = {},
        defaultOptions = {},
        {
            init: function(e) {
                "function" == typeof (null == (e = options = $.extend(defaultOptions, e)) ? void 0 : e.viewButtonFunc) && $(options.tableId).on("click", t, options.viewButtonFunc)
            }
        })
    },
    5687: function() {
        function t(e) {
            e = $(e.target).closest(n.dropdown);
            $(n.dropdown).removeClass(i.active),
            e.toggleClass(i.active)
        }
        var a, l, c, s, n, i;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.listing = window.eviivo.component.listing || {},
        window.eviivo.component.listing.rowActions = window.eviivo.component.listing.rowActions || {},
        window.eviivo.component.listing.rowActions = (a = '<a href="{0}" class="{1}" data-id="{2}" {3}><svg class=" {4}"><use href="#{4}"></use></svg>{5}</a>',
        l = '<li class="cp-table_action-interchange" data-id="{0}">{1}</li>',
        c = 'title="{0}" data-tooltip="title" data-tooltip-title="{0}" data-tooltip-pos="top"',
        s = "<span>{0}</span>",
        n = {
            rowMenuSelector: ".s-trigger-inline-menu",
            dropdown: ".cp-table_action-select"
        },
        i = {
            active: "cp-table_action-list-open"
        },
        {
            init: function(e) {
                e = e,
                $(e).off("click", n.rowMenuSelector, t).on("click", n.rowMenuSelector, t),
                $(e).on("mouseup", function(e) {
                    var t = $(i.active);
                    t.is(e.target) || 0 !== t.has(e.target).length || $(n.dropdown).removeClass(i.active)
                })
            },
            create: function(e, t, n, i, o) {
                var a, e = eviivo.component.listing.getNamedDataTableInstance(e).options;
                $(t).find("td.s-complex-actions").append('<div class="cp-table_action-select cp-table_action-item s-row-action"><button class="cp-table_action s-trigger-inline-menu" data-id="' + o + '"><svg class="icon-ic-expand-menu"><use href="#icon-ic-expand-menu"></use></svg></button><ul class="cp-table_action-list"></ul></div>'),
                e.enableEditButton && (a = "" != e.editButtonTooltip ? c.format(e.editButtonTooltip) : "",
                a = l.format(o, eviivo.component.listing.rowActions.createEditButton(e.baseBrowserUrl, n, "", a, e.editButtonFunc, s.format("Edit"))),
                $(t).find("td.s-complex-actions").find("ul").append(a)),
                $(t).find("td.s-complex-actions").find("ul").append(i),
                e.enableDeleteButton && (a = "" != e.deleteButtonTooltip ? c.format(e.deleteButtonTooltip) : "",
                i = '<li class="cp-table_action-list__divider cp-table_action-interchange"></li>' + l.format(o, eviivo.component.listing.rowActions.createDeleteButton(n, "", a, s.format("Delete"))),
                $(t).find("td.s-complex-actions").find("ul").append(i))
            },
            createEditButton: function(e, t, n, i, o) {
                return a.format(o ? "javascript:;" : e + "edit/" + t, "s-listing-table-edit " + n, t, i, "icon-ic-notes", 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : "")
            },
            createViewButton: function(e, t, n, i, o) {
                return a.format(o ? "javascript:;" : e + t, "s-listing-table-view " + n, t, i, "icon-ic-eye-outline", "")
            },
            createDeleteButton: function(e, t, n) {
                return a.format("javascript:;", "s-listing-table-delete " + t, e, n, "icon-ic-delete", 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : "")
            }
        })
    },
    7368: function() {
        function c(e) {
            return function(e) {
                if (Array.isArray(e))
                    return i(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || function(e, t) {
                var n;
                if (e)
                    return "string" == typeof e ? i(e, t) : "Map" === (n = "Object" === (n = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : n) || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? i(e, t) : void 0
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function i(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++)
                i[n] = e[n];
            return i
        }
        function s(e, t) {
            for (var n = e; n && !n.classList.contains(t) && "BODY" !== n.tagName; )
                n = n.parentNode;
            return n && n.classList.contains(t) ? n : null
        }
        function r(t) {
            function e() {
                var e = document.body
                  , t = ((e = o.withinContainer ? i : e).classList.remove(u.SPINNER_ACTIVE_CLASS),
                d(o));
                0 < (null == t ? void 0 : t.length) && (e = e.classList).remove.apply(e, c(t))
            }
            var n, i, o = Object.assign({}, f, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null);
            o.withinContainer && (i = s(n = document.querySelector(o.container), "s-spinner-container"),
            null != o.container && "" != o.container && null != n || console.error("eviivo.component.loadingSpinners.fullScreen endSpinner -> within container specified but with no valid container"),
            i || (i = n,
            console.warn('eviivo.component.loadingSpinner.fullScreen endSpinner -> within container specified but no parent container with class "s-spinner-container" found')),
            o.inject) && 0 < (n = v.format(n.id)).length && ($(n).prev(".cp-spinner_overlay").remove(),
            $(n).remove());
            0 < o.delayFinish ? setTimeout(function() {
                (g = g.filter(function(e) {
                    return e != t
                })).length < 1 && e()
            }, o.delayFinish) : (g = g.filter(function(e) {
                return e != t
            })).length < 1 && e()
        }
        function d(e) {
            var t = [];
            return e.noOverlay && t.push(u.NO_OVERLAY_CLASS),
            e.clearOverlay && t.push(u.CLEAR_OVERLAY_CLASS),
            e.withinContainer && t.push(u.START_WITHIN_CONTAINER_CLASS),
            t
        }
        var u, v, p, t, f, g;
        window.eviivo = window.eviivo || {},
        window.eviivo.component = window.eviivo.component || {},
        window.eviivo.component.loadingSpinners = window.eviivo.component.loadingSpinners || {},
        window.eviivo.component.loadingSpinners.fullScreen = (t = {
            noOverlay: !(p = '<div class="cp-spinner_overlay"></div>\n                        <div id="{0}-container-spinner" class="cp-spinner">\n                            <div class="cp-spinner_ball cp-spinner_ball__grey">\n                                <svg viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                    <circle cx="50" cy="50" r="50" fill="var(--fill-color)"/>\n                                </svg>\n                            </div>\n                            <div class="cp-spinner_ball cp-spinner_ball__yellow">\n                                <svg viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                    <circle cx="50" cy="50" r="50" fill="var(--fill-color)"/>\n                                </svg>\n                            </div>\n                            <div class="cp-spinner_ball cp-spinner_ball__red">\n                                <svg viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                    <circle cx="50" cy="50" r="50" fill="var(--fill-color)"/>\n                                </svg>\n                            </div>\n                        </div>'),
            clearOverlay: !(v = "#{0}-container-spinner"),
            container: null,
            withinContainer: !(u = {
                SPINNER_ACTIVE_CLASS: "cp-spinner_active",
                START_WITHIN_CONTAINER_CLASS: "cp-spinner_contain-within",
                CLEAR_OVERLAY_CLASS: "cp-spinner_clear-overlay",
                NO_OVERLAY_CLASS: "cp-spinner_no-overlay"
            }),
            id: null,
            inject: !1,
            delayFinish: 0,
            delayStart: 0,
            src: null
        },
        f = {},
        g = [],
        {
            init: function(e) {
                f = Object.assign(t, e)
            },
            startSpinner: function() {
                var n, e, t, i = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : null, o = Object.assign({}, f, i);
                if (o.withinContainer) {
                    if (t = document.querySelector(o.container),
                    n = s(t, "s-spinner-container"),
                    null == o.container || "" == o.container || null == t)
                        return void console.error("eviivo.component.loadingSpinners.fullScreen startSpinner -> within container specified but with no valid container");
                    n || (n = t,
                    console.warn('eviivo.component.loadingSpinner.fullScreen startSpinner -> within container specified but no parent container with class "s-spinner-container" found, defaulting to table')),
                    o.inject && (e = n,
                    t = t.id,
                    null == document.querySelector(v.format(t))) && $(e).append(p.format(t))
                }
                function a() {
                    var e = document.body
                      , t = ((e = o.withinContainer ? n : e).classList.add(u.SPINNER_ACTIVE_CLASS),
                    d(o));
                    0 < (null == t ? void 0 : t.length) && (e = e.classList).add.apply(e, c(t))
                }
                var l = (new Date).getTime();
                return g.push(l),
                0 < o.delayStart ? setTimeout(function() {
                    a()
                }, o.delayStart) : a(),
                function() {
                    return r(l, i)
                }
            },
            endSpinner: r,
            postInitLoad: function() {
                "function" == typeof loadingSpinnersFullScreenInit && loadingSpinnersFullScreenInit()
            },
            defineLottieSrc: function(e) {
                t.src = e,
                f.src = e
            }
        })
    }
}
  , o = {};
function a(e) {
    var t = o[e];
    return void 0 !== t || (t = o[e] = {
        exports: {}
    },
    n[e](t, t.exports, a)),
    t.exports
}
a.n = function(e) {
    var t = e && e.__esModule ? function() {
        return e.default
    }
    : function() {
        return e
    }
    ;
    return a.d(t, {
        a: t
    }),
    t
}
,
a.d = function(e, t) {
    for (var n in t)
        a.o(t, n) && !a.o(e, n) && Object.defineProperty(e, n, {
            enumerable: !0,
            get: t[n]
        })
}
,
a.o = function(e, t) {
    return Object.prototype.hasOwnProperty.call(e, t)
}
,
function() {
    "use strict";
    a(5124),
    a(7914),
    a(3278),
    a(9713),
    a(9186),
    a(1863),
    a(2533),
    a(9008),
    a(5687),
    a(5808),
    a(5032),
    a(7890),
    a(2197),
    a(2953),
    a(7368)
}();
//# sourceMappingURL=componentsP2.min.js.map
